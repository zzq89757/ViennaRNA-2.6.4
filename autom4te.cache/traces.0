m4trace:/usr/share/aclocal/ltargz.m4:12: -1- AC_DEFUN([LT_FUNC_ARGZ], [
AC_CHECK_HEADERS([argz.h], [], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_TYPES([error_t],
  [],
  [AC_DEFINE([error_t], [int],
   [Define to a type to use for 'error_t' if it is not otherwise available.])
   AC_DEFINE([__error_t_defined], [1], [Define so that glibc/gnulib argp.h
    does not typedef error_t.])],
  [#if defined(HAVE_ARGZ_H)
#  include <argz.h>
#endif])

LT_ARGZ_H=
AC_CHECK_FUNCS([argz_add argz_append argz_count argz_create_sep argz_insert \
	argz_next argz_stringify], [], [LT_ARGZ_H=lt__argz.h; AC_LIBOBJ([lt__argz])])

dnl if have system argz functions, allow forced use of
dnl libltdl-supplied implementation (and default to do so
dnl on "known bad" systems). Could use a runtime check, but
dnl (a) detecting malloc issues is notoriously unreliable
dnl (b) only known system that declares argz functions,
dnl     provides them, yet they are broken, is cygwin
dnl     releases prior to 16-Mar-2007 (1.5.24 and earlier)
dnl So, it's more straightforward simply to special case
dnl this for known bad systems.
AS_IF([test -z "$LT_ARGZ_H"],
    [AC_CACHE_CHECK(
        [if argz actually works],
        [lt_cv_sys_argz_works],
        [[case $host_os in #(
	 *cygwin*)
	   lt_cv_sys_argz_works=no
	   if test no != "$cross_compiling"; then
	     lt_cv_sys_argz_works="guessing no"
	   else
	     lt_sed_extract_leading_digits='s/^\([0-9\.]*\).*/\1/'
	     save_IFS=$IFS
	     IFS=-.
	     set x `uname -r | sed -e "$lt_sed_extract_leading_digits"`
	     IFS=$save_IFS
	     lt_os_major=${2-0}
	     lt_os_minor=${3-0}
	     lt_os_micro=${4-0}
	     if test 1 -lt "$lt_os_major" \
		|| { test 1 -eq "$lt_os_major" \
		  && { test 5 -lt "$lt_os_minor" \
		    || { test 5 -eq "$lt_os_minor" \
		      && test 24 -lt "$lt_os_micro"; }; }; }; then
	       lt_cv_sys_argz_works=yes
	     fi
	   fi
	   ;; #(
	 *) lt_cv_sys_argz_works=yes ;;
	 esac]])
     AS_IF([test yes = "$lt_cv_sys_argz_works"],
        [AC_DEFINE([HAVE_WORKING_ARGZ], 1,
                   [This value is set to 1 to indicate that the system argz facility works])],
        [LT_ARGZ_H=lt__argz.h
        AC_LIBOBJ([lt__argz])])])

AC_SUBST([LT_ARGZ_H])
])
m4trace:/usr/share/aclocal/ltdl.m4:16: -1- AC_DEFUN([LT_CONFIG_LTDL_DIR], [AC_BEFORE([$0], [LTDL_INIT])
_$0($*)
])
m4trace:/usr/share/aclocal/ltdl.m4:68: -1- AC_DEFUN([LTDL_CONVENIENCE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AU_DEFUN([AC_LIBLTDL_CONVENIENCE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_CONVENIENCE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:124: -1- AC_DEFUN([LTDL_INSTALLABLE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AU_DEFUN([AC_LIBLTDL_INSTALLABLE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_INSTALLABLE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:213: -1- AC_DEFUN([_LT_LIBOBJ], [
  m4_pattern_allow([^_LT_LIBOBJS$])
  _LT_LIBOBJS="$_LT_LIBOBJS $1.$ac_objext"
])
m4trace:/usr/share/aclocal/ltdl.m4:226: -1- AC_DEFUN([LTDL_INIT], [dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

dnl We need to keep our own list of libobjs separate from our parent project,
dnl and the easiest way to do that is redefine the AC_LIBOBJs macro while
dnl we look for our own LIBOBJs.
m4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))
m4_pushdef([AC_LIBSOURCES])

dnl If not otherwise defined, default to the 1.5.x compatible subproject mode:
m4_if(_LTDL_MODE, [],
        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))
        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\(subproject\|\(non\)?recursive\)])],
                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])

AC_ARG_WITH([included_ltdl],
    [AS_HELP_STRING([--with-included-ltdl],
                    [use the GNU ltdl sources included here])])

if test yes != "$with_included_ltdl"; then
  # We are not being forced to use the included libltdl sources, so
  # decide whether there is a useful installed version we can use.
  AC_CHECK_HEADER([ltdl.h],
      [AC_CHECK_DECL([lt_dlinterface_register],
	   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],
	       [with_included_ltdl=no],
	       [with_included_ltdl=yes])],
	   [with_included_ltdl=yes],
	   [AC_INCLUDES_DEFAULT
	    #include <ltdl.h>])],
      [with_included_ltdl=yes],
      [AC_INCLUDES_DEFAULT]
  )
fi

dnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE
dnl was called yet, then for old times' sake, we assume libltdl is in an
dnl eponymous directory:
AC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])

AC_ARG_WITH([ltdl_include],
    [AS_HELP_STRING([--with-ltdl-include=DIR],
                    [use the ltdl headers installed in DIR])])

if test -n "$with_ltdl_include"; then
  if test -f "$with_ltdl_include/ltdl.h"; then :
  else
    AC_MSG_ERROR([invalid ltdl include directory: '$with_ltdl_include'])
  fi
else
  with_ltdl_include=no
fi

AC_ARG_WITH([ltdl_lib],
    [AS_HELP_STRING([--with-ltdl-lib=DIR],
                    [use the libltdl.la installed in DIR])])

if test -n "$with_ltdl_lib"; then
  if test -f "$with_ltdl_lib/libltdl.la"; then :
  else
    AC_MSG_ERROR([invalid ltdl library directory: '$with_ltdl_lib'])
  fi
else
  with_ltdl_lib=no
fi

case ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in
  ,yes,no,no,)
	m4_case(m4_default(_LTDL_TYPE, [convenience]),
	    [convenience], [_LTDL_CONVENIENCE],
	    [installable], [_LTDL_INSTALLABLE],
	  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])
	;;
  ,no,no,no,)
	# If the included ltdl is not to be used, then use the
	# preinstalled libltdl we found.
	AC_DEFINE([HAVE_LTDL], [1],
	  [Define this if a modern libltdl is already installed])
	LIBLTDL=-lltdl
	LTDLDEPS=
	LTDLINCL=
	;;
  ,no*,no,*)
	AC_MSG_ERROR(['--with-ltdl-include' and '--with-ltdl-lib' options must be used together])
	;;
  *)	with_included_ltdl=no
	LIBLTDL="-L$with_ltdl_lib -lltdl"
	LTDLDEPS=
	LTDLINCL=-I$with_ltdl_include
	;;
esac
INCLTDL=$LTDLINCL

# Report our decision...
AC_MSG_CHECKING([where to find libltdl headers])
AC_MSG_RESULT([$LTDLINCL])
AC_MSG_CHECKING([where to find libltdl library])
AC_MSG_RESULT([$LIBLTDL])

_LTDL_SETUP

dnl restore autoconf definition.
m4_popdef([AC_LIBOBJ])
m4_popdef([AC_LIBSOURCES])

AC_CONFIG_COMMANDS_PRE([
    _ltdl_libobjs=
    _ltdl_ltlibobjs=
    if test -n "$_LT_LIBOBJS"; then
      # Remove the extension.
      _lt_sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $_LT_LIBOBJS; do echo "$i"; done | sed "$_lt_sed_drop_objext" | sort -u`; do
        _ltdl_libobjs="$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext"
        _ltdl_ltlibobjs="$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo"
      done
    fi
    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])
    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])
])

# Only expand once:
m4_define([LTDL_INIT])
])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AC_DEFUN([AC_LIB_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIB_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AC_DEFUN([AC_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AC_DEFUN([LT_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `LT_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:367: -1- AC_DEFUN([_LTDL_SETUP], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl
AC_REQUIRE([LT_SYS_MODULE_PATH])dnl
AC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl
AC_REQUIRE([LT_LIB_DLLOAD])dnl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
AC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl
AC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl
AC_REQUIRE([LT_FUNC_ARGZ])dnl

m4_require([_LT_CHECK_OBJDIR])dnl
m4_require([_LT_HEADER_DLFCN])dnl
m4_require([_LT_CHECK_DLPREOPEN])dnl
m4_require([_LT_DECL_SED])dnl

dnl Don't require this, or it will be expanded earlier than the code
dnl that sets the variables it relies on:
_LT_ENABLE_INSTALL

dnl _LTDL_MODE specific code must be called at least once:
_LTDL_MODE_DISPATCH

# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS
# the user used.  This is so that ltdl.h can pick up the parent projects
# config.h file, The first file in AC_CONFIG_HEADERS must contain the
# definitions required by ltdl.c.
# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).
AC_CONFIG_COMMANDS_PRE([dnl
m4_pattern_allow([^LT_CONFIG_H$])dnl
m4_ifset([AH_HEADER],
    [LT_CONFIG_H=AH_HEADER],
    [m4_ifset([AC_LIST_HEADERS],
	    [LT_CONFIG_H=`echo "AC_LIST_HEADERS" | $SED 's|^[[      ]]*||;s|[[ :]].*$||'`],
	[])])])
AC_SUBST([LT_CONFIG_H])

AC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],
	[], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])
AC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])

m4_pattern_allow([LT_LIBEXT])dnl
AC_DEFINE_UNQUOTED([LT_LIBEXT],["$libext"],[The archive extension])

name=
eval "lt_libprefix=\"$libname_spec\""
m4_pattern_allow([LT_LIBPREFIX])dnl
AC_DEFINE_UNQUOTED([LT_LIBPREFIX],["$lt_libprefix"],[The archive prefix])

name=ltdl
eval "LTDLOPEN=\"$libname_spec\""
AC_SUBST([LTDLOPEN])
])
m4trace:/usr/share/aclocal/ltdl.m4:443: -1- AC_DEFUN([LT_SYS_DLOPEN_DEPLIBS], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_CACHE_CHECK([whether deplibs are loaded by dlopen],
  [lt_cv_sys_dlopen_deplibs],
  [# PORTME does your system automatically load deplibs for dlopen?
  # or its logical equivalent (e.g. shl_load for HP-UX < 11)
  # For now, we just catch OSes we know something about -- in the
  # future, we'll try test this programmatically.
  lt_cv_sys_dlopen_deplibs=unknown
  case $host_os in
  aix3*|aix4.1.*|aix4.2.*)
    # Unknown whether this is true for these versions of AIX, but
    # we want this 'case' here to explicitly catch those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  aix[[4-9]]*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  amigaos*)
    case $host_cpu in
    powerpc)
      lt_cv_sys_dlopen_deplibs=no
      ;;
    esac
    ;;
  bitrig*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  darwin*)
    # Assuming the user has installed a libdl from somewhere, this is true
    # If you are looking for one http://www.opendarwin.org/projects/dlcompat
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  freebsd* | dragonfly*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)
    # GNU and its variants, using gnu ld.so (Glibc)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  hpux10*|hpux11*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  interix*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  irix[[12345]]*|irix6.[[01]]*)
    # Catch all versions of IRIX before 6.2, and indicate that we don't
    # know how it worked for any of those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  irix*)
    # The case above catches anything before 6.2, and it's known that
    # at 6.2 and later dlopen does load deplibs.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  netbsd* | netbsdelf*-gnu)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  openbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  osf[[1234]]*)
    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,
    # it did *not* use an RPATH in a shared library to find objects the
    # library depends on, so we explicitly say 'no'.
    lt_cv_sys_dlopen_deplibs=no
    ;;
  osf5.0|osf5.0a|osf5.1)
    # dlopen *does* load deplibs and with the right loader patch applied
    # it even uses RPATH in a shared library to search for shared objects
    # that the library depends on, but there's no easy way to know if that
    # patch is installed.  Since this is the case, all we can really
    # say is unknown -- it depends on the patch being installed.  If
    # it is, this changes to 'yes'.  Without it, it would be 'no'.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  osf*)
    # the two cases above should catch all versions of osf <= 5.1.  Read
    # the comments above for what we know about them.
    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library
    # is used to find them so we can finally say 'yes'.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  qnx*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  solaris*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
    libltdl_cv_sys_dlopen_deplibs=yes
    ;;
  esac
  ])
if test yes != "$lt_cv_sys_dlopen_deplibs"; then
 AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],
    [Define if the OS needs help to load dependent libraries for dlopen().])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:545: -1- AU_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:545: -1- AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYS_DLOPEN_DEPLIBS' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:552: -1- AC_DEFUN([LT_SYS_MODULE_EXT], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([what extension is used for runtime loadable modules],
  [libltdl_cv_shlibext],
[
module=yes
eval libltdl_cv_shlibext=$shrext_cmds
module=no
eval libltdl_cv_shrext=$shrext_cmds
  ])
if test -n "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_MODULE_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], ["$libltdl_cv_shlibext"],
    [Define to the extension used for runtime loadable modules, say, ".so".])
fi
if test "$libltdl_cv_shrext" != "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_SHARED_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_EXT], ["$libltdl_cv_shrext"],
    [Define to the shared library suffix, say, ".dylib".])
fi
if test -n "$shared_archive_member_spec"; then
  m4_pattern_allow([LT_SHARED_LIB_MEMBER])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_LIB_MEMBER], ["($shared_archive_member_spec.o)"],
    [Define to the shared archive member specification, say "(shr.o)".])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:580: -1- AU_DEFUN([AC_LTDL_SHLIBEXT], [m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:580: -1- AC_DEFUN([AC_LTDL_SHLIBEXT], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBEXT' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:587: -1- AC_DEFUN([LT_SYS_MODULE_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([what variable specifies run-time module search path],
  [lt_cv_module_path_var], [lt_cv_module_path_var=$shlibpath_var])
if test -n "$lt_cv_module_path_var"; then
  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], ["$lt_cv_module_path_var"],
    [Define to the name of the environment variable that determines the run-time module search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:599: -1- AU_DEFUN([AC_LTDL_SHLIBPATH], [m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:599: -1- AC_DEFUN([AC_LTDL_SHLIBPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:606: -1- AC_DEFUN([LT_SYS_DLSEARCH_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([for the default library search path],
  [lt_cv_sys_dlsearch_path],
  [lt_cv_sys_dlsearch_path=$sys_lib_dlsearch_path_spec])
if test -n "$lt_cv_sys_dlsearch_path"; then
  sys_dlsearch_path=
  for dir in $lt_cv_sys_dlsearch_path; do
    if test -z "$sys_dlsearch_path"; then
      sys_dlsearch_path=$dir
    else
      sys_dlsearch_path=$sys_dlsearch_path$PATH_SEPARATOR$dir
    fi
  done
  m4_pattern_allow([LT_DLSEARCH_PATH])dnl
  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], ["$sys_dlsearch_path"],
    [Define to the system default library search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:627: -1- AU_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:627: -1- AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYSSEARCHPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:653: -1- AC_DEFUN([LT_LIB_DLLOAD], [m4_pattern_allow([^LT_DLLOADERS$])
LT_DLLOADERS=
AC_SUBST([LT_DLLOADERS])

AC_LANG_PUSH([C])
lt_dlload_save_LIBS=$LIBS

LIBADD_DLOPEN=
AC_SEARCH_LIBS([dlopen], [dl],
	[AC_DEFINE([HAVE_LIBDL], [1],
		   [Define if you have the libdl library or equivalent.])
	if test "$ac_cv_search_dlopen" != "none required"; then
	  LIBADD_DLOPEN=-ldl
	fi
	libltdl_cv_lib_dl_dlopen=yes
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H
#  include <dlfcn.h>
#endif
    ]], [[dlopen(0, 0);]])],
	    [AC_DEFINE([HAVE_LIBDL], [1],
		       [Define if you have the libdl library or equivalent.])
	    libltdl_cv_func_dlopen=yes
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
	[AC_CHECK_LIB([svld], [dlopen],
		[AC_DEFINE([HAVE_LIBDL], [1],
			 [Define if you have the libdl library or equivalent.])
	        LIBADD_DLOPEN=-lsvld libltdl_cv_func_dlopen=yes
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"])])])
if test yes = "$libltdl_cv_func_dlopen" || test yes = "$libltdl_cv_lib_dl_dlopen"
then
  lt_save_LIBS=$LIBS
  LIBS="$LIBS $LIBADD_DLOPEN"
  AC_CHECK_FUNCS([dlerror])
  LIBS=$lt_save_LIBS
fi
AC_SUBST([LIBADD_DLOPEN])

LIBADD_SHL_LOAD=
AC_CHECK_FUNC([shl_load],
	[AC_DEFINE([HAVE_SHL_LOAD], [1],
		   [Define if you have the shl_load function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"],
    [AC_CHECK_LIB([dld], [shl_load],
	    [AC_DEFINE([HAVE_SHL_LOAD], [1],
		       [Define if you have the shl_load function.])
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"
	    LIBADD_SHL_LOAD=-ldld])])
AC_SUBST([LIBADD_SHL_LOAD])

case $host_os in
darwin[[1567]].*)
# We only want this for pre-Mac OS X 10.4.
  AC_CHECK_FUNC([_dyld_func_lookup],
	[AC_DEFINE([HAVE_DYLD], [1],
		   [Define if you have the _dyld_func_lookup function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la"])
  ;;
beos*)
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la"
  ;;
cygwin* | mingw* | pw32*)
  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la"
  ;;
esac

AC_CHECK_LIB([dld], [dld_link],
	[AC_DEFINE([HAVE_DLD], [1],
		   [Define if you have the GNU dld library.])
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la"])
AC_SUBST([LIBADD_DLD_LINK])

m4_pattern_allow([^LT_DLPREOPEN$])
LT_DLPREOPEN=
if test -n "$LT_DLLOADERS"
then
  for lt_loader in $LT_DLLOADERS; do
    LT_DLPREOPEN="$LT_DLPREOPEN-dlpreopen $lt_loader "
  done
  AC_DEFINE([HAVE_LIBDLLOADER], [1],
            [Define if libdlloader will be built on this platform])
fi
AC_SUBST([LT_DLPREOPEN])

dnl This isn't used anymore, but set it for backwards compatibility
LIBADD_DL="$LIBADD_DLOPEN $LIBADD_SHL_LOAD"
AC_SUBST([LIBADD_DL])

LIBS=$lt_dlload_save_LIBS
AC_LANG_POP
])
m4trace:/usr/share/aclocal/ltdl.m4:748: -1- AU_DEFUN([AC_LTDL_DLLIB], [m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:748: -1- AC_DEFUN([AC_LTDL_DLLIB], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLLIB' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:756: -1- AC_DEFUN([LT_SYS_SYMBOL_USCORE], [m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
AC_CACHE_CHECK([for _ prefix in compiled symbols],
  [lt_cv_sys_symbol_underscore],
  [lt_cv_sys_symbol_underscore=no
  cat > conftest.$ac_ext <<_LT_EOF
void nm_test_func(){}
int main(){nm_test_func;return 0;}
_LT_EOF
  if AC_TRY_EVAL(ac_compile); then
    # Now try to grab the symbols.
    ac_nlist=conftest.nm
    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $ac_nlist) && test -s "$ac_nlist"; then
      # See whether the symbols have a leading underscore.
      if grep '^. _nm_test_func' "$ac_nlist" >/dev/null; then
        lt_cv_sys_symbol_underscore=yes
      else
        if grep '^. nm_test_func ' "$ac_nlist" >/dev/null; then
	  :
        else
	  echo "configure: cannot find nm_test_func in $ac_nlist" >&AS_MESSAGE_LOG_FD
        fi
      fi
    else
      echo "configure: cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
    fi
  else
    echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
    cat conftest.c >&AS_MESSAGE_LOG_FD
  fi
  rm -rf conftest*
  ])
  sys_symbol_underscore=$lt_cv_sys_symbol_underscore
  AC_SUBST([sys_symbol_underscore])
])
m4trace:/usr/share/aclocal/ltdl.m4:793: -1- AU_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:793: -1- AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYMBOL_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:800: -1- AC_DEFUN([LT_FUNC_DLSYM_USCORE], [AC_REQUIRE([_LT_COMPILER_PIC])dnl	for lt_prog_compiler_wl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl	for lt_cv_sys_symbol_underscore
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl	for libltdl_cv_shlibext
if test yes = "$lt_cv_sys_symbol_underscore"; then
  if test yes = "$libltdl_cv_func_dlopen" || test yes = "$libltdl_cv_lib_dl_dlopen"; then
    AC_CACHE_CHECK([whether we have to add an underscore for dlsym],
      [libltdl_cv_need_uscore],
      [libltdl_cv_need_uscore=unknown
      dlsym_uscore_save_LIBS=$LIBS
      LIBS="$LIBS $LIBADD_DLOPEN"
      libname=conftmod # stay within 8.3 filename limits!
      cat >$libname.$ac_ext <<_LT_EOF
[#line $LINENO "configure"
#include "confdefs.h"
/* When -fvisibility=hidden is used, assume the code has been annotated
   correspondingly for the symbols needed.  */
#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
int fnord () __attribute__((visibility("default")));
#endif
int fnord () { return 42; }]
_LT_EOF

      # ltfn_module_cmds module_cmds
      # Execute tilde-delimited MODULE_CMDS with environment primed for
      # $module_cmds or $archive_cmds type content.
      ltfn_module_cmds ()
      {( # subshell avoids polluting parent global environment
          module_cmds_save_ifs=$IFS; IFS='~'
          for cmd in @S|@1; do
            IFS=$module_cmds_save_ifs
            libobjs=$libname.$ac_objext; lib=$libname$libltdl_cv_shlibext
            rpath=/not-exists; soname=$libname$libltdl_cv_shlibext; output_objdir=.
            major=; versuffix=; verstring=; deplibs=
            ECHO=echo; wl=$lt_prog_compiler_wl; allow_undefined_flag=
            eval $cmd
          done
          IFS=$module_cmds_save_ifs
      )}

      # Compile a loadable module using libtool macro expansion results.
      $CC $pic_flag -c $libname.$ac_ext
      ltfn_module_cmds "${module_cmds:-$archive_cmds}"

      # Try to fetch fnord with dlsym().
      libltdl_dlunknown=0; libltdl_dlnouscore=1; libltdl_dluscore=2
      cat >conftest.$ac_ext <<_LT_EOF
[#line $LINENO "configure"
#include "confdefs.h"
#if HAVE_DLFCN_H
#include <dlfcn.h>
#endif
#include <stdio.h>
#ifndef RTLD_GLOBAL
#  ifdef DL_GLOBAL
#    define RTLD_GLOBAL DL_GLOBAL
#  else
#    define RTLD_GLOBAL 0
#  endif
#endif
#ifndef RTLD_NOW
#  ifdef DL_NOW
#    define RTLD_NOW DL_NOW
#  else
#    define RTLD_NOW 0
#  endif
#endif
int main () {
  void *handle = dlopen ("`pwd`/$libname$libltdl_cv_shlibext", RTLD_GLOBAL|RTLD_NOW);
  int status = $libltdl_dlunknown;
  if (handle) {
    if (dlsym (handle, "fnord"))
      status = $libltdl_dlnouscore;
    else {
      if (dlsym (handle, "_fnord"))
        status = $libltdl_dluscore;
      else
	puts (dlerror ());
    }
    dlclose (handle);
  } else
    puts (dlerror ());
  return status;
}]
_LT_EOF
      if AC_TRY_EVAL(ac_link) && test -s "conftest$ac_exeext" 2>/dev/null; then
        (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null
        libltdl_status=$?
        case x$libltdl_status in
          x$libltdl_dlnouscore) libltdl_cv_need_uscore=no ;;
	  x$libltdl_dluscore) libltdl_cv_need_uscore=yes ;;
	  x*) libltdl_cv_need_uscore=unknown ;;
        esac
      fi
      rm -rf conftest* $libname*
      LIBS=$dlsym_uscore_save_LIBS
    ])
  fi
fi

if test yes = "$libltdl_cv_need_uscore"; then
  AC_DEFINE([NEED_USCORE], [1],
    [Define if dlsym() requires a leading underscore in symbol names.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:907: -1- AU_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:907: -1- AC_DEFUN([AC_LTDL_DLSYM_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLSYM_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal/pkg.m4:58: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:92: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:/usr/share/aclocal/pkg.m4:121: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:139: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $1])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
   	AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
        else 
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])[]dnl
        ])
elif test $pkg_failed = untried; then
     	AC_MSG_RESULT([no])
	m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
        ])
else
	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
	$3
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:208: -1- AC_DEFUN([PKG_CHECK_MODULES_STATIC], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
_save_PKG_CONFIG=$PKG_CONFIG
PKG_CONFIG="$PKG_CONFIG --static"
PKG_CHECK_MODULES($@)
PKG_CONFIG=$_save_PKG_CONFIG[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:226: -1- AC_DEFUN([PKG_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([pkgconfigdir],
    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
    [with_pkgconfigdir=]pkg_default)
AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:/usr/share/aclocal/pkg.m4:248: -1- AC_DEFUN([PKG_NOARCH_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([noarch-pkgconfigdir],
    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
    [with_noarch_pkgconfigdir=]pkg_default)
AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:/usr/share/aclocal/pkg.m4:267: -1- AC_DEFUN([PKG_CHECK_VAR], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl

_PKG_CONFIG([$1], [variable="][$3]["], [$2])
AS_VAR_COPY([$1], [pkg_cv_][$1])

AS_VAR_IF([$1], [""], [$5], [$4])dnl
])
m4trace:/usr/share/aclocal-1.16/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.16'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.16.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.16/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.16.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.16/ar-lib.m4:13: -1- AC_DEFUN([AM_PROG_AR], [AC_BEFORE([$0], [LT_INIT])dnl
AC_BEFORE([$0], [AC_PROG_LIBTOOL])dnl
AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([ar-lib])dnl
AC_CHECK_TOOLS([AR], [ar lib "link -lib"], [false])
: ${AR=ar}

AC_CACHE_CHECK([the archiver ($AR) interface], [am_cv_ar_interface],
  [AC_LANG_PUSH([C])
   am_cv_ar_interface=ar
   AC_COMPILE_IFELSE([AC_LANG_SOURCE([[int some_variable = 0;]])],
     [am_ar_try='$AR cru libconftest.a conftest.$ac_objext >&AS_MESSAGE_LOG_FD'
      AC_TRY_EVAL([am_ar_try])
      if test "$ac_status" -eq 0; then
        am_cv_ar_interface=ar
      else
        am_ar_try='$AR -NOLOGO -OUT:conftest.lib conftest.$ac_objext >&AS_MESSAGE_LOG_FD'
        AC_TRY_EVAL([am_ar_try])
        if test "$ac_status" -eq 0; then
          am_cv_ar_interface=lib
        else
          am_cv_ar_interface=unknown
        fi
      fi
      rm -f conftest.lib libconftest.a
     ])
   AC_LANG_POP([C])])

case $am_cv_ar_interface in
ar)
  ;;
lib)
  # Microsoft lib, so override with the ar-lib wrapper script.
  # FIXME: It is wrong to rewrite AR.
  # But if we don't then we get into trouble of one sort or another.
  # A longer-term fix would be to have automake use am__AR in this case,
  # and then we could set am__AR="$am_aux_dir/ar-lib \$(AR)" or something
  # similar.
  AR="$am_aux_dir/ar-lib $AR"
  ;;
unknown)
  m4_default([$1],
             [AC_MSG_ERROR([could not determine $AR interface])])
  ;;
esac
AC_SUBST([AR])dnl
])
m4trace:/usr/share/aclocal-1.16/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.16/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.16/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.16/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.16/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.16/depout.m4:11: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  AS_CASE([$CONFIG_FILES],
          [*\'*], [eval set x "$CONFIG_FILES"],
          [*], [set x $CONFIG_FILES])
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`AS_ECHO(["$am_mf"]) | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`AS_DIRNAME(["$am_mf"])`
    am_filepart=`AS_BASENAME(["$am_mf"])`
    AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles]) || am_rc=$?
  done
  if test $am_rc -ne 0; then
    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  Try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).])
  fi
  AS_UNSET([am_dirpart])
  AS_UNSET([am_filepart])
  AS_UNSET([am_mf])
  AS_UNSET([am_rc])
  rm -f conftest-deps.mk
}
])
m4trace:/usr/share/aclocal-1.16/depout.m4:62: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"])])
m4trace:/usr/share/aclocal-1.16/dmalloc.m4:12: -1- AC_DEFUN([AM_WITH_DMALLOC], [AC_MSG_CHECKING([if malloc debugging is wanted])
AC_ARG_WITH([dmalloc],
[AS_HELP_STRING([--with-dmalloc],
                [use dmalloc, as in http://www.dmalloc.com])],
[if test "$withval" = yes; then
  AC_MSG_RESULT([yes])
  AC_DEFINE([WITH_DMALLOC], [1],
	    [Define if using the dmalloc debugging malloc package])
  LIBS="$LIBS -ldmalloc"
  LDFLAGS="$LDFLAGS -g"
else
  AC_MSG_RESULT([no])
fi], [AC_MSG_RESULT([no])])
])
m4trace:/usr/share/aclocal-1.16/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <https://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.16/init.m4:186: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.16/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.16/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.16/make.m4:13: -1- AC_DEFUN([AM_MAKE_INCLUDE], [AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
  AS_CASE([$?:`cat confinc.out 2>/dev/null`],
      ['0:this is the am__doit target'],
      [AS_CASE([$s],
          [BSD], [am__include='.include' am__quote='"'],
          [am__include='include' am__quote=''])])
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
AC_MSG_RESULT([${_am_result}])
AC_SUBST([am__include])])
m4trace:/usr/share/aclocal-1.16/make.m4:42: -1- m4_pattern_allow([^am__quote$])
m4trace:/usr/share/aclocal-1.16/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.16/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.16/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.16/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.16/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.16/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.16/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.16/sanity.m4:11: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.16/silent.m4:12: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.16/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.16/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.16/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.16/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/ac_rna.m4:11: -1- AC_DEFUN([AC_RNA_INIT], [

AX_COMPILER_VENDOR
AC_CANONICAL_HOST

AC_ARG_VAR([PERL],[The perl interpreter])
AC_PATH_PROGS([PERL],[$PERL perl],[no])
AS_IF([test "$PERL" == "no"],[
  AC_MSG_ERROR([Perl is required to install and run the ViennaRNA Package])
])

##--------------------------##
## Additional Compile Flags ##
##--------------------------##

AC_LANG_PUSH([C])
AX_CHECK_COMPILE_FLAG([-fno-strict-aliasing], [
  AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_CFLAGS])
],[],[],[])
AC_LANG_POP([C])

AC_LANG_PUSH([C++])
AX_CHECK_COMPILE_FLAG([-fno-strict-aliasing], [
  AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_CXXFLAGS])
],[],[],[])
AC_LANG_POP([C++])

AX_CHECK_LINK_FLAG([-fno-strict-aliasing], [
  AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_LDFLAGS])
], [],[], [])

##------------------##
## Enable Features  ##
##------------------##

RNA_ENABLE_C11
RNA_ENABLE_OSX
RNA_ENABLE_LTO
RNA_ENABLE_SVM
RNA_ENABLE_GSL
RNA_ENABLE_OPENMP
RNA_ENABLE_PTHREADS
RNA_ENABLE_NR_SAMPLE_HASH
RNA_ENABLE_FLOATPF
RNA_ENABLE_DEPRECATION_WARNINGS
RNA_ENABLE_COLORED_TTY
RNA_ENABLE_STATIC_BIN
RNA_ENABLE_SIMD
RNA_ENABLE_VECTORIZE
RNA_ENABLE_MPFR
RNA_ENABLE_NAVIEW

## Set post conditions for feature
## settings

RNA_FEATURE_POST

##--------------------##
## Enable scripting   ##
## language interface ##
##--------------------##

RNA_ENABLE_SWIG_INTERFACES

##------------------##
## Enable Reference ##
## Manual           ##
##------------------##

RNA_ENABLE_DOXYGEN_REFMAN([RNAlib])

##--------------------##
## Enable Tutorial    ##
##--------------------##
RNA_ENABLE_TUTORIAL([tutorial])

##--------------------##
## Enable CLA         ##
##--------------------##
RNA_ENABLE_CLA

##--------------------##
## Enable Unit tests  ##
##--------------------##
RNA_ENABLE_UNIT_TESTS

##----------------------------------##
## Check general build dependencies ##
##----------------------------------##
RNA_CHECK_BUILD_REQUIREMENTS

RNA_COLOR_MAKE

##--------------------##
## Enable Subpackages ##
##--------------------##

RNA_ENABLE_PKG_KINFOLD
RNA_ENABLE_PKG_FORESTER
RNA_ENABLE_PKG_CLUSTER
RNA_ENABLE_PKG_KINWALKER
RNA_ENABLE_PKG_RNALOCMIN
RNA_ENABLE_PKG_RNAXPLORER

##--------------------##
## Prepare Version    ##
## Macros             ##
##--------------------##
VRNA_VERSION_MAJOR=vrna_version_major
VRNA_VERSION_MINOR=vrna_version_minor
VRNA_VERSION_PATCH=vrna_version_patch

AC_SUBST(VRNA_VERSION_MAJOR)
AC_SUBST(VRNA_VERSION_MINOR)
AC_SUBST(VRNA_VERSION_PATCH)

AC_DEFINE_UNQUOTED([VRNA_VERSION], ["$VERSION"], [version of ViennaRNA Package])

##------------------##
## Prepare files    ##
##------------------##

AC_CONFIG_FILES([src/ViennaRNA/vrna_config.h])
AC_CONFIG_FILES([misc/Makefile])
AC_CONFIG_FILES([interfaces/Makefile])
AC_CONFIG_FILES([Makefile RNAlib2.pc])
AC_CONFIG_FILES([src/Utils/Makefile src/bin/Makefile src/Makefile src/ViennaRNA/Makefile])
AC_CONFIG_FILES([src/ViennaRNA/static/Makefile])
AC_CONFIG_FILES([man/Makefile])
AC_CONFIG_FILES([man/cmdlopt.sh],[chmod +x man/cmdlopt.sh])
AC_CONFIG_FILES([doc/doxygen/Makefile doc/Makefile doc/source/man/Makefile doc/CLA/Makefile RNA-Tutorial/Makefile])
AC_CONFIG_FILES([examples/Makefile])
AC_CONFIG_FILES([packaging/viennarna.spec packaging/PKGBUILD])
AC_CONFIG_FILES([packaging/win_installer_archlinux_i686.nsi packaging/win_installer_archlinux_x86_64.nsi])
AC_CONFIG_FILES([packaging/win_installer_fedora_i686.nsi packaging/win_installer_fedora_x86_64.nsi])

])
m4trace:m4/ac_rna.m4:149: -1- AC_DEFUN([AC_RNA_NOTICE], [

# get directory paths

eval _bindir=$(eval printf "%s" $bindir)
eval _libdir=$(eval printf "%s" $libdir)
eval _includedir=$(eval printf "%s" $includedir)
eval _datadir=$(eval printf "%s" $datadir)
eval _mandir=$(eval printf "%s" $mandir)

AS_IF([test $with_perl = "yes"],[
  eval _perl_arch_dir=$(eval printf "%s" "$prefix" ${PERL_ARCH_RELATIVE_INSTALL_DIR})
  eval _perl_lib_dir=$(eval printf "%s" "$prefix" ${PERL_LIB_RELATIVE_INSTALL_DIR})
  ], [
  _perl_arch_dir=""
  _perl_lib_dir=""
  _perl_install="Not to be installed"
])
AS_IF([test $with_python = "yes"],[
  eval _python_arch_dir=$(eval printf "%s" ${py3execdir})
  eval _python_lib_dir=$(eval printf "%s" ${python3dir})
  ],[
    _python_arch_dir=""
    _python_lib_dir=""
    _python_install="Not to be installed $python3_enabled_but_failed"
])
AS_IF([test $with_python2 = "yes"],[
  eval _python2_arch_dir=$(eval printf "%s" ${py2execdir})
  eval _python2_lib_dir=$(eval printf "%s" ${python2dir})
  ],[
    _python2_arch_dir=""
    _python2_lib_dir=""
    _python2_install="Not to be installed $python2_enabled_but_failed"
])
AS_IF([test "x$enable_universal_binary" != "xno"],[
  _osx_arch=$osx_arch
  ],[
  osx_arch="no"
])

AS_IF([test "x$with_doc" != "xno"],[
  eval _docdir=$(eval printf "%s" $docdir)
  AS_IF([test "x$with_doc_html" != "xno"],[
    eval _htmldir=$(eval printf "%s" $htmldir)],[
    _htmldir=""
    ])
  AS_IF([test "x$with_doc_pdf" != "xno"],[
    eval _pdfdir=$(eval printf "%s" $pdfdir)
    eval _pdfdir2=$(eval printf "%s" $_pdfdir)],[
    _pdfdir=""
  ])
  ],[
  _docdir="Not to be installed"
])

AS_IF([test "x$with_tutorial" != "xno"],[
  eval _pdfdir=$(eval printf "%s" $pdfdir)],[
  _pdfdir=""
])


AS_IF([test "x$ac_rna_warning" != "x"],[
  ac_rna_warning="
==================================================
Warning:
$ac_rna_warning
==================================================
"
])


m4_map_args([ AC_RNA_COLOR_RESULT_PACKAGE],
            [kinfold],
            [forester],
            [cluster],
            [rnalocmin],
            [kinwalker],
            [rnaxplorer],
            [svm],
            [gsl],
            [perl],
            [python],
            [python2],
            [doc_pdf],
            [doc_html],
            [tutorial_pdf],
            [tutorial_html],
            [cla_pdf],
            [check])

m4_map_args([ AC_RNA_COLOR_RESULT_FEATURE],
            [mpfr],
            [NRhash],
            [c11],
            [tty_colors],
            [floatpf],
            [warn_deprecated],
            [vectorize],
            [simd],
            [lto],
            [pthreads],
            [openmp],
            [unittests],
            [check_perl],
            [check_python],
            [check_python2],
            [macosx_installer],
            [macosx_sdk])

m4_map_args([ AC_RNA_COLOR_RESULT_SIMPLE],
            [osx_arch],
            [_bindir],
            [_libdir],
            [_includedir],
            [_mandir],
            [_datadir],
            [_docdir],
            [_htmldir],
            [_pdfdir2],
            [_perl_install],
            [_perl_arch_dir],
            [_perl_lib_dir],
            [_python2_install],
            [_python2_arch_dir],
            [_python2_lib_dir],
            [_python_install],
            [_python_arch_dir],
            [_python_lib_dir])

# Notify the user

AC_RNA_STRING_APPEND_FORMAT_BOLD([ac_rna_name_string], [ViennaRNA Package ${PACKAGE_VERSION}])
AC_RNA_STRING_APPEND_FORMAT_BOLD([ac_rna_final_msg], [You can run 'make', 'make check', and 'make install' now!])

AC_MSG_NOTICE([

======================================
    $ac_rna_name_string
======================================

Successfully configured with the following options:

Sub Packages
------------
  * Kinfold                   : ${result_kinfold}
  * RNAforester               : ${result_forester}
  * Analyse{Dists,Seqs}       : ${result_cluster}
  * RNAlocmin                 : ${result_rnalocmin}
  * Kinwalker                 : ${result_kinwalker}
  * RNAxplorer                : ${result_rnaxplorer} ${rnaxplorer_failed}

Extra Libraries
---------------
  * Support Vector Machine    : ${result_svm}
  * GNU Scientific Library    : ${result_gsl}
  * GNU MPFR                  : ${result_mpfr}

Features
--------
  * Use hash for NR Sampling  : ${result_NRhash}
  * C11 features              : ${result_c11}
  * TTY colors                : ${result_tty_colors}
  * Float Precision(PF}       : ${result_floatpf}
  * Deprecation Warnings      : ${result_warn_deprecated}

Optimizations
-------------
  * Auto Vectorization        : ${result_vectorize}
  * Explicit SIMD Extension   : ${result_simd} ${simd_failed}
  * Link Time Optimization    : ${result_lto}
  * POSIX Threads             : ${result_pthreads}
  * OpenMP                    : ${result_openmp}

Scripting Language Interfaces
-----------------------------
  * Perl 5                    : ${result_perl}
  * Python 3.x                : ${result_python}
  * Python 2.x                : ${result_python2}

Documentation
-------------
  * Reference Manual (PDF)    : ${result_doc_pdf} ${doc_pdf_failed}
  * Reference Manual (HTML)   : ${result_doc_html} ${doc_html_failed}
  * Tutorial (PDF)            : ${result_tutorial_pdf} ${tutorial_pdf_failed}
  * Tutorial (HTML)           : ${result_tutorial_html} ${tutorial_html_failed}
  * CLA (PDF)                 : ${result_cla_pdf} ${cla_pdf_failed}

Unit Tests
----------
  * Executable Programs       : ${result_unittests}
  * C-Library                 : ${result_check}
  * Perl 5 Interface          : ${result_check_perl}
  * Python 3.x Interface      : ${result_check_python}
  * Python 2.x Interface      : ${result_check_python2}

MacOS X
-------
  * Universal Binary          : ${result_osx_arch}
  * Installer                 : ${result_macosx_installer}
  * SDK                       : ${result_macosx_sdk}

Install Directories
-------------------
  * Executables               : $result__bindir
  * Libraries                 : $result__libdir
  * Header files              : $result__includedir
  * Extra Data                : $result__datadir
  * Man pages                 : $result__mandir
  * Documentation             : $result__docdir
      (HTML)                  : $result__htmldir
      (PDF)                   : $result__pdfdir2
  * Perl5 Interface           : $result__perl_install
      (binaries)              : $result__perl_arch_dir
      (scripts)               : $result__perl_lib_dir
  * Python 3.x Interface      : $result__python_install
      (binaries)              : $result__python_arch_dir
      (scripts)               : $result__python_lib_dir
  * Python 2.x Interface      : $result__python2_install
      (binaries)              : $result__python2_arch_dir
      (scripts)               : $result__python2_lib_dir
$ac_rna_warning
$ac_rna_final_msg])
])
m4trace:m4/ac_rna_build_requirements.m4:1: -1- AC_DEFUN([RNA_CHECK_BUILD_REQUIREMENTS], [

## Check for any tool required to build source files
##
## These tools should only be required for maintainer builds,
## since the generated files are usually distributed along
## with the distribution tar ball
RNA_CHECK_SRC_BUILDERS

## Check for presence of (or capability to generate) the
## Postscript templates we use for RNA secondary structure-
## and Dot plots.
RNA_CHECK_POSTSCRIPT_TEMPLATES

## Check for presence of (or capability to generate) the
## SVG templates we use for RNA secondary structure-
## and Dot plots.
RNA_CHECK_SVG_TEMPLATES

RNA_CHECK_PARAMETER_FILES

RNA_CHECK_DLIB

RNA_CHECK_SWIG_SVM
])
m4trace:m4/ac_rna_build_requirements.m4:28: -1- AC_DEFUN([RNA_CHECK_SRC_BUILDERS], [
    AC_ARG_VAR([XXD], [the 'xxd' program to convert text files into C include header files])
    AC_PATH_PROG([XXD], [xxd], [no])
    AC_SUBST([XXD])
    AM_CONDITIONAL(VRNA_AM_SWITCH_HAS_XXD, test "x$XXD" != "xno")

    AC_ARG_VAR([GENGETOPT], [the 'gengetopt' program to generate command line argument parsers for executable programs])
    AC_PATH_PROG([GENGETOPT], [gengetopt], [no])
    AC_SUBST([GENGETOPT])
    AM_CONDITIONAL(VRNA_AM_SWITCH_HAS_GENGETOPT, test "x$GENGETOPT" != "xno")

    AC_ARG_VAR([HELP2MAN], [the 'help2man' script to generate man pages from command line options of our executable programs])
    AC_PATH_PROG([HELP2MAN], [help2man], [no])
    AC_SUBST([HELP2MAN])
    AM_CONDITIONAL(VRNA_AM_SWITCH_BUILD_MANPAGES, test "x$HELP2MAN" != "xno" && test "x$GENGETOPT" != "xno")
])
m4trace:m4/ac_rna_build_requirements.m4:46: -1- AC_DEFUN([RNA_CHECK_POSTSCRIPT_TEMPLATES], [
    STATIC_FILE_DIR="${srcdir}/src/ViennaRNA/static"
    POSTSCRIPT_FILE_LIST="$STATIC_FILE_DIR/ps_templates.txt"

    ## load list of postscript template files and replace '\n' by ' '
    PS_TEMPLATE_FILES=`cat $POSTSCRIPT_FILE_LIST | tr '\012' ' '`
    ## create list of hex postscript template files
    PS_TEMPLATE_FILES_HEX=`AS_ECHO("$PS_TEMPLATE_FILES") | sed 's/\.ps/\.hex/g'`

    if test "x$XXD" = "xno"
    then
        for template in $PS_TEMPLATE_FILES_HEX
        do
            AC_RNA_TEST_FILE($STATIC_FILE_DIR/$template,[],[
                AC_MSG_ERROR([
=================================================
Can't find the postscript hex template

${template}

Make sure you've installed the 'xxd' tool to
generate it from source!
=================================================
])
            ])
        done
    fi

    # prepare substitution string for
    # templates_postscript.h file
    PS_TEMPLATE_CONST=""
    for template in $PS_TEMPLATE_FILES_HEX
    do
      # remove the 'postscript/' prefix
      template_name=`AS_ECHO("$template") | sed 's/postscript\///g'`
      # remove the trailing .hex
      template_name=`AS_ECHO("$template_name") | sed 's/\.hex//g'`

      # create a C variable defintion for the template
      # note [[]] will turn into [] after M4 processed everythin
      PS_TEMPLATE_CONST="$PS_TEMPLATE_CONST
static const unsigned char PS_$template_name[[]] = {
#include \"$template\"
};
"
    done

    # Add templates_postscript.h to the files to be processed by
    # the configure script
    AC_CONFIG_FILES([src/ViennaRNA/static/templates_postscript.h])

    # substitute C variable definitions
    AC_SUBST(PS_TEMPLATE_CONST)
    # hack to avoid placing the multiline PS_TEMPLATE_CONST into any Makefile
    _AM_SUBST_NOTMAKE(PS_TEMPLATE_CONST)

    # substitute file list for static/Makefile.am
    AC_SUBST(PS_TEMPLATE_FILES)
    AC_SUBST(PS_TEMPLATE_FILES_HEX)
])
m4trace:m4/ac_rna_build_requirements.m4:107: -1- AC_DEFUN([RNA_CHECK_SVG_TEMPLATES], [
    STATIC_FILE_DIR="${srcdir}/src/ViennaRNA/static"
    SVG_FILE_LIST="$STATIC_FILE_DIR/svg_templates.txt"

    ## load list of svg template files and replace '\n' by ' '
    SVG_TEMPLATE_FILES=`cat $SVG_FILE_LIST | tr '\012' ' '`
    ## create list of hex postscript template files
    SVG_TEMPLATE_FILES_HEX=`AS_ECHO("$SVG_TEMPLATE_FILES") | sed 's/\.svg/\.hex/g'`

    if test "x$XXD" = "xno"
    then
        for template in $SVG_TEMPLATE_FILES_HEX
        do
            AC_RNA_TEST_FILE($STATIC_FILE_DIR/$template,[],[
                AC_MSG_ERROR([
=================================================
Can't find the svg hex template

${template}

Make sure you've installed the 'xxd' tool to
generate it from source!
=================================================
])
            ])
        done
    fi

    # prepare substitution string for
    # templates_svg.h file
    SVG_TEMPLATE_CONST=""
    for template in $SVG_TEMPLATE_FILES_HEX
    do
      # remove the 'svg/' prefix
      template_name=`AS_ECHO("$template") | sed 's/svg\///g'`
      # remove the trailing .hex
      template_name=`AS_ECHO("$template_name") | sed 's/\.hex//g'`

      # create a C variable defintion for the template
      # note [[]] will turn into [] after M4 processed everythin
      SVG_TEMPLATE_CONST="$SVG_TEMPLATE_CONST
static const char SVG_$template_name[[]] = {
#include \"$template\"
};
"
    done

    # Add templates_svg.h to the files to be processed by
    # the configure script
    AC_CONFIG_FILES([src/ViennaRNA/static/templates_svg.h])

    # substitute C variable definitions
    AC_SUBST(SVG_TEMPLATE_CONST)
    # hack to avoid placing the multiline SVG_TEMPLATE_CONST into any Makefile
    _AM_SUBST_NOTMAKE(SVG_TEMPLATE_CONST)

    # substitute file list for static/Makefile.am
    AC_SUBST(SVG_TEMPLATE_FILES)
    AC_SUBST(SVG_TEMPLATE_FILES_HEX)
])
m4trace:m4/ac_rna_build_requirements.m4:168: -1- AC_DEFUN([RNA_CHECK_PARAMETER_FILES], [
    STATIC_FILE_DIR="${srcdir}/src/ViennaRNA/static"
    PARAMETER_FILE_LIST="${srcdir}/misc/parameter_files.txt"

    ## load list of energy parameter files and replace '\n' by ' '
    PARAMETER_FILES=`cat $PARAMETER_FILE_LIST | sed 's/^/misc\//' | tr '\012' ' '`
    ## create list of hex energy parameter files
    PARAMETER_FILES_HEX=`AS_ECHO("$PARAMETER_FILES") | sed -E 's/\.par|\.json/\.hex/g'`

    if test "x$XXD" = "xno"
    then
        for parfile in $PARAMETER_FILES_HEX
        do
            AC_RNA_TEST_FILE($STATIC_FILE_DIR/$parfile,[],[
                AC_MSG_ERROR([
=================================================
Can't find the energy parameter hex file

${parfile}

Make sure you've installed the 'xxd' tool to
generate it from source!
=================================================
])
            ])
        done
    fi

    # prepare substitution string for
    # energy_parameter_sets.h file
    ENERGY_PARAMETER_CONST=""
    for parfile in $PARAMETER_FILES_HEX
    do
      # remove the 'parameters/' prefix
      parfile_name=`AS_ECHO("$parfile") | sed 's/misc\///g'`
      # remove the trailing .hex
      parfile_name=`AS_ECHO("$parfile_name") | sed 's/.hex//g'`

      # create a C variable defintion for the template
      # note [[]] will turn into [] after M4 processed everythin
      ENERGY_PARAMETER_CONST="$ENERGY_PARAMETER_CONST
static const unsigned char parameter_set_$parfile_name[[]] = {
#include \"$parfile\"
};
"
      # create a SWIG Python output typemap for the template
      # note [[]] will turn into [] after M4 processed everythin
      SWIG_ENERGY_PARAMETER_CONST_PYTHON="$SWIG_ENERGY_PARAMETER_CONST_PYTHON
%typemap(varout) const unsigned char parameter_set_$parfile_name[[]] {
  std::string str( parameter_set_$parfile_name, parameter_set_$parfile_name + sizeof (parameter_set_$parfile_name) / sizeof (parameter_set_$parfile_name[[0]]) );
  swig_result = PyUnicode_FromString(str.c_str());
}
"
      # create a SWIG Perl 5 output typemap for the template
      # note [[]] will turn into [] after M4 processed everythin
      SWIG_ENERGY_PARAMETER_CONST_PERL5="$SWIG_ENERGY_PARAMETER_CONST_PERL5
%typemap(varout) const unsigned char parameter_set_$parfile_name[[]] {
  std::string str( parameter_set_$parfile_name, parameter_set_$parfile_name + sizeof (parameter_set_$parfile_name) / sizeof (parameter_set_$parfile_name[[0]]) );
  sv_setpv(swig_result, str.c_str());
}
"
    done

    SWIG_ENERGY_PARAMETER_CONST_PYTHON=`AS_ECHO("$SWIG_ENERGY_PARAMETER_CONST_PYTHON") | sed 's/swig_result/$result/g'`
    SWIG_ENERGY_PARAMETER_CONST_PERL5=`AS_ECHO("$SWIG_ENERGY_PARAMETER_CONST_PERL5") | sed 's/swig_result/$result/g'`

    # Add templates_postscript.h to the files to be processed by
    # the configure script
    AC_CONFIG_FILES([src/ViennaRNA/static/energy_parameter_sets.h])
    AC_CONFIG_FILES([interfaces/parameter_sets.i])

    # substitute C variable definitions
    AC_SUBST(ENERGY_PARAMETER_CONST)
    AC_SUBST(SWIG_ENERGY_PARAMETER_CONST_PYTHON)
    AC_SUBST(SWIG_ENERGY_PARAMETER_CONST_PERL5)
    # hack to avoid placing the multiline ENERGY_PARAMETER_CONST into any Makefile
    _AM_SUBST_NOTMAKE(ENERGY_PARAMETER_CONST)
    _AM_SUBST_NOTMAKE(SWIG_ENERGY_PARAMETER_CONST_PYTHON)
    _AM_SUBST_NOTMAKE(SWIG_ENERGY_PARAMETER_CONST_PERL5)

    # substitute file list for static/Makefile.am
    AC_SUBST(PARAMETER_FILES)
    AC_SUBST(PARAMETER_FILES_HEX)
])
m4trace:m4/ac_rna_build_requirements.m4:254: -1- AC_DEFUN([RNA_CHECK_DLIB], [
  AX_CXX_COMPILE_STDCXX(17, noext, mandatory)
  DLIB_VERSION=19.24
  DLIB_DIR="dlib-${DLIB_VERSION}"
  DLIB_PATH="${srcdir}/src/${DLIB_DIR}"
  DLIB_SRC_FILE="${DLIB_PATH}/dlib/all/source.cpp"

  AC_RNA_TEST_FILE($DLIB_SRC_FILE,[],[
    AC_MSG_ERROR([
=================================================
Can't find dlib's source.cpp

Make sure you've unpacked 'src/dlib-${DLIB_VERSION}.tar.bz2'!

Usually, you only need to execute the following command:

tar -xjf src/dlib-${DLIB_VERSION}.tar.bz2 -C src/
=================================================
])
  ])

  AC_SUBST(DLIB_CPPFLAGS, "-I\$(top_srcdir)/src/${DLIB_DIR} -DDLIB_NO_GUI_SUPPORT")
  AC_SUBST(DLIB_DIR)
  AC_SUBST(DLIB_VERSION)

])
m4trace:m4/ac_rna_build_requirements.m4:287: -1- AC_DEFUN([RNA_CHECK_SWIG_SVM], [
  RNA_PACKAGE_IF_DISABLED([svm],[
      AS_IF([test "x$with_swig" == "xyes" && test "x$has_swig" != "xyes"], [
    AC_MSG_ERROR([
=================================================
Compilation requirements missing!

You deactivated SVM support but this requires the
scripting language interface wrappers (Perl 5, Python)
to be re-generated!

Please either install the 'swig' program to enable
re-generation of the respective wrapper files or:

a) deactivate the scripting language interfaces
   alltogether using the '--without-swig' configure
   option.
b) leave SVM support enabled by omitting the
   '--without-svm' configure option
=================================================
])        
      ])
    ])
  ])
m4trace:m4/ac_rna_cla.m4:4: -1- AC_DEFUN([RNA_ENABLE_CLA], [

AC_REQUIRE([RNA_LATEX_ENVIRONMENT])

RNA_ADD_PACKAGE([cla_pdf],
                [PDF Contributors License Agreement],
                [yes])
RNA_ADD_PACKAGE([cla],
                [ViennaRNA Contributors License Agreement],
                [yes],
                [
                  with_cla=no
                  with_cla_pdf=no
                ],
                [])


# setup everything in order to generate the doxygen configfile
RNA_PACKAGE_IF_ENABLED([cla],[

  AC_SUBST([CLA_I_PROJECT_NAME], [ViennaRNA-CLA-Individual])
  AC_SUBST([CLA_E_PROJECT_NAME], [ViennaRNA-CLA-Entity])
  AC_SUBST([CLA_SRCDIR], [$srcdir])
  AC_SUBST([CLA_DOCDIR], [ifelse([$2], [], [doc/CLA], [$2])])

  RNA_PACKAGE_IF_ENABLED([cla_pdf], [
    # check whether pdflatex is available
    if test "x$LATEX_CMD" = xno;
    then
      AC_MSG_WARN([Could not find pdflatex!])
      AC_MSG_WARN([deactivating automatic (re)generation of CLA!])
      _cla_pdf_failed="pdflatex command is missing!"
      cla_requirements_pdf=no
    else
      RNA_LATEX_TEST_PACKAGES([babel fancyhdr geometry hyperref inputenc lastpage xcolor], [], [
        _cla_pdf_failed="Required LaTeX packages are missing!"
        cla_requirements_pdf=no
      ])
    fi

    AC_SUBST([CLA_CMD_LATEX], ["$LATEX_CMD -interaction=nonstopmode -halt-on-error"])

    # check if a generated CLA already exists
    if test "x$cla_requirements_pdf" = xno;
    then
      AC_RNA_TEST_FILE( [$CLA_DOCDIR/$CLA_I_PROJECT_NAME.pdf],
                        [with_cla_pdf=yes],
                        [with_cla_pdf=no
                         cla_pdf_failed="($_cla_pdf_failed)"])
      AC_RNA_TEST_FILE( [$CLA_DOCDIR/$CLA_E_PROJECT_NAME.pdf],
                        [with_cla_pdf=yes],
                        [with_cla_pdf=no
                         cla_pdf_failed="($_cla_pdf_failed)"])
    fi
  ])

  ## disable CLA in case PDF is disabled
  AS_IF([ test "x$with_cla_pdf" == "xno" ], [ with_cla=no ])
])

AC_SUBST([CLA_I_PDF_NAME], [ifelse([$with_cla],
                                      [no],
                                      [],
                                      [$CLA_I_PROJECT_NAME.pdf])])
AC_SUBST([CLA_E_PDF_NAME], [ifelse([$with_cla],
                                      [no],
                                      [],
                                      [$CLA_E_PROJECT_NAME.pdf])])


AM_CONDITIONAL(WITH_CLA, test "x$with_cla" != xno)
AM_CONDITIONAL(WITH_CLA_BUILD, test "x$cla_requirements_pdf" != xno)
AM_CONDITIONAL(WITH_CLA_PDF, test "x$with_cla_pdf" != xno)
])
m4trace:m4/ac_rna_colorize.m4:3: -1- AC_DEFUN([_COLORIZE_RESULT_PREPARE], [

    msg_checking= msg_result_yes= msg_result_no= msg_result_other= msg_reset=
    AS_IF([test "x${CONFIGURE_TTY}" = xyes -o -t 1], [
    msg_begin="`tput smso 2>/dev/null`"
    AS_CASE(["$msg_begin"], ['@<:@'*m],
        [msg_begin="`echo "$msg_begin" | sed ['s/[0-9]*m$//']`"
        msg_checking="${msg_begin}36m"
        AS_IF([test ${TEST_COLORS:+set}], [
        msg_result_yes=[`expr ":$TEST_COLORS:" : ".*:pass=\([^:]*\):"`]
        msg_result_no=[`expr ":$TEST_COLORS:" : ".*:fail=\([^:]*\):"`]
        msg_result_other=[`expr ":$TEST_COLORS:" : ".*:skip=\([^:]*\):"`]
        ])
        msg_result_yes="${msg_begin}${msg_result_yes:-32;1}m"
        msg_result_no="${msg_begin}${msg_result_no:-31;1}m"
        msg_result_other="${msg_begin}${msg_result_other:-34;1}m"
        msg_bold="${msg_begin}1m"
        msg_underline="${msg_begin}4m"
        msg_reset="${msg_begin}m"
        ])
    AS_UNSET(msg_begin)
    ])
    AS_REQUIRE_SHELL_FN([colorize_result],
    [AS_FUNCTION_DESCRIBE([colorize_result], [MSG], [Colorize result])],
        [AS_CASE(["$[]1"],
            [yes], [AS_ECHO(["${msg_result_yes}$[]1${msg_reset}]")],
            [no], [AS_ECHO(["${msg_result_no}$[]1${msg_reset}]")],
            [AS_ECHO(["${msg_result_other}$[]1${msg_reset}]")])])
])
m4trace:m4/ac_rna_colorize.m4:33: -1- AC_DEFUN([COLORIZE_RESULT], [AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
    AS_LITERAL_IF([$1],
    [m4_case([$1],
        [yes], [AS_ECHO(["${msg_result_yes}$1${msg_reset}"])],
        [no], [AS_ECHO(["${msg_result_no}$1${msg_reset}"])],
        [AS_ECHO(["${msg_result_other}$1${msg_reset}"])])],
    [colorize_result "$1"]) dnl
])
m4trace:m4/ac_rna_colorize.m4:43: -1- AC_DEFUN([AC_CHECKING], [dnl
AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
AS_MESSAGE([checking ${msg_checking}$1${msg_reset}...])])
m4trace:m4/ac_rna_colorize.m4:47: -1- AC_DEFUN([AC_MSG_RESULT], [dnl
{ _AS_ECHO_LOG([result: $1])
COLORIZE_RESULT([$1]); dnl
}])
m4trace:m4/ac_rna_colorize.m4:54: -1- AC_DEFUN([AC_RNA_COLOR_RESULT], [dnl
  AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
  AS_CASE("${$1$2}",
    [yes], [result_$2="${msg_result_yes}${$1$2}${msg_reset}"],
    [no|No*], [result_$2="${msg_result_no}${$1$2}${msg_reset}"],
    [result_$2="${msg_result_other}${$1$2}${msg_reset}"])
])
m4trace:m4/ac_rna_colorize.m4:63: -1- AC_DEFUN([AC_RNA_COLOR_RESULT_PACKAGE], [
  AC_RNA_COLOR_RESULT([with_], [$1])
])
m4trace:m4/ac_rna_colorize.m4:67: -1- AC_DEFUN([AC_RNA_COLOR_RESULT_FEATURE], [
  AC_RNA_COLOR_RESULT([enable_], [$1])
])
m4trace:m4/ac_rna_colorize.m4:71: -1- AC_DEFUN([AC_RNA_COLOR_RESULT_SIMPLE], [
  AC_RNA_COLOR_RESULT([], [$1])
])
m4trace:m4/ac_rna_colorize.m4:75: -1- AC_DEFUN([AC_RNA_STRING_APPEND_FORMAT_BOLD], [dnl
  AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
  [$1="${$1}${msg_bold}$2${msg_reset}"]
])
m4trace:m4/ac_rna_colorize.m4:80: -1- AC_DEFUN([AC_RNA_STRING_APPEND_FORMAT_UNDERLINE], [dnl
  AC_REQUIRE([_COLORIZE_RESULT_PREPARE])dnl
  [$1="${$1}${msg_underline}$2${msg_reset}"]
])
m4trace:m4/ac_rna_colorize.m4:85: -1- AC_DEFUN([RNA_COLOR_MAKE], [

    enable_color_make="yes"

    am__v_GEN_0="@@<:@ -t 1 @:>@ && printf \"  \\033@<:@01;34mGEN\\033@<:@00m      %s\\n\" \$$@@ || echo \"  GEN      \$$@@\";"
    am__v_CC_0="@@<:@ -t 1 @:>@ && printf \"  \\033@<:@01;34mCC\\033@<:@00m       %s\\n\" \$$@@ || echo \"  CC       \$$@@\";"
    am__v_CCLD_0="@@<:@ -t 1 @:>@ && printf \"  \\033@<:@01;34mCCLD\\033@<:@00m     %s\\n\" \$$@@ || echo \"  CCLD     \$$@@\";"
    am__v_CXX_0="@@<:@ -t 1 @:>@ && printf \"  \\033@<:@01;34mCXX\\033@<:@00m      %s\\n\" \$$@@ || echo \"  CXX      \$$@@\";"
    am__v_CXXLD_0="@@<:@ -t 1 @:>@ && printf \"  \\033@<:@01;34mCXXLD\\033@<:@00m    %s\\n\" \$$@@ || echo \"  CXXLD    \$$@@\";"

    AC_SUBST([am__v_GEN_0])
    AC_SUBST([am__v_CC_0])
    AC_SUBST([am__v_CCLD_0])
    AC_SUBST([am__v_CXX_0])
    AC_SUBST([am__v_CXXLD_0])

    AM_CONDITIONAL(WITH_COLOR_MAKE, test "x$enable_color_make" = "xyes")
])
m4trace:m4/ac_rna_features.m4:5: -1- AC_DEFUN([RNA_ENABLE_SVM], [

  SVM_VERSION=3.31

  RNA_ADD_PACKAGE([svm],
                  [svm classifiers],
                  [yes],[],[],
                  [${srcdir}/src/libsvm-${SVM_VERSION}/svm.cpp ${srcdir}/src/libsvm-${SVM_VERSION}/svm.h])

  RNA_PACKAGE_IF_ENABLED([svm],[
    AC_SUBST([LIBSVM_DIR], [libsvm-${SVM_VERSION}])
    ## substitution for reference manual config
    AC_SUBST([REFDOC_PREDEF_SVM], [VRNA_WITH_SVM])
    AC_DEFINE([VRNA_WITH_SVM], [1], [Compute z-scores for RNALfold])
    SVM_LIBS="-lstdc++"
    CONFIG_SVM="#define VRNA_WITH_SVM"
    SETUPCFG_SW_SVM="True"
    SETUPCFG_SVM_MACRO="svm_macro = VRNA_WITH_SVM"
    SETUPCFG_SVM_LIBS="svm_libs  = stdc++"
  ])

  RNA_PACKAGE_IF_DISABLED([svm],[
    SETUPCFG_SW_SVM="False"
  ])

  AC_SUBST(SVM_VERSION)
  AC_SUBST(SVM_LIBS)
  AC_SUBST(CONFIG_SVM)
  AC_SUBST(SETUPCFG_SW_SVM)
  AC_SUBST(SETUPCFG_SVM_MACRO)
  AC_SUBST(SETUPCFG_SVM_LIBS)
  AM_CONDITIONAL(VRNA_AM_SWITCH_SVM, test "$with_svm" != "no")
])
m4trace:m4/ac_rna_features.m4:44: -1- AC_DEFUN([RNA_ENABLE_GSL], [

  RNA_ADD_PACKAGE([gsl],
                  [GNU Scientific Library],
                  [yes])

  # check prerequisties for gsl support
  RNA_PACKAGE_IF_ENABLED([gsl],[
    AC_CHECK_LIB([gslcblas],[cblas_dgemm])
    AC_CHECK_LIB([gsl],[gsl_blas_dgemm])

    if test "$ac_cv_lib_gsl_gsl_blas_dgemm" != yes; then
      AC_MSG_WARN("Can't find libgsl. Falling back to default implementation.")
      enabled_but_failed_gsl="(libgsl not found)"
      with_gsl="no"
    fi
  ])

  RNA_PACKAGE_IF_ENABLED([gsl],[
    ## Check for gsl/gsl_multimin.h header first
    AC_CHECK_HEADER([gsl/gsl_multimin.h], [
      ## now, check if we can compile a program
      AC_MSG_CHECKING([whether we can compile and link programs with gsl support])
      ac_save_LIBS="$LIBS"
      LIBS="$ac_save_LIBS -lgsl -lgslcblas"

      AC_LANG_PUSH([C])

      AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM(
          [[#include <stdio.h>
            #include <gsl/gsl_sf_bessel.h>
          ]],
          [[
            double x = 5.0;
            double y = gsl_sf_bessel_J0 (x);
            printf ("J0(%g) = %.18e\n", x, y);
            return 0;
          ]])
      ],[
        AC_DEFINE([VRNA_WITH_GSL], [1], [Use GNU Scientific Library])
        GSL_LIBS="-lgsl -lgslcblas"
        CONFIG_GSL="#define VRNA_WITH_GSL"
        SETUPCFG_SW_GSL="True"
        SETUPCFG_GSL_MACRO="gsl_macro = VRNA_WITH_GSL"
        SETUPCFG_GSL_LIBS="gsl_libs  = gsl gslcblas"
      ],[
        with_gsl=no
      ])
      AC_LANG_POP([C])
      LIBS="$ac_save_LIBS"
      AC_MSG_RESULT([$with_gsl])
    ], [
      AC_MSG_WARN([
==========================
Failed to find gsl/gsl_multimin.h!

You probably need to install the gsl-devel package or similar
==========================
    ])
    with_gsl=no])
  ])

  RNA_PACKAGE_IF_DISABLED([gsl],[
    SETUPCFG_SW_GSL="False"
  ])

  AC_SUBST([GSL_LIBS])
  AC_SUBST([CONFIG_GSL])
  AC_SUBST([SETUPCFG_SW_GSL])
  AC_SUBST([SETUPCFG_GSL_MACRO])
  AC_SUBST([SETUPCFG_GSL_LIBS])
  AM_CONDITIONAL(VRNA_AM_SWITCH_GSL, test "x$with_gsl" = "xyes")
])
m4trace:m4/ac_rna_features.m4:124: -1- AC_DEFUN([RNA_ENABLE_NR_SAMPLE_HASH], [

  RNA_ADD_FEATURE([NRhash],
                  [Hash for non-redundant sampling datas structure],
                  [no])

  RNA_FEATURE_IF_ENABLED([NRhash],[
    AC_DEFINE([VRNA_NR_SAMPLING_HASH], [1], [Use Hash for non-redundant sampling data structure])
    CONFIG_NR_SAMPLING="#define VRNA_NR_SAMPLING_HASH"
  ])

  AC_SUBST(CONFIG_NR_SAMPLING)
])
m4trace:m4/ac_rna_features.m4:139: -1- AC_DEFUN([RNA_ENABLE_MPFR], [

  RNA_ADD_FEATURE([mpfr],
                  [Use MPFR library for aribtrary precision computations in non-redundant sampling],
                  [yes])

  RNA_FEATURE_IF_ENABLED([mpfr],[
    ## Check for mpfr.h header first
    AC_CHECK_HEADER([mpfr.h], [
      ## now, check if we can compile a program
      AC_MSG_CHECKING([whether we can compile programs with mpfr support])
      ac_save_LIBS="$LIBS"
      LIBS="$ac_save_LIBS -lmpfr -lgmp"

      AC_LANG_PUSH([C])

      AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM(
          [[#include <stdio.h>
            #include <mpfr.h>
          ]],
          [[  printf ("MPFR library: %-12s\nMPFR header:  %s (based on %d.%d.%d)\n",
              mpfr_get_version (), MPFR_VERSION_STRING, MPFR_VERSION_MAJOR,
              MPFR_VERSION_MINOR, MPFR_VERSION_PATCHLEVEL);
              return 0;
          ]])
      ],[
        MPFR_LIBS="-lmpfr -lgmp"
        SETUPCFG_SW_MPFR="True"
        SETUPCFG_MPFR_MACRO="mpfr_macro  = VRNA_NR_SAMPLING_MPFR"
        SETUPCFG_MPFR_LIBS="mpfr_libs   = mpfr gmp"
        AC_DEFINE([VRNA_NR_SAMPLING_MPFR], [1], [Use MPFR for non-redundant sampling data structure operations])
      ],[
        enable_mpfr=no
      ])
      AC_LANG_POP([C])
      LIBS="$ac_save_LIBS"
      AC_MSG_RESULT([$enable_mpfr])
    ], [
      AC_MSG_WARN([
==========================
Failed to find mpfr.h!

You probably need to install the mpfr-devel package or similar
==========================
    ])
    enable_mpfr=no])
  ])

  RNA_FEATURE_IF_DISABLED([mpfr],[
    SETUPCFG_SW_MPFR="False"
  ])

  AC_SUBST(MPFR_LIBS)
  AC_SUBST(SETUPCFG_SW_MPFR)
  AC_SUBST(SETUPCFG_MPFR_MACRO)
  AC_SUBST(SETUPCFG_MPFR_LIBS)
  AM_CONDITIONAL(VRNA_AM_SWITCH_MPFR, test "x$enable_mpfr" = "xyes")
])
m4trace:m4/ac_rna_features.m4:203: -1- AC_DEFUN([RNA_ENABLE_OPENMP], [

  RNA_ADD_FEATURE([openmp],
                  [OpenMP support],
                  [yes])

  RNA_FEATURE_IF_ENABLED([openmp],[
    AC_LANG_PUSH([C])
    AX_OPENMP([],[enable_openmp="no"])
    AC_LANG_POP([C])

    AS_IF([ test "x$enable_openmp" != "xno" ],[
      OMP_CFLAGS="$OPENMP_CFLAGS"

      AC_LANG_PUSH([C++])
      AX_OPENMP([],[enable_openmp="no"])
      AC_LANG_POP([C++])

      if test "x$enable_openmp" != "xno"
      then
        RNA_CFLAGS="${RNA_CFLAGS} ${OMP_CFLAGS}"
        RNA_CXXFLAGS="${RNA_CXXFLAGS} ${OPENMP_CXXFLAGS}"
        LIBGOMPFLAG="$OPENMP_CXXFLAGS"
        CONFIG_OPENMP="#define VRNA_WITH_OPENMP"
        SETUPCFG_SW_OPENMP="True"
        SETUPCFG_OPENMP_MACRO="openmp_macro  = VRNA_WITH_OPENMP"
        SETUPCFG_OPENMP_FLAGS="openmp_cflags = $OPENMP_CXXFLAGS"
      fi
    ])
  ])

  RNA_FEATURE_IF_DISABLED([openmp],[
    SETUPCFG_SW_OPENMP="False"
  ])
  AC_SUBST(CONFIG_OPENMP)
  AC_SUBST(SETUPCFG_SW_OPENMP)
  AC_SUBST(SETUPCFG_OPENMP_MACRO)
  AC_SUBST(SETUPCFG_OPENMP_FLAGS)
  AC_SUBST(LIBGOMPFLAG)
  AC_SUBST(OPENMP_CFLAGS)
  AC_SUBST(OPENMP_CXXFLAGS)
])
m4trace:m4/ac_rna_features.m4:247: -1- AC_DEFUN([RNA_ENABLE_PTHREADS], [
  RNA_ADD_FEATURE([pthreads],
                  [Parallel input processing support],
                  [yes])

  RNA_FEATURE_IF_ENABLED([pthreads],[
    ## probe for pthreads availability
    AX_PTHREAD([
        AC_DEFINE([VRNA_WITH_PTHREADS], [1], [Use pthreads for parallel input processing])
    ], [
        enable_pthreads="no"
    ])
  ])

  AC_SUBST(PTHREAD_LIBS)
  AC_SUBST(PTHREAD_CFLAGS)
  AM_CONDITIONAL(VRNA_AM_SWITCH_PTHREADS, test "x$enable_pthreads" = "xyes")
])
m4trace:m4/ac_rna_features.m4:270: -1- AC_DEFUN([RNA_ENABLE_C11], [

  RNA_ADD_FEATURE([c11],
                  [C11 feature support (unnamed unions of unnamed structs)],
                  [yes])

  RNA_FEATURE_IF_ENABLED([c11],[
    AC_MSG_CHECKING([whether the C compiler allows unnamed unions of unnamed structs])
    # save current global flags
    AC_LANG_PUSH([C])
    AC_RUN_IFELSE([AC_LANG_SOURCE([[#include <stdlib.h>
                                    struct bla {
                                      union {
                                        struct { int a; char  b;};
                                        struct { long c; double d;};
                                      };
                                    };
                                    int main (void) { return 0;} ]])],
                                    [enable_c11=yes],
                                    [enable_c11=no],
                                    [enable_c11=no])

    AC_LANG_POP([C])
    AC_MSG_RESULT([$enable_c11])

    AS_IF([ test "x$enable_c11" != "xno" ],[
      AC_MSG_CHECKING([whether the C++ compiler allows unnamed unions of unnamed structs])
      AC_LANG_PUSH([C++])
      AC_RUN_IFELSE([AC_LANG_SOURCE([[extern "C" {
                                        #include <stdlib.h>
                                        struct bla {
                                          union {
                                            struct { int a; char  b;};
                                            struct { long c; double d;};
                                          };
                                        };
                                      };
                                      int main (void) { return 0;} ]])],
                                      [enable_c11=yes],
                                      [enable_c11=no],
                                      [enable_c11=no])

      AC_LANG_POP([C++])
      AC_MSG_RESULT([$enable_c11])
    ])
  ])

  AS_IF([ test "x$enable_c11" != "xyes" ],[
    DISABLE_C11_FEATURES=-DVRNA_DISABLE_C11_FEATURES
    CONFIG_DISABLE_C11_FEATURES="#define VRNA_DISABLE_C11_FEATURES"
    AX_APPEND_FLAG(["${DISABLE_C11_FEATURES}"], [RNA_CPPFLAGS])
  ])

  AC_SUBST(DISABLE_C11_FEATURES)
  AC_SUBST(CONFIG_DISABLE_C11_FEATURES)
])
m4trace:m4/ac_rna_features.m4:331: -1- AC_DEFUN([RNA_ENABLE_FLOATPF], [

  RNA_ADD_FEATURE([floatpf],
                  [Floating point precision in partition function computations],
                  [no])

  # Handle floating point precision flag
  RNA_FEATURE_IF_ENABLED([floatpf],[

    AC_DEFINE([USE_FLOAT_PF], [1], [Use floating point precision in partition function computations])
    CONFIG_FLOAT_PF="#define USE_FLOAT_PF"
    ## substitution for reference manual config
    AC_SUBST([REFDOC_PREDEF_FLOAT_PF], [USE_FLOAT_PF])
    AC_SUBST([FLOAT_PF_FLAG], [-DUSE_FLOAT_PF])
    AX_APPEND_FLAG([-DUSE_FLOAT_PF], [RNA_CPPFLAGS])
  ])

  AC_SUBST(CONFIG_FLOAT_PF)
])
m4trace:m4/ac_rna_features.m4:356: -1- AC_DEFUN([RNA_ENABLE_DEPRECATION_WARNINGS], [

  RNA_ADD_FEATURE([warn_deprecated],
                  [Warn upon usage of deprecated symbols],
                  [no])

  ## Add preprocessor define statement for deprecation warnings
  RNA_FEATURE_IF_ENABLED([warn_deprecated],[
    AC_DEFINE([VRNA_WARN_DEPRECATED], [1], [Warn upon usage of deprecated symbols])
    DEPRECATION_WARNING=-DVRNA_WARN_DEPRECATED
    AX_APPEND_FLAG([-DVRNA_WARN_DEPRECATED], [RNA_CPPFLAGS])
  ])
  AC_SUBST(DEPRECATION_WARNING)
])
m4trace:m4/ac_rna_features.m4:376: -1- AC_DEFUN([RNA_ENABLE_COLORED_TTY], [

  RNA_ADD_FEATURE([tty_colors],
                  [Colored TTY output],
                  [yes])

  RNA_FEATURE_IF_DISABLED([tty_colors],[
    AC_DEFINE([VRNA_WITHOUT_TTY_COLORS], [1], [Do not use colors for TTY output])
    CONFIG_TTY_COLORS="#define VRNA_WITHOUT_TTY_COLORS"
  ])

  AM_CONDITIONAL(WITH_TTY_COLORS, test "x$enable_tty_colors" = "xyes")

  AC_SUBST(CONFIG_TTY_COLORS)
])
m4trace:m4/ac_rna_features.m4:397: -1- AC_DEFUN([RNA_ENABLE_STATIC_BIN], [

  RNA_ADD_FEATURE([static_executables],
                  [Produce statically linked executable binaries],
                  [no])

  ## Check whether necessary static libraries are present
  RNA_FEATURE_IF_ENABLED([static_executables],[
    SAVED_LDFLAGS=$LDFLAGS
    LDFLAGS="$LDFLAGS -static"

    AC_MSG_NOTICE([Checking possiblity to build statically linked executables using C compiler])
    AC_LANG_PUSH([C])

    AC_RUN_IFELSE([AC_LANG_SOURCE([[ #include <math.h>
                                      int main (void) { return (int)log(1.);} ]])],
                                      [],
                                      [ AC_MSG_ERROR([[
############################################
Failed to statically link C program

Please make sure that static variants for
all libraries that are about to be linked
into the executables are present!

Checked compiler flag setup:
 LDFLAGS = $LDFLAGS 
 LIBS    = $LIBS
 CLFAGS  = $CFLAGS
############################################]]) ],
                                      [enable_static_executables=no])

    AC_LANG_POP([C])
    AC_MSG_NOTICE([Building statically linked C executables seems to work fine])
    LDFLAGS=$SAVED_LDFLAGS
  ])

  RNA_FEATURE_IF_ENABLED([static_executables],[
    SAVED_LDFLAGS=$LDFLAGS
    LDFLAGS="$LDFLAGS -static -lstdc++"

    AC_MSG_NOTICE([Checking possiblity to build statically linked executables using C++ compiler])
    AC_LANG_PUSH([C++])

    AC_RUN_IFELSE([AC_LANG_SOURCE([[ int main (void) { return 0;} ]])],
                                      [],
                                      [ AC_MSG_ERROR([[
############################################
Failed to statically link C++ program

Please make sure that static variants for
all libraries that are about to be linked
into the executables are present!
############################################]]) ],
                                      [enable_static_executables=no])

    AC_LANG_POP([C++])
    AC_MSG_NOTICE([Building statically linked C++ executables seems to work fine])

    LDFLAGS=$SAVED_LDFLAGS
  ])

  AM_CONDITIONAL(VRNA_AM_SWITCH_STATIC_EXECUTABLES, test "x$enable_static_executables" = "xyes")
])
m4trace:m4/ac_rna_features.m4:467: -1- AC_DEFUN([RNA_ENABLE_SIMD], [

  RNA_ADD_FEATURE([simd],
                  [Speed-up MFE computations using explicit SIMD instructions.],
                  [yes])

  RNA_ADD_FEATURE([sse],
                  [Deprecated switch for SIMD optimizations. Use --enable-simd/--disable-simd instead],
                  [no])

  AS_IF([test "x$enable_sse" != "xno"],[
    AC_MSG_WARN([[

############################################
Option --enable-sse is deprecated!

Please consider using the successor option --enable-simd instead.
############################################
    ]])
    enable_simd="yes"
    AC_RNA_ADD_WARNING([Deprecated option --enable-simd detected => Please use --enable-simd instead!])
  ])

  AS_IF([test "x$enable_simd" != "xno"],[
    ## Check for all supported SIMD features first
    AC_MSG_CHECKING([compiler support for AVX 512 instructions])

    ac_save_CFLAGS="$CFLAGS"
    CFLAGS="$ac_save_CFLAGS -Werror -mavx512f"
    AC_LANG_PUSH([C])

    AC_COMPILE_IFELSE(
    [
      AC_LANG_PROGRAM([[
                  #include <immintrin.h>
                  #include <limits.h>
                ]],
                  [[__m512i a = _mm512_set1_epi32(INT_MAX);
                    __m512i b = _mm512_set1_epi32(INT_MIN);
                    __m512i c = _mm512_set1_epi32(INT_MIN);
                    __mmask16 mask = _kand_mask16(_mm512_cmplt_epi32_mask(a, c),
                                                  _mm512_cmplt_epi32_mask(b, c));

                    b = _mm512_min_epi32(a, b);
                    int e = _mm512_mask_reduce_min_epi32(mask, b);
                ]])
    ],
    [
      AC_MSG_RESULT([yes])
      AC_DEFINE([VRNA_WITH_SIMD_AVX512], [1], [use AVX 512 implementations])
      ac_simd_capability_avx512f=yes
      SIMD_AVX512_FLAGS="-mavx512f"
    ],
    [
      AC_MSG_RESULT([no])
    ])

    AC_LANG_POP([C])
    CFLAGS="$ac_save_CFLAGS"

    AC_MSG_CHECKING([compiler support for SSE 4.1 instructions])

    ac_save_CFLAGS="$CFLAGS"
    CFLAGS="$ac_save_CFLAGS -Werror -msse4.1"
    AC_LANG_PUSH([C])

    AC_COMPILE_IFELSE(
    [
      AC_LANG_PROGRAM([[
                        #include <smmintrin.h>
                        #include <limits.h>
                      ]],
                        [[__m128i a = _mm_set1_epi32(INT_MAX);
                          __m128i b = _mm_set1_epi32(INT_MIN);
                          b = _mm_min_epi32(a, b);
                      ]])
    ],
    [
      AC_MSG_RESULT([yes])
      AC_DEFINE([VRNA_WITH_SIMD_SSE41], [1], [use SSE 4.1 implementations])
      ac_simd_capability_sse41=yes
      SIMD_SSE41_FLAGS="-msse4.1"
    ],
    [
      AC_MSG_RESULT([no])
    ])

    AC_LANG_POP([C])
    CFLAGS="$ac_save_CFLAGS"
  ])

  RNA_FEATURE_IF_ENABLED([simd],[
    SETUPCFG_SW_SIMD="True"
  ])

  RNA_FEATURE_IF_DISABLED([simd],[
    SETUPCFG_SW_SIMD="False"
  ])

  AC_SUBST(SIMD_AVX512_FLAGS)
  AC_SUBST(SIMD_SSE41_FLAGS)
  AC_SUBST(SETUPCFG_SW_SIMD)
  AM_CONDITIONAL(VRNA_AM_SWITCH_SIMD_AVX512, test "x$ac_simd_capability_avx512f" = "xyes")
  AM_CONDITIONAL(VRNA_AM_SWITCH_SIMD_SSE41, test "x$ac_simd_capability_sse41" = "xyes")
])
m4trace:m4/ac_rna_features.m4:574: -1- AC_DEFUN([RNA_ENABLE_VECTORIZE], [

  RNA_ADD_FEATURE([vectorize],
                  [Apply automatic SIMD vectorization to optimize execution speed],
                  [yes])

  RNA_FEATURE_IF_ENABLED([vectorize],[
    AC_LANG_PUSH([C])
    AX_CHECK_COMPILE_FLAG([-ftree-vectorize], [
      AX_APPEND_FLAG(["-ftree-vectorize"], [RNA_CFLAGS])
    ],[],[],[])
    AC_LANG_POP([C])
  ])
])
m4trace:m4/ac_rna_features.m4:594: -1- AC_DEFUN([RNA_ENABLE_NAVIEW], [

  RNA_ADD_FEATURE([naview],
                  [Naview Layout algorithm],
                  [yes],[],[],
                  [${srcdir}/src/ViennaRNA/plotting/naview/naview.c ${srcdir}/src/ViennaRNA/plotting/naview/naview.h ])

  RNA_FEATURE_IF_ENABLED([naview],[
    AC_DEFINE([VRNA_WITH_NAVIEW_LAYOUT], [1], [Include Naview RNA structure layout algorithm])
    CONFIG_NAVIEW_LAYOUT="#define VRNA_WITH_NAVIEW_LAYOUT"
    SETUPCFG_SW_NAVIEW="True"
    SETUPCFG_NAVIEW_MACRO="naview_macro  = VRNA_WITH_NAVIEW_LAYOUT"
    NAVIEW_DIR=plotting/naview
    AX_APPEND_FLAG([-DVRNA_WITH_NAVIEW_LAYOUT], [RNA_CPPFLAGS])
    AC_CONFIG_FILES([src/ViennaRNA/plotting/naview/Makefile])
  ])

  RNA_FEATURE_IF_DISABLED([naview],[
    SETUPCFG_SW_NAVIEW="False"
  ])

  AC_SUBST(NAVIEW_DIR)
  AC_SUBST(CONFIG_NAVIEW_LAYOUT)
  AC_SUBST(SETUPCFG_NAVIEW_MACRO)
  AC_SUBST(SETUPCFG_SW_NAVIEW)
  AM_CONDITIONAL(VRNA_AM_SWITCH_NAVIEW, test "$enable_naview" != "no")
])
m4trace:m4/ac_rna_latex.m4:15: -1- AC_DEFUN([RNA_LATEX_ENVIRONMENT], [

    AC_PATH_PROG(pdflatex, [pdflatex], no)
    AC_PATH_PROG(bibtex,[bibtex],no)
    AC_PATH_PROG(makeindex,[makeindex],no)

    AC_SUBST([LATEX_CMD], [$pdflatex])
    AC_SUBST([BIBTEX_CMD], [$bibtex])
    AC_SUBST([MAKEINDEX_CMD], [$makeindex])
])
m4trace:m4/ac_rna_latex.m4:33: -1- AC_DEFUN([RNA_LATEX_TEST_PACKAGES], [
    AC_REQUIRE([RNA_LATEX_ENVIRONMENT])

    AS_IF([test "x$LATEX_CMD" != "xno"], [
        AC_MSG_CHECKING([for LaTeX package(s) $1])
        ac_latex_package_test_success=no

        # create subdirectory to test LaTeX compilation with list of packages
        rm -rf .latextmp
        mkdir .latextmp
        cd .latextmp
        cat <<_LTXEOF >>testfile.tex
\documentclass{article}
_LTXEOF
        m4_foreach_w([latex_pkg], [$1], [
          cat <<_LTXEOF >>testfile.tex
\usepackage{latex_pkg}
_LTXEOF
        ])
        cat <<_LTXEOF >>testfile.tex
\begin{document}
\end{document}
_LTXEOF
        cat testfile.tex | $LATEX_CMD 2>&1 1>/dev/null && ac_latex_package_test_success=yes;
        cd ..
        rm -rf .latextmp
        AC_MSG_RESULT($ac_latex_package_test_success)

        # run user commands as supplied through arguments 2 and 3
        AS_IF([test "x$ac_latex_package_test_success" = "xyes"], [ $2 ], [ $3 ])
    ], [ $3 ])
])
m4trace:m4/ac_rna_lto.m4:3: -1- AC_DEFUN([RNA_ENABLE_LTO], [

  AX_REQUIRE_DEFINED([RNA_ADD_FEATURE])
  AX_REQUIRE_DEFINED([RNA_FEATURE_IF_ENABLED])
  AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
  AX_REQUIRE_DEFINED([AX_COMPILER_VENDOR])

  RNA_ADD_FEATURE([lto],
                  [Link time optimization],
                  [yes])

  # Allow for user-overwrite of ar/ranlib/nm command
  AC_ARG_VAR([USER_AR],[User settings to overwrite the ar command])
  AC_ARG_VAR([USER_RANLIB],[User settings to overwrite the ranlib command])
  AC_ARG_VAR([USER_NM],[User settings to overwrite the nm command])


  RNA_FEATURE_IF_ENABLED([lto],[

    ac_lto_supported=no
    ac_lto_arg_supported=no
    ac_fat_lto_obj_supported=no

  # check whether the compiler accepts LTO option
    AC_LANG_PUSH([C])
    AX_CHECK_COMPILE_FLAG([-flto], [ac_lto_supported=yes],[ac_lto_supported=no],[],[])
    AC_LANG_POP([C])

    AC_LANG_PUSH([C])
    AX_CHECK_COMPILE_FLAG([-flto=auto], [ac_lto_arg_supported=yes],[ac_lto_arg_supported=no],[],[])
    AC_LANG_POP([C])

    if test "x$ac_lto_supported" != "xno" ; then
      AC_LANG_PUSH([C++])
      AX_CHECK_COMPILE_FLAG([-flto], [],[ac_lto_supported=no],[],[])
      AC_LANG_POP([C++])

      AC_LANG_PUSH([C++])
      AX_CHECK_COMPILE_FLAG([-flto=auto], [],[ac_lto_arg_supported=no],[],[])
      AC_LANG_POP([C++])
    fi

    AC_LANG_PUSH([C])
    AX_CHECK_COMPILE_FLAG([-ffat-lto-objects], [ac_fat_lto_obj_supported=yes],[ac_fat_lto_obj_supported=no],[],[])
    AC_LANG_POP([C])

    if test "x$ac_fat_lto_obj_supported" != "xno" ; then
      AC_LANG_PUSH([C++])
      AX_CHECK_COMPILE_FLAG([-ffat-lto-objects], [ac_fat_lto_obj_supported=yes],[ac_fat_lto_obj_supported=no],[],[])
      AC_LANG_POP([C++])
    fi

    ## prepare compile settings
    AS_IF([ test "x$ac_lto_arg_supported" != "xno" ], [
        ## set compile flags
        AS_IF([ test "x$ac_fat_lto_obj_supported" != "xno" ],[
          LTO_CFLAGS="-flto=auto -ffat-lto-objects"
          LTO_CXXFLAGS="-flto=auto -ffat-lto-objects"
        ],[
          LTO_CFLAGS="-flto=auto -ffat-lto-objects"
          LTO_CXXFLAGS="-flto=auto"
        ])
    ], [
      AS_IF([ test "x$ac_lto_supported" != "xno" ], [
        ## set compile flags
        AS_IF([ test "x$ac_fat_lto_obj_supported" != "xno" ],[
          LTO_CFLAGS="-flto -ffat-lto-objects"
          LTO_CXXFLAGS="-flto -ffat-lto-objects"
        ],[
          LTO_CFLAGS="-flto -ffat-lto-objects"
          LTO_CXXFLAGS="-flto"
        ])
      ])
    ])

    ## prepare linker settings
    if test "x$ac_lto_supported" != "xno" ; then
      if test "x$ac_lto_arg_supported" != "xno" ; then
        LTO_LDFLAGS="-flto=auto"
      else
        LTO_LDFLAGS="-flto"
      fi

      AS_IF([ test "x$ax_cv_c_compiler_vendor" == "xclang" ],[
            ## Here we have to distinguish at least OS X, since it
            ## does not use gold plugin as Linux does
            case "$host" in
              *darwin*)   ;;
              *linux*)    AX_CHECK_LINK_FLAG([-fuse-ld=gold], [
                            ## switch explicitely to ld-gold
                            LTO_LDFLAGS="-fuse-ld=gold ${LTO_LDFLAGS}"
                          ], [
                            ac_lto_supported="no"],[], [])
                          ;;
              *)          AC_MSG_WARN([Unknown target host, deactivating LTO support])
                          ac_lto_supported="no"
                          ;;
            esac
      ])
    fi


    # set ar/ranlib/nm
    if test "x$ac_lto_supported" != "xno" ; then

      ## Does the user want to explicitely set the ar/ranlib/nm commands?
      AS_IF([test "x$USER_AR" != "x" || test "x$USER_RANLIB" != "x" || test "x$USER_NM" != "x"],[
        ## The user explicitely set at least one of the above variables. Check if all are set!
        AC_PATH_PROG([OUR_AR], [$USER_AR], [no])
        AC_PATH_PROG([OUR_RANLIB], [$USER_RANLIB], [no])
        AC_PATH_PROG([OUR_NM], [$USER_NM], [no])
        AS_IF([test "$OUR_AR" == "no" || test "$OUR_RANLIB" == "no" || test "$OUR_NM" == "no"],[
          enable_lto="no"
          ac_lto_supported="no"
          AC_MSG_ERROR([Please make sure that you set all three of the USER_AR/USER_RANLIB/USER_NM variables, and that the tools exist in your PATH])
        ],[
          AC_MSG_WARN([Using ar/ranlib/nm tools as specified by user settings])
          AR="$OUR_AR"
          RANLIB="$OUR_RANLIB"
          NM="$OUR_NM"
        ])
      ], [
        ## no explicit user settings, so we proceed by distinguishing the compiler we use
        ## Here we have to hack a little. Some systems do not provide the liblto plugin for
        ## ar/ranlib/nm by default. However, gcc provides some wrappers, gcc-ar, gcc-ranlib,
        ## and gcc-nm that do so. LLVM does it likewise.
        ## Therefore, we substitute the program env vars if we detected compilation with a
        ## compiler that we know uses this scheme
        AC_MSG_WARN([Trying to re-set ar/ranlib/nm to compiler specific wrappers])
        AS_CASE([$ax_cv_c_compiler_vendor],
          [gnu],[
            AC_CHECK_TOOL([OUR_AR], [gcc-ar], [no])
            AC_CHECK_TOOL([OUR_RANLIB], [gcc-ranlib], [no])
            AC_CHECK_TOOL([OUR_NM], [gcc-nm], [no])
            AS_IF([test "$OUR_AR" == "no" || test "$OUR_RANLIB" == "no" || test "$OUR_NM" == "no"],[
              enable_lto="no"
              ac_lto_supported="no"
            ],[
              AR="$OUR_AR"
              RANLIB="$OUR_RANLIB"
              NM="$OUR_NM"
            ])
          ],
          [clang],[
            ## Here we have to distinguish at least OS X, since it
            ## does not use gold plugin as Linux does
            case "$host" in
              *darwin*)   if test "x$enable_universal_binary" != "xno" ; then
                            AC_MSG_WARN([
**********************************************************************
No LTO support for MacOSX combination with clang/llvm and universal binaries!
We will disable LTO support now!
**********************************************************************
                                      ])
                            ac_lto_supported="no"
                          else
                            AC_MSG_WARN([Building for OS X])
                          fi
                          ;;
              *linux*)    AC_MSG_WARN([Building for Linux])
                          AC_CHECK_TOOL([OUR_AR], [llvm-ar], [no])
                          AC_CHECK_TOOL([OUR_RANLIB], [llvm-ranlib], [no])
                          AC_CHECK_TOOL([OUR_NM], [llvm-nm], [no])
                          AS_IF([test "$OUR_AR" == "no"|| test "$OUR_RANLIB" == "no" || test "$OUR_NM" == "no" ],[
                            ac_lto_supported="no"
                          ],[
                            AR="$OUR_AR"
                            RANLIB="$OUR_RANLIB"
                            NM="$OUR_NM"
                          ])
                          ;;
              *)          AC_MSG_WARN([Unknown target host, deactivating LTO support])
                          ac_lto_supported="no"
                          ;;
          esac
        ],
        [
          ac_lto_supported="no"
        ])
      ])

      ## peform a linker test
      AS_IF([ test "x$ac_lto_supported" != "xno" ], [
            AC_MSG_CHECKING([whether the linker supports Link time Optimization (LTO)])
            # save current global flags
            ac_save_LDFLAGS="$LDFLAGS"
            ac_save_CPPFLAGS="$CPPFLAGS"
            ac_save_CFLAGS="$CFLAGS"
            LDFLAGS="$ac_save_LDFLAGS ${LTO_LDFLAGS}"
            CPPFLAGS="$ac_save_CPPFLAGS  ${LTO_CFLAGS}"
            CFLAGS="$ac_save_CFLAGS  ${LTO_CFLAGS}"

            AC_LANG_PUSH([C])
            AC_LINK_IFELSE([
                    AC_LANG_PROGRAM([[#include <stdlib.h>]],
                                    [[printf("bla");]])
                    ],[lto_link_success=yes],[lto_link_success=no])
            AC_LANG_POP([C])

            # turn back to default flags
            LDFLAGS="$ac_save_LDFLAGS"
            CPPFLAGS="$ac_save_CPPFLAGS"
            CFLAGS="$ac_save_CFLAGS"

            AC_MSG_RESULT([$lto_link_success])
            AS_IF([test "x$lto_link_success" != "xyes"],[
                    enable_lto="no"
                    ac_lto_supported="no"
                    AC_MSG_WARN([Your linker does not support Link Time Optimizaton! Disabling LTO support!])
                  ])
      ])

      ## append -flto flag if all checks went fine
      AS_IF([ test "x$ac_lto_supported" != "xno" ], [
        RNA_LDFLAGS="${RNA_LDFLAGS} ${LTO_LDFLAGS}"
        RNA_CFLAGS="${RNA_CFLAGS} ${LTO_CFLAGS}"
        RNA_CXXFLAGS="${RNA_CXXFLAGS} ${LTO_CXXFLAGS}"
        CONFIG_LTO="#define VRNA_WITH_LTO"
      ],[
        AC_MSG_WARN([Your compiler/linker combination does not support link-time optimization (LTO)])
        enable_lto="no"
        enabled_but_failed_lto="unsupported"
      ])
    fi
  ])

  AC_SUBST(CONFIG_LTO)

  # distribute additional compiler and linker flags
  # --> set these variables instead of CFLAGS, CXXFLAGS, or LDFLAGS
  AC_SUBST([LTO_CFLAGS])
  AC_SUBST([LTO_CXXFLAGS])
  AC_SUBST([LTO_LDFLAGS])

  # substitute the environment variables in case they have changed above?
  AC_SUBST([AR])
  AC_SUBST([RANLIB])
  AC_SUBST([NM])
  AM_CONDITIONAL(VRNA_AM_SWITCH_LTO, test "$ac_lto_supported" != "no")
])
m4trace:m4/ac_rna_macros.m4:8: -1- AC_DEFUN([AC_RNA_ADD_WARNING], [
  if test "x$ac_rna_warning" != "x"; then
    ac_rna_warning="${ac_rna_warning}
$1"
  else
    ac_rna_warning="$1"
  fi
])
m4trace:m4/ac_rna_macros.m4:17: -1- AC_DEFUN([AC_RNA_APPEND_VAR_COMMA], [
  if test "x$$1" != "x" ; then
    $1="${$1}, "
  fi
  $1="${$1}$2"
])
m4trace:m4/ac_rna_macros.m4:24: -1- AC_DEFUN([AC_RNA_TEST_FILE], [
AC_MSG_CHECKING([for $1])
if test -f $1 ; then
  AC_MSG_RESULT([yes])
  $2
else
  AC_MSG_RESULT([no])
  $3
fi
])
m4trace:m4/ac_rna_macros.m4:43: -1- AC_DEFUN([RNA_PACKAGE_IF_ENABLED], [
if test "x$with_$1" = "xyes"; then
  $2
fi
])
m4trace:m4/ac_rna_macros.m4:49: -1- AC_DEFUN([RNA_PACKAGE_IF_DISABLED], [
if test "x$with_$1" = "xno"; then
  $2
fi
])
m4trace:m4/ac_rna_macros.m4:63: -1- AC_DEFUN([RNA_FEATURE_IF_ENABLED], [
if test "x$enable_$1" = "xyes"; then
  $2
fi
])
m4trace:m4/ac_rna_macros.m4:69: -1- AC_DEFUN([RNA_FEATURE_IF_DISABLED], [
if test "x$enable_$1" = "xno"; then
  $2
fi
])
m4trace:m4/ac_rna_macros.m4:104: -1- AC_DEFUN([RNA_ADD_PACKAGE], [

# announce the option to include it in configure script
m4_if([$3],[yes],[
  AC_ARG_WITH(m4_translit([[$1]], [_], [-]),
            [AS_HELP_STRING([--without-m4_translit([$1], [_], [-])], [do not build | install $2])])
  AS_IF([ test "x$with_$1" != "xno"],[with_$1=yes])
  ],[
  AC_ARG_WITH(m4_translit([[$1]], [_], [-]),
            [AS_HELP_STRING([--with-m4_translit([$1], [_], [-])], [build | install $2])])
  AS_IF([ test "x$with_$1" != "xyes"],[with_$1=no])
])

# check if enabling the package makes sense at configure-time
# and deactivate it if not

RNA_PACKAGE_IF_ENABLED([$1],[
  for i in $6; do
    AC_RNA_TEST_FILE([$i],
      [with_$1=$with_$1],
      [with_$1=no])
  done
])

m4_if([$3],[yes],[
  # take action depending on configure-time user settings
  m4_if(["x$4"], ["x"],[], [ RNA_PACKAGE_IF_DISABLED([$1],[$4])])
  m4_if(["x$5"], ["x"],[], [ RNA_PACKAGE_IF_ENABLED([$1],[$5])])
],[
  # take action depending on configure-time user settings
  m4_if(["x$4"], ["x"],[], [ RNA_PACKAGE_IF_ENABLED([$1],[$4])])
  m4_if(["x$5"], ["x"],[], [ RNA_PACKAGE_IF_DISABLED([$1],[$5])])
])

])
m4trace:m4/ac_rna_macros.m4:152: -1- AC_DEFUN([RNA_ADD_FEATURE], [

# announce the feature for inclusion in the configure script

m4_if([$3],[yes],[
  AC_ARG_ENABLE(m4_translit([[$1]], [_], [-]),
            [ifelse([$7], [],
                [AS_HELP_STRING([--disable-m4_translit([$1], [_], [-])], [$2])],
                [AS_HELP_STRING([--disable-m4_translit([$1], [_], [-])@<:@=ARG@:>@], [$2 @<:@default ARG=$7@:>@])]
            )])
  AS_IF([ test "x$enable_$1" = "x" ], [ enable_$1=yes ])

  # take action depending on configure-time user settings
  m4_if(["x$4"], ["x"],[], [ RNA_FEATURE_IF_ENABLED([$1],[$4])])
  m4_if(["x$5"], ["x"],[], [ RNA_FEATURE_IF_DISABLED([$1],[$5])])
  ],[
  AC_ARG_ENABLE(m4_translit([[$1]], [_], [-]),
            [ifelse([$7], [],
                [AS_HELP_STRING([--enable-m4_translit([$1], [_], [-])], [$2])],
                [AS_HELP_STRING([--enable-m4_translit([$1], [_], [-])@<:@=ARG@:>@], [$2 @<:@default ARG=$7@:>@])]
            )])
  AS_IF([ (test "x$enable_$1" = "x") || (test "x$enable_$1" = "xno") ], [ enable_$1=no ])
])

# check if enabling the feature makes sense at configure-time
# and deactivate it if not

RNA_FEATURE_IF_ENABLED([$1],[
  for i in $6; do
    AC_RNA_TEST_FILE([$i],
      [enable_$1=$enable_$1],
      [enable_$1=no])
  done
])

m4_if([$3],[yes],[
  # take action depending on configure-time user settings
  m4_if(["x$4"], ["x"],[], [ RNA_FEATURE_IF_DISABLED([$1],[$4])])
  m4_if(["x$5"], ["x"],[], [ RNA_FEATURE_IF_ENABLED([$1],[$5])])
])

])
m4trace:m4/ac_rna_macros.m4:208: -1- AC_DEFUN([RNA_FEATURE_POST], [

  # substitute automake variables in case we set them somewhere
  # in our autoconf mess

  AC_SUBST([AM_CPPFLAGS])
  AC_SUBST([AM_CFLAGS])
  AC_SUBST([AM_CXXFLAGS])
  AC_SUBST([AM_LDFLAGS])

  AC_SUBST([RNA_CFLAGS])
  AC_SUBST([RNA_CXXFLAGS])
  AC_SUBST([RNA_CPPFLAGS])
  AC_SUBST([RNA_LDFLAGS])

  VRNA_LIBS=" ${RNA_LDFLAGS} -L\$(top_builddir)/../../src/ViennaRNA -lRNA ${LIBGOMPFLAG} ${GSL_LIBS} ${PTHREAD_LIBS} ${MPFR_LIBS} ${SVM_LIBS}"
  VRNA_CFLAGS=" -I\$(top_srcdir)/../../src/ViennaRNA -I\$(top_srcdir)/../../src ${RNA_CPPFLAGS}"

  AC_SUBST([VRNA_LIBS])
  AC_SUBST([VRNA_CFLAGS])

  # Replace/add flags in/to ac_configure_args
  for var in CC CXX CFLAGS CXXFLAGS LDFLAGS AR RANLIB NM VRNA_CFLAGS VRNA_LIBS; do
    value=`eval echo \\${${var}}`
    if test "x$value" != "x" ; then
      AS_CASE([$ac_configure_args],
        [*${var}=*], [ac_configure_args=`AS_ECHO "$ac_configure_args" | $SED ["s|${var}=[^']*|${var}=${value}|"]`],
        [AS_VAR_APPEND([ac_configure_args],[" '${var}=${value}'"])]
      )
    fi
  done

])
m4trace:m4/ac_rna_osx.m4:1: -1- AC_DEFUN([RNA_ENABLE_OSX], [

  AX_REQUIRE_DEFINED([RNA_ADD_FEATURE])

  RNA_ENABLE_OSX_UNIVERSAL_BINARY
  RNA_ENABLE_OSX_SDK
  RNA_ENABLE_OSX_INSTALLER
])
m4trace:m4/ac_rna_osx.m4:10: -1- AC_DEFUN([RNA_ENABLE_OSX_INSTALLER], [

  RNA_ADD_FEATURE([macosx_installer],
                  [generate MacOSX Installer Disk Image],
                  [no])

  AC_CONFIG_FILES([packaging/macosx/Makefile packaging/macosx/Distribution.xml packaging/macosx/resources/welcome.txt])

  RNA_FEATURE_IF_ENABLED([macosx_installer],[

    ## This option is only meant for MacOSX
    case "$host" in
        *darwin*)   AC_PATH_PROG([PKGBUILD], [pkgbuild],[no])
                    AC_PATH_PROG([PRODUCTBUILD], [productbuild],[no])
                    AC_PATH_PROG([HDIUTIL], [hdiutil],[no])

                    AS_IF([test "$PKGBUILD" == "no" || test "$PRODUCTBUILD" == "no" || test "$HDITOOL" == "no"],[
                        AC_MSG_ERROR([
**********************************************************************
        --enable-macosx-installer requires the programs pkgbuild,
        productbuild, and hdituil! Make sure they are in your PATH!
**********************************************************************
                        ])
                    ],[
                      AC_SUBST([MACOSX_INSTALLER], [packaging/macosx])
                    ])
                    ;;
        *)          AC_MSG_ERROR([
**********************************************************************
        --enable-macosx-installer is intended for use on MacOSX only!
**********************************************************************
                    ])
                    ;;
    esac
  ])

  AM_CONDITIONAL(WITH_MACOSX_INSTALLER, test "$enable_macosx_installer" != "no")
])
m4trace:m4/ac_rna_osx.m4:49: -1- AC_DEFUN([RNA_ENABLE_OSX_SDK], [

  RNA_ADD_FEATURE([macosx_sdk],
                  [use a specific Mac OS X SDK],
                  [no],[],[],
                  ["latest"])

  RNA_ADD_FEATURE([macosx_sdk_path],
                  [specify the path to a specific Mac OS X SDK],
                  [no],
                  [enable_macosx_sdk="custom"],
                  [enable_macosx_sdk_path=auto],
                  ["auto"])

  RNA_FEATURE_IF_ENABLED([macosx_sdk],[

    ## This option is only meant for MacOSX
    case "$host" in
        *darwin*)   ;;
        *)          AC_MSG_ERROR([
**********************************************************************
        --enable-macosx-sdk is intended for use on MacOSX only!
**********************************************************************
                    ])
                    ;;
    esac

    macosx_sdk_path=
    macosx_sdk_version=
    
    # check whether a specific path was given by the user
    if test "x$enable_macosx_sdk_path" != "xauto" ; then
      if test -d "$enable_macosx_sdk_path" ; then
        macosx_sdk_path="$enable_macosx_sdk_path"
        # determine the version
        macosx_sdk_version=11.3
      else
        AC_MSG_ERROR([
**********************************************************************
  Unable to set the MacOSX SDK path!

  The path you've specified is not a directory!
**********************************************************************
        ])
      fi
    else
      # determine xcode path automatically
      if test -x /usr/bin/xcode-select ; then
        xcodepath="`xcode-select -p`"
      else
        AC_MSG_ERROR([
**********************************************************************
  /usr/bin/xcode-select is missing!
  
  Unable to automatically determine SDK path! Please specify the
  SDK path using the --macosx-sdk-path parameter, or fix your XCode
  installation
**********************************************************************
        ])
      fi

      # automatic determination of latest SDK
      if test "x$enable_macosx_sdk" = "xyes" || test "x$enable_macosx_sdk" = "xlatest" ; then
        ## check for possible SDKs in descending order
        macosx_sdk_versions="11.3 11.2 11.1 11.0 10.15 10.14 10.13 10.12 10.11 10.10 10.9 10.8 10.7 10.6 10.5"
      else
        macosx_sdk_versions="${enable_macosx_sdk}"
      fi

      for v in ${macosx_sdk_versions} ; do
        AC_MSG_CHECKING([for MacOSX SDK $v])
        if test -d "$xcodepath/Platforms/MacOSX.platform/Developer/SDKs/MacOSX$v.sdk" ; then
          macosx_sdk_path="$xcodepath/Platforms/MacOSX.platform/Developer/SDKs/MacOSX${v}.sdk"
          macosx_sdk_version="$v"
          AC_MSG_RESULT([${macosx_sdk_path}])
          break
        else
          AC_MSG_RESULT([not found])
        fi
      done
    fi

    if test -z "$macosx_sdk_path" ; then
      AC_MSG_ERROR([
**********************************************************************
  Unable to set/determine the SDK path!

  Either you specified a non-existing version, or, if you have not
  specified a version at all, your XCode installation is missing a
  version we are aware of!
**********************************************************************
                  ])
    else
      bitness=-m64

      if test "$with_macosx_version_min_required" = ""; then
          case $macosx_sdk_version in
          10.5)
              with_macosx_version_min_required="10.5";;
          *)
              with_macosx_version_min_required="11.3";;
          esac
      fi

      if test "$with_macosx_version_max_allowed" = ""; then
          with_macosx_version_max_allowed="$macosx_sdk_version"
      fi

      ## if everything seems to be correct, lets start to set configurations
      AC_MSG_WARN([setting up build for MacOSX SDK ${macosx_sdk_version}])
      AC_MSG_CHECKING([what compiler to use])
      case $macosx_sdk_version in
        10.5)
            CC="${gccprefix}gcc-4.2"
            CXX="${gccprefix}g++-4.2"
            INSTALL_NAME_TOOL=`xcrun -find install_name_tool`
            ;;
        10.6)
            # did someone copy her 10.6 sdk into xcode 4 (needed on Mountain Lion)?
            if test "$(echo $macosx_sdk_path | cut -c1-23)" = "/Applications/Xcode.app"; then
                CC="`xcrun -find gcc`"
                CXX="`xcrun -find g++`"
            else
                CC="gcc-4.2"
                CXX="g++-4.2"
            fi
            CFLAGS="${CFLAGS} $bitness"
            CXXFLAGS="${CXXFLAGS} $bitness"
            LDFLAGS="${LDFLAGS} $bitness"
            INSTALL_NAME_TOOL=`xcrun -find install_name_tool`
            #LIBTOOL=libtool
            ;;
        10.7|10.8|10.9|10.10|10.11|10.12|10.13|10.14|10.15|11.0|11.1|11.2|11.3)
            if test "$with_macosx_version_min_required" != 10.6; then
              # Use libc++ instead of libstdc++ when possible
              stdlib=-stdlib=libc++
            fi

            CC="`xcrun -find clang`"
            CXX="`xcrun -find clang++`"

            CFLAGS="${CFLAGS} $bitness"
            CXXFLAGS="${CXXFLAGS} $bitness $stdlib"
            LDFLAGS="${LDFLAGS} $bitness"

            INSTALL_NAME_TOOL=`xcrun -find install_name_tool`
            AR=`xcrun -find ar`
            NM=`xcrun -find nm`
            STRIP=`xcrun -find strip`
            RANLIB=`xcrun -find ranlib`
            ;;
      esac
      CFLAGS="${CFLAGS} -mmacosx-version-min=$with_macosx_version_min_required -isysroot $macosx_sdk_path"
      CXXFLAGS="${CXXFLAGS} -mmacosx-version-min=$with_macosx_version_min_required -isysroot $macosx_sdk_path"
      LDFLAGS="${LDFLAGS} -mmacosx-version-min=$with_macosx_version_min_required -isysroot $macosx_sdk_path"

      AC_MSG_RESULT([$CC and $CXX])
    fi

  ])
])
m4trace:m4/ac_rna_osx.m4:211: -1- AC_DEFUN([RNA_ENABLE_OSX_UNIVERSAL_BINARY], [

  RNA_ADD_FEATURE([universal_binary],
                  [generate universal (fat) binaries on MacOSX],
                  [no],[],[],
                  ["-arch arm64 -arch x86_64"])

  RNA_FEATURE_IF_ENABLED([universal_binary],[

    ## This option is only meant for MacOSX
    case "$host" in
        *darwin*)   ;;
        *)          AC_MSG_ERROR([
**********************************************************************
        --enable-universal-binary is intended for use on MacOSX only!
**********************************************************************
                    ])
                    ;;
    esac

    osx_arch_array=( ${enable_universal_binary} )
    if test ${#osx_arch_array[@]} -gt 1 ; then
      if test "$enable_dependency_tracking" != no ; then
        AC_MSG_WARN([disabling dependency tracking])
        AM_CONDITIONAL([AMDEP],[false]) # automake-1.9.6
        AM_CONDITIONAL([am__fastdepCC],[false])
        AMDEPBACKSLASH=
      fi
    fi

    ## set architectures, if specified by the user
    if test "x$enable_universal_binary" != "xyes"; then
      osx_arch="$enable_universal_binary"
    else
      ## otherwise, use default options
      osx_arch="-arch arm64 -arch x86_64"
    fi

    CFLAGS="${CFLAGS} $osx_arch"
    CXXFLAGS="${CXXFLAGS} $osx_arch"
    LDFLAGS="${LDFLAGS} $osx_arch"

    ## trim leading/trailing empty spaces from flags
    CFLAGS="`echo ${CFLAGS} | sed -e 's/^ *//' -e 's/ *$//'`"
    CXXFLAGS="`echo ${CFLAGS} | sed -e 's/^ *//' -e 's/ *$//'`"
    LDLAGS="`echo ${CFLAGS} | sed -e 's/^ *//' -e 's/ *$//'`"

  ])


])
m4trace:m4/ac_rna_refman.m4:5: -1- AC_DEFUN([RNA_ENABLE_DOXYGEN_REFMAN], [

RNA_ADD_PACKAGE([doc_pdf],
                [PDF RNAlib reference manual],
                [yes], [],
                [ with_doc=yes])
RNA_ADD_PACKAGE([doc_html],
                [HTML RNAlib reference manual],
                [yes], [],
                [ with_doc=yes])
RNA_ADD_PACKAGE([doc],
                [RNAlib reference manual],
                [yes],
                [ with_doc=no
                  with_doc_pdf=no
                  with_doc_html=no],
                [ with_doc_pdf=yes
                  with_doc_html=yes])

AC_REQUIRE([RNA_LATEX_ENVIRONMENT])
AC_PATH_PROG(doxygen, [doxygen],no)
AC_PATH_PROG(dot,[dot],no)
AC_PATH_PROG(grep,[grep],no)
AC_PATH_PROG(perl,[perl],no)
AC_CHECK_PROGS([SPHINXBUILD], [sphinx-build sphinx-build3], [no])

# check whether we are able to generate the doxygen documentation
RNA_PACKAGE_IF_ENABLED([doc],[
  doxygen_xml="yes"
  doc_build_requirements_html="yes"
  doc_build_requirements_pdf="yes"
  doc_build_pdf_failed=""
  doc_build_html_failed=""

  AC_SUBST([DOXYGEN_PROJECT_NAME], [$1-$PACKAGE_VERSION])
  AC_SUBST([DOXYGEN_SRCDIR], [$srcdir])
  AC_SUBST([DOXYGEN_DOCDIR], [doc/doxygen])
  AC_SUBST([DOXYGEN_CONF], [doxygen.conf])
  AC_SUBST([DOXYGEN_HAVE_DOT],[ifelse([$dot], [no], [NO], [YES])])
  AC_SUBST([SPHINX_SRCDIR], [doc/source])
  AC_SUBST([SPHINX_CMD_LATEX], ["$LATEX_CMD -interaction=nonstopmode -halt-on-error"])
  AC_SUBST([SPHINX_CMD_BIBTEX], [$BIBTEX_CMD])
  AC_SUBST([SPHINX_CMD_MAKEINDEX], [$MAKEINDEX_CMD])

  # First, check whether we are able to build doxygen XML data
  # or whether we at least have it already present
  if test "x$doxygen" != xno && test "x$perl" = xno;
  then
    AC_MSG_WARN([perl command required for automatic (re)generation of reference manual!])
    doxygen=no
  fi

  if test "x$doxygen" = xno;
  then
    AC_RNA_TEST_FILE( [$DOXYGEN_DOCDIR/xml/index.xml],
                      [doxygen_xml=yes],
                      [doxygen_xml=no
                       doc_build_requirements_html="no"
                       doc_build_requirements_pdf="no"
                       doc_build_pdf_failed="no doxygen xml"
                       doc_build_html_failed="no doxygen xml"])
  else
    doxygen_xml=yes
  fi

  AS_IF([test "x$SPHINXBUILD" = xno],
        [
          AC_MSG_WARN(sphinx-build is required to build the reference manual)
          doc_build_requirements_html="no"
          doc_build_requirements_pdf="no"
          AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no sphinx-build])
          AC_RNA_APPEND_VAR_COMMA(doc_build_html_failed, [no sphinx-build])
        ])

  RNA_PACKAGE_IF_DISABLED([python],
        [
          AC_MSG_WARN(Python module build required to build the reference manual)
          doc_build_requirements_html="no"
          doc_build_requirements_pdf="no"
          AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no python])
          AC_RNA_APPEND_VAR_COMMA(doc_build_html_failed, [no python])
        ])

  if test "x$LATEX_CMD" = xno;
  then
    AC_MSG_WARN([Could not find pdflatex!])
    AC_MSG_WARN([deactivating automatic (re)generation of reference manual!])
      doc_build_requirements_pdf="no"
      AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no pdflatex])
  else
    RNA_LATEX_TEST_PACKAGES(
      [inputenc cmap fontenc amsmath amssymb amstext babel tgtermes tgheros fncychap geometry hyperref hypcap], [], [
      doc_build_requirements_pdf="no"
      AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [LaTeX packages missing])
    ])
  fi

  if test "x$makeindex" = xno;
  then
    AC_MSG_WARN([makeindex command not found on your system!])
    AC_MSG_WARN([deactivating automatic (re)generation of reference manual!])
    doc_build_requirements_pdf="no"
    AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no makeindex])
  fi

  if test "x$bibtex" = xno;
  then
    AC_MSG_WARN([bibtex command not found on your system!])
    AC_MSG_WARN([deactivating automatic (re)generation of reference manual!])
    doc_build_requirements_pdf="no"
    AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no bibtex])
  fi

  if test "x$grep" = xno;
  then
    AC_MSG_WARN([grep command not found on your system!])
    AC_MSG_WARN([deactivating automatic (re)generation of reference manual!])
    doc_build_requirements_pdf="no"
    AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no grep])
  fi

])


RNA_PACKAGE_IF_ENABLED([doc_pdf],[
  if test "x$doc_build_requirements_pdf" = xno;
  then
    # check if a generated reference manual already exists
    RNA_PACKAGE_IF_ENABLED([doc_pdf],[
      AC_RNA_TEST_FILE( [doc/$DOXYGEN_PROJECT_NAME.pdf],
                        [with_doc_pdf=yes],
                        [with_doc_pdf=no
                         doc_pdf_failed="($doc_build_pdf_failed)"])
    ])
  else
    doc_build_pdf_failed=""
  fi
])

RNA_PACKAGE_IF_ENABLED([doc_html],[
  if test "x$doc_build_requirements_html" = xno;
  then
    RNA_PACKAGE_IF_ENABLED([doc_html],[
      AC_RNA_TEST_FILE( [doc/build/html/index.html],
                        [with_doc_html=yes],
                        [with_doc_html=no
                         doc_html_failed="($doc_build_html_failed)"])
    ])
  else
    doc_build_html_failed=""
  fi
])

# setup everything in order to generate reference manual

RNA_PACKAGE_IF_ENABLED([doc],[


  AC_CONFIG_FILES([${DOXYGEN_DOCDIR}/${DOXYGEN_CONF}])
  AC_CONFIG_FILES([doc/conf.py])
  AC_CONFIG_FILES([${SPHINX_SRCDIR}/conf.py])
  AC_CONFIG_FILES([${SPHINX_SRCDIR}/install.rst])

  if test "x$with_doc_pdf" = "x$with_doc_html";
  then
    if test "x$with_doc_pdf" = "x$with_doc";
    then
        if test "x$with_doc_pdf" = "xno";
        then
            with_doc=no
        fi
    fi
  fi
])

AC_SUBST([REFERENCE_MANUAL_PDF_NAME], [ifelse([$with_doc_pdf],
                                              [no],
                                              [],
                                              [$DOXYGEN_PROJECT_NAME.pdf])])
AC_SUBST([REFERENCE_MANUAL_TAGFILE],  [ifelse([$doxygen],
                                              [no],
                                              [],
                                              [$DOXYGEN_PROJECT_NAME.tag])])


# setup variables used in Makefile.am

# Define ${htmldir} if the configure script was created with a version of
# autoconf older than 2.60
# Alternatively, if ${htmldir} is exactly '${docdir}', append a /html to
# separate html files from rest of doc.
# Otherwise, just append the PACKAGE_NAME to the htmldir
if test "x${htmldir}" = "x";
then
  AC_MSG_WARN([resetting htmldir])
  htmldir="${docdir}/html"
fi

if test "x${htmldir}" = 'x${docdir}';
then
  htmldir="${docdir}/html"
else
  htmldir=${htmldir}/${PACKAGE_NAME}
fi

AC_SUBST(htmldir, [${htmldir}])

#

AM_CONDITIONAL(WITH_REFERENCE_MANUAL, test "x$with_doc" != xno)
AM_CONDITIONAL(WITH_REFERENCE_MANUAL_BUILD, test "x$doxygen" != xno)
AM_CONDITIONAL(WITH_REFERENCE_MANUAL_PDF, test "x$with_doc_pdf" != xno)
AM_CONDITIONAL(WITH_REFERENCE_MANUAL_HTML, test "x$with_doc_html" != xno)
AM_CONDITIONAL(WITH_REFERENCE_MANUAL_XML, test "x$doxygen_xml" != xno)
])
m4trace:m4/ac_rna_subpackages.m4:5: -1- AC_DEFUN([RNA_ENABLE_PKG_KINFOLD], [
  RNA_ADD_PACKAGE([kinfold],
                  [Kinfold program],
                  [yes],[],[],
                  [${srcdir}/src/Kinfold/Makefile.am])

  RNA_PACKAGE_IF_ENABLED([kinfold],[
    AC_CONFIG_SUBDIRS([src/Kinfold])
  ])

  AM_CONDITIONAL(MAKE_KINFOLD, test "x$with_kinfold" != "xno")
])
m4trace:m4/ac_rna_subpackages.m4:22: -1- AC_DEFUN([RNA_ENABLE_PKG_FORESTER], [
  RNA_ADD_PACKAGE([forester],
                  [RNAforester program],
                  [yes],[],[],
                  [${srcdir}/src/RNAforester/Makefile.am])

  RNA_PACKAGE_IF_ENABLED([forester],[
    AC_CONFIG_SUBDIRS([src/RNAforester])
  ])

  AM_CONDITIONAL(MAKE_FORESTER, test "x$with_forester" != "xno")
])
m4trace:m4/ac_rna_subpackages.m4:40: -1- AC_DEFUN([RNA_ENABLE_PKG_CLUSTER], [
  RNA_ADD_PACKAGE([cluster],
                  [AnalyseSeqs and AnalyseDists],
                  [no],[],[],
                  [${srcdir}/src/Cluster/Makefile.am])

  RNA_PACKAGE_IF_ENABLED([cluster],[
    AC_DEFINE([WITH_CLUSTER], [1], [Analyse{Dists,Seqs}])
    AC_SUBST([CLUSTER_DIR], [Cluster])
    AC_CONFIG_FILES([src/Cluster/Makefile])
  ])

  AM_CONDITIONAL(MAKE_CLUSTER, test "x$with_cluster" = "xyes")
])
m4trace:m4/ac_rna_subpackages.m4:59: -1- AC_DEFUN([RNA_ENABLE_PKG_KINWALKER], [
  RNA_ADD_PACKAGE([kinwalker],
                  [Kinwalker program],
                  [no],[],[],
                  [${srcdir}/src/Kinwalker/Makefile.am])

  RNA_PACKAGE_IF_ENABLED([kinwalker],[
    AC_CONFIG_SUBDIRS([src/Kinwalker])
  ])

  AM_CONDITIONAL(MAKE_KINFOLD, test "x$with_kinwalker" != "xyes")
])
m4trace:m4/ac_rna_subpackages.m4:76: -1- AC_DEFUN([RNA_ENABLE_PKG_RNALOCMIN], [
  RNA_ADD_PACKAGE([rnalocmin],
                  [RNAlocmin program],
                  [yes],[],[],
                  [${srcdir}/src/RNAlocmin/Makefile.am])

  RNA_PACKAGE_IF_ENABLED([rnalocmin],[
    AC_CONFIG_SUBDIRS([src/RNAlocmin])
  ])

  AM_CONDITIONAL(MAKE_RNALOCMIN, test "x$with_rnalocmin" != "xno")
])
m4trace:m4/ac_rna_subpackages.m4:93: -1- AC_DEFUN([RNA_ENABLE_PKG_RNAXPLORER], [
  RNA_ADD_PACKAGE([rnaxplorer],
                  [RNAxplorer program and scripting language bindings],
                  [yes],[],[],
                  [${srcdir}/src/RNAxplorer/Makefile.am])

  RNA_PACKAGE_IF_ENABLED([rnaxplorer],[
    rnaxplorer_requirements="no"
    rnaxplorer_failed=""
    AC_PROG_F77

    if test "x$F77" != "x";
    then
      AC_CHECK_HEADERS([openblas/lapacke.h lapacke/lapacke.h lapacke.h],
                       [rnaxplorer_requirements=yes; rnaxplorer_failed=""; break;],
                       [rnaxplorer_failed="(missing lapacke.h)"])
    else
      rnaxplorer_failed="(missing fortran compiler)"
    fi

    if test "x$rnaxplorer_requirements" = "xyes";
    then
      AC_CONFIG_SUBDIRS([src/RNAxplorer])
    else
      AC_MSG_WARN([
========================================
Unable to detect all lapack requirements
to build the subpackage RNAxplorer!

  ${rnaxplorer_failed}

Deactivating build of RNAxplorer...
========================================])
      with_rnaxplorer=no
    fi
  ])

  AM_CONDITIONAL(MAKE_RNAXPLORER, test "x$with_rnaxplorer" != "xno")
])
m4trace:m4/ac_rna_swig.m4:1: -1- AC_DEFUN([RNA_ENABLE_SWIG_INTERFACES], [

  AC_ARG_VAR([SWIG], [Path to the 'swig' program to generate scripting language interfaces])

  AX_REQUIRE_DEFINED([AX_PKG_SWIG])

  RNA_ADD_PACKAGE([swig],
                  [SWIG scripting language interfaces],
                  [yes],[],[],
                  [${srcdir}/interfaces/Makefile.am])

  AS_IF([test "x$with_swig" != "xno"],[
    wants_swig="yes"
    AX_PKG_SWIG(4.0.2, [has_swig="yes"], [has_swig="no"])
  ],[
    wants_swig="no"
  ])

  AM_CONDITIONAL(HAS_SWIG, test "x$has_swig" != "xno")
  RNA_ENABLE_SWIG_PERL
  RNA_ENABLE_SWIG_PYTHON2
  RNA_ENABLE_SWIG_PYTHON

])
m4trace:m4/ac_rna_swig.m4:27: -1- AC_DEFUN([RNA_ENABLE_SWIG_PERL], [

  RNA_ADD_PACKAGE([perl],
                  [Perl interface],
                  [yes],[],[],
                  [${srcdir}/interfaces/Perl/Makefile.am])


  ## check for perl requirements
  AS_IF([test "x$with_perl" != "xno"],[
    AS_IF([test "x$wants_swig" = "xno"],[
      with_perl="no"
    ], [
      ## if swig is not available, check whether we already have swig generated sources
      if test "x$has_swig" != "xyes"
      then
        AC_RNA_TEST_FILE([${srcdir}/interfaces/Perl/RNA_wrap.cpp],[],[
          with_perl="no"
        ])
        AC_RNA_TEST_FILE([${srcdir}/interfaces/Perl/RNA.pm],[],[
          with_perl="no"
        ])
      fi
    ])
  ])

  RNA_PACKAGE_IF_ENABLED([perl],[
    AX_PERL_EXT
    if test "x$PERL" = "x"; then
      AC_MSG_ERROR([Perl is required to build.])
      [enable_perl_status="Perl is required to build."]
    fi
  ])

  # prepare all files for perl interface
  RNA_PACKAGE_IF_ENABLED([perl],[
    # Compose the correct installation path for perl modules
    #
    # here we actually have to account for INSTALLDIRS env variable, which can be
    #
    # site    = where the local systems administrator installs packages to
    # vendor  = where system packages are installed to, or
    # core    = where perl core packages are installed
    #
    # The default selection is 'site', but upon packaging for a specific distribution
    # we might want the user to set this to 'vendor'
    #
    AS_IF([ test "x$INSTALLDIRS" == "xvendor" ],[
      PERL_ARCH_RELATIVE_INSTALL_DIR=`echo ${PERL_EXT_VENDORARCH} | sed "s,${PERL_EXT_VENDORPREFIX},,"`
      PERL_LIB_RELATIVE_INSTALL_DIR=`echo ${PERL_EXT_VENDORLIB} | sed "s,${PERL_EXT_VENDORPREFIX},,"`
      ],[
      PERL_ARCH_RELATIVE_INSTALL_DIR=`echo ${PERL_EXT_SITEARCH} | sed "s,${PERL_EXT_SITEPREFIX},,"`
      PERL_LIB_RELATIVE_INSTALL_DIR=`echo ${PERL_EXT_SITELIB} | sed "s,${PERL_EXT_SITEPREFIX},,"`
    ])
    AC_SUBST(PERL_ARCH_RELATIVE_INSTALL_DIR)
    AC_SUBST(PERL_LIB_RELATIVE_INSTALL_DIR)

    AC_DEFINE([WITH_PERL_INTERFACE], [1], [Create the perl interface to RNAlib])
    AC_SUBST([PERL_INTERFACE], [Perl])
    AC_CONFIG_FILES([interfaces/Perl/Makefile interfaces/Perl/version.i])
  ])

])
m4trace:m4/ac_rna_swig.m4:91: -1- AC_DEFUN([RNA_ENABLE_SWIG_PYTHON], [

  AX_REQUIRE_DEFINED([AX_PYTHON3_DEVEL])

  RNA_ADD_PACKAGE([python],
                  [Python 3.x interface],
                  [yes],[],[],
                  [${srcdir}/interfaces/Python/Makefile.am])


  ## check for python requirements
  AS_IF([test "x$with_python" != "xno"],[
    AS_IF([test "x$wants_swig" = "xno"],[
      with_python="no"
    ],[
      ## if swig is not available, check whether we already have swig generated sources
      if test "x$has_swig" != "xyes"
      then
        AC_RNA_TEST_FILE([${srcdir}/interfaces/Python/RNA_wrap.cpp],[],[
          with_python="no"
        ])
        AC_RNA_TEST_FILE([${srcdir}/interfaces/Python/RNA.py],[],[
          with_python="no"
        ])
      fi
    ])
  ])

  AS_IF([test "x$with_python" != "xno"],[

    ## check for python3 config
    AX_PYTHON3_DEVEL

    if test "x$python3_enabled_but_failed" != "x"
    then
      with_python="no"
    else
      AC_DEFINE([WITH_PYTHON_INTERFACE], [1], [Create the Python 3.x interface to RNAlib])
      AC_SUBST([PYTHON_INTERFACE], [Python])
    fi

    AC_CONFIG_FILES([interfaces/Python/Makefile interfaces/Python/version.i])
    AC_CONFIG_FILES([interfaces/Python/RNA/__init__.py])
    AC_CONFIG_FILES([setup.py setup.cfg pyproject.toml])
  ])
])
m4trace:m4/ac_rna_swig.m4:138: -1- AC_DEFUN([RNA_ENABLE_SWIG_PYTHON2], [

  AX_REQUIRE_DEFINED([AX_PYTHON2_DEVEL])

  RNA_ADD_PACKAGE([python2],
                  [Python2 interface],
                  [no],[],[],
                  [${srcdir}/interfaces/Python2/Makefile.am])


  ## check for python2 requirements
  AS_IF([test "x$with_python2" != "xno"],[
    AS_IF([test "x$wants_swig" = "xno"],[
      with_python2="no"
    ],[
      ## if swig is not available, check whether we already have swig generated sources
      if test "x$has_swig" != "xyes"
      then
        AC_RNA_TEST_FILE([${srcdir}/interfaces/Python2/RNA_wrap.cpp],[],[
          with_python2="no"
        ])
        AC_RNA_TEST_FILE([${srcdir}/interfaces/Python2/RNA.py],[],[
          with_python2="no"
        ])
      fi
    ])
  ])

  AS_IF([test "x$with_python2" != "xno"],[

    ## check for python2 config
    AX_PYTHON2_DEVEL

    if test "x$python2_enabled_but_failed" != "x"
    then
      with_python2="no"
    else
      AC_SUBST(PYTHON2DIR,$python2dir)
      AC_SUBST(PKGPYTHON2DIR,$pkgpython2dir)
      AC_SUBST(PYEXEC2DIR,$py2execdir)
      AC_SUBST(PKGPYEXEC2DIR,$pkgpy2execdir)

      AC_DEFINE([WITH_PYTHON2_INTERFACE], [1], [Create the Python 2.x interface to RNAlib])
      AC_SUBST([PYTHON2_INTERFACE], [Python2])
      AC_CONFIG_FILES([interfaces/Python2/Makefile interfaces/Python2/version.i])
    fi
  ])
])
m4trace:m4/ac_rna_tutorial.m4:4: -1- AC_DEFUN([RNA_ENABLE_TUTORIAL], [

    AC_REQUIRE([RNA_LATEX_ENVIRONMENT])

RNA_ADD_PACKAGE([tutorial_pdf],
                [PDF tutorial],
                [yes])
RNA_ADD_PACKAGE([tutorial_html],
                [HTML tutorial],
                [no])
RNA_ADD_PACKAGE([tutorial],
                [ViennaRNA tutorial],
                [yes],
                [
                  with_tutorial=no
                  with_tutorial_pdf=no
                  with_tutorial_html=no
                ],
                [])


AC_PATH_PROG(htlatex,[htlatex],no)

# setup everything in order to generate the doxygen configfile
RNA_PACKAGE_IF_ENABLED([tutorial],[

  AC_SUBST([TUTORIAL_PROJECT_NAME], [RNA-tutorial-$PACKAGE_VERSION])
  AC_SUBST([TUTORIAL_SRCDIR], [$srcdir])
  AC_SUBST([TUTORIAL_DOCDIR], [ifelse([$2], [], [RNA-Tutorial], [$2])])

  RNA_PACKAGE_IF_ENABLED([tutorial_pdf], [
    # check whether pdflatex is available
    if test "x$LATEX_CMD" = xno;
    then
      AC_MSG_WARN([Could not find pdflatex!])
      AC_MSG_WARN([deactivating automatic (re)generation of tutorial!])
      _tutorial_pdf_failed="pdflatex command is missing!"
      tutorial_requirements_pdf=no
    else
      RNA_LATEX_TEST_PACKAGES([amsmath amssymb babel beamerarticle caption color fancyvrb graphics hyperref keystroke pgf upquote url verbatim xcolor], [], [
        _tutorial_pdf_failed="Required LaTeX packages are missing!"
        tutorial_requirements_pdf=no
      ])
    fi

    AC_SUBST([TUTORIAL_CMD_LATEX], ["$LATEX_CMD -interaction=nonstopmode -halt-on-error"])

    # check if a generated tutorial already exists
    if test "x$tutorial_requirements_pdf" = xno;
    then
      AC_RNA_TEST_FILE( [$TUTORIAL_DOCDIR/$TUTORIAL_PROJECT_NAME.pdf],
                        [with_tutorial_pdf=yes],
                        [with_tutorial_pdf=no
                         tutorial_pdf_failed="($_tutorial_pdf_failed)"])
    fi
  ])

  RNA_PACKAGE_IF_ENABLED([tutorial_html], [
    AC_MSG_WARN([

  ============================================================================
   Building the HTML tutorial is intended for the maintainers website only!

   YOU MOST PROBABLY DO NOT WANT TO DO THIS!

   Use the output at your own risk!
   Also note, that the HTML tutorial is ignored during the install step!
  ============================================================================
   ])

    if test "x$htlatex" = xno;
    then
        AC_MSG_WARN([htlatex does not exists on your system!])
        AC_MSG_WARN([deactivating automatic (re)generation of HTML tutorial!])
        tutorial_html_failed="(htlatex command is missing!)"
        with_tutorial_html=no
    fi

    AC_SUBST([TUTORIAL_CMD_HTLATEX], [$htlatex])
  ])

  ## disable tutorial in case PDF and HTML are disabled
  AS_IF([ test "x$with_tutorial_pdf" == "xno" && test "x$with_tutorial_html" == "xno"], [ with_tutorial=no ])
])

AC_SUBST([TUTORIAL_PDF_NAME], [ifelse([$with_tutorial],
                                      [no],
                                      [],
                                      [$TUTORIAL_PROJECT_NAME.pdf])])


AM_CONDITIONAL(WITH_TUTORIAL, test "x$with_tutorial" != xno)
AM_CONDITIONAL(WITH_TUTORIAL_BUILD, test "x$tutorial_requirements_pdf" != xno)
AM_CONDITIONAL(WITH_TUTORIAL_PDF, test "x$with_tutorial_pdf" != xno)
AM_CONDITIONAL(WITH_TUTORIAL_HTML, test "x$with_tutorial_html" != xno)
])
m4trace:m4/ac_rna_unit_tests.m4:5: -1- AC_DEFUN([RNA_ENABLE_UNIT_TESTS], [

  RNA_ADD_FEATURE([unittests],
                  [Unit tests],
                  [yes])

  RNA_ADD_PACKAGE([check],
                  [C-library Unit tests],
                  [yes])

  RNA_ADD_FEATURE([check_executables],
                  [Unit tests for executables],
                  [yes])

  RNA_ADD_FEATURE([check_perl],
                  [Perl interface Unit tests],
                  [yes])

  RNA_ADD_FEATURE([check_python],
                  [Python 3.x interface Unit tests],
                  [yes])

  RNA_ADD_FEATURE([check_python2],
                  [Python 2.x interface Unit tests],
                  [yes])

  RNA_FEATURE_IF_ENABLED([unittests],[

  AC_REQUIRE_AUX_FILE([tap-driver.sh])

    # check prerequisties for unit testing support
    RNA_PACKAGE_IF_ENABLED([check],[
      PKG_CHECK_MODULES([CHECK], [check >= 0.9.4], [],[
        AC_MSG_WARN([check not found -- will not build C-library Unit tests])
        with_check="no"
        enabled_but_failed_check="(check framework not found)"
      ])
    ])

    RNA_PACKAGE_IF_ENABLED([check],[
      AC_DEFINE([WITH_CHECK], [1], [Include C-library Unit tests])
    ])

    RNA_FEATURE_IF_ENABLED([check_executables],[
      AC_ARG_VAR([DIFF],[the 'diff' program to use for test output comparison])
      AC_PATH_PROG([DIFF],[diff],[])
      if test "x$DIFF" = "x"; then
        AC_MSG_WARN([diff not found -- deactivating check for executables!])
        AC_MSG_NOTICE([==> Set DIFF environment variable if present in non-standard path!])
        enable_check_executables="no"
      fi
    ])

    RNA_FEATURE_IF_ENABLED([check_perl],[
      ## switch off if perl interface is not going to be build
      if test "x$with_perl" != "xyes" ; then
        enable_check_perl="no"
      fi
    ])

    RNA_FEATURE_IF_ENABLED([check_python],[
      ## switch off if python interface is not going to be build
      if test "x$with_python" != "xyes" ; then
        enable_check_python="no"
      fi
    ])

    RNA_FEATURE_IF_ENABLED([check_python2],[
      ## switch off if python2 interface is not going to be build
      if test "x$with_python2" != "xyes" ; then
        enable_check_python2="no"
      fi
    ])

  ])

  AS_IF([test "x$enable_unittests" = "xno"],[
    with_check="no"
    enable_check_perl="no"
    enable_check_python="no"
    enable_check_python2="no"
  ])

  AM_CONDITIONAL(WITH_UNIT_TESTS, test "x$enable_unittests" != "xno")
  AM_CONDITIONAL(WITH_CHECK, test "x$with_check" != "xno")
  AM_CONDITIONAL(WITH_EXECUTABLE_TESTS, test "x$with_check_executables" != "xno")
  AM_CONDITIONAL(WITH_PERL_TESTS, test "x$enable_check_perl" != "xno")
  AM_CONDITIONAL(WITH_PYTHON_TESTS, test "x$enable_check_python" != "xno")
  AM_CONDITIONAL(WITH_PYTHON2_TESTS, test "x$enable_check_python2" != "xno")

  AC_CONFIG_FILES([tests/Makefile tests/RNApath.py tests/RNAHelpers.pm tests/test-env.sh])
])
m4trace:m4/ax_append_flag.m4:33: -1- AC_DEFUN([AX_APPEND_FLAG], [dnl
AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_SET_IF
AS_VAR_PUSHDEF([FLAGS], [m4_default($2,_AC_LANG_PREFIX[FLAGS])])
AS_VAR_SET_IF(FLAGS,[
  AS_CASE([" AS_VAR_GET(FLAGS) "],
    [*" $1 "*], [AC_RUN_LOG([: FLAGS already contains $1])],
    [
     AS_VAR_APPEND(FLAGS,[" $1"])
     AC_RUN_LOG([: FLAGS="$FLAGS"])
    ])
  ],
  [
  AS_VAR_SET(FLAGS,[$1])
  AC_RUN_LOG([: FLAGS="$FLAGS"])
  ])
AS_VAR_POPDEF([FLAGS])dnl
])
m4trace:m4/ax_check_compile_flag.m4:39: -1- AC_DEFUN([AX_CHECK_COMPILE_FLAG], [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
  _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:m4/ax_check_link_flag.m4:39: -1- AC_DEFUN([AX_CHECK_LINK_FLAG], [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl
AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [
  ax_check_save_flags=$LDFLAGS
  LDFLAGS="$LDFLAGS $4 $1"
  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  LDFLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:m4/ax_compiler_vendor.m4:64: -1- AC_DEFUN([AX_COMPILER_VENDOR], [dnl
    AC_CACHE_CHECK([for _AC_LANG compiler vendor], ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor, [dnl
	dnl  If you modify this list of vendors, please add similar support
	dnl  to ax_compiler_version.m4 if at all possible.
	dnl
	dnl  Note: Do NOT check for GCC first since some other compilers
	dnl  define __GNUC__ to remain compatible with it.  Compilers that
	dnl  are very slow to start (such as Intel) are listed first.

	vendors="
		intel:		__ICC,__ECC,__INTEL_COMPILER
		ibm:		__xlc__,__xlC__,__IBMC__,__IBMCPP__,__ibmxl__
		pathscale:	__PATHCC__,__PATHSCALE__
		clang:		__clang__
		cray:		_CRAYC
		fujitsu:	__FUJITSU
		sdcc:		SDCC,__SDCC
		sx:		_SX
		nvhpc:		__NVCOMPILER
		portland:	__PGI
		gnu:		__GNUC__
		sun:		__SUNPRO_C,__SUNPRO_CC,__SUNPRO_F90,__SUNPRO_F95
		hp:		__HP_cc,__HP_aCC
		dec:		__DECC,__DECCXX,__DECC_VER,__DECCXX_VER
		borland:	__BORLANDC__,__CODEGEARC__,__TURBOC__
		comeau:		__COMO__
		kai:		__KCC
		lcc:		__LCC__
		sgi:		__sgi,sgi
		microsoft:	_MSC_VER
		metrowerks:	__MWERKS__
		watcom:		__WATCOMC__
		tcc:		__TINYC__
		unknown:	UNKNOWN
	"
	for ventest in $vendors; do
	    case $ventest in
		*:)
		    vendor=$ventest
		    continue
		    ;;
		*)
		    vencpp="defined("`echo $ventest | sed 's/,/) || defined(/g'`")"
		    ;;
	    esac

	    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [[
#if !($vencpp)
      thisisanerror;
#endif
	    ]])], [break])
	done

	ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor=`echo $vendor | cut -d: -f1`
    ])
])
m4trace:m4/ax_cxx_compile_stdcxx.m4:51: -1- AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl
  m4_if([$1], [11], [ax_cxx_compile_alternatives="11 0x"],
        [$1], [14], [ax_cxx_compile_alternatives="14 1y"],
        [$1], [17], [ax_cxx_compile_alternatives="17 1z"],
        [$1], [20], [ax_cxx_compile_alternatives="20"],
        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$2], [], [],
        [$2], [ext], [],
        [$2], [noext], [],
        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],
        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],
        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],
        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])
  AC_LANG_PUSH([C++])dnl
  ac_success=no

  m4_if([$2], [], [dnl
    AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,
		   ax_cv_cxx_compile_cxx$1,
      [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
        [ax_cv_cxx_compile_cxx$1=yes],
        [ax_cv_cxx_compile_cxx$1=no])])
    if test x$ax_cv_cxx_compile_cxx$1 = xyes; then
      ac_success=yes
    fi])

  m4_if([$2], [noext], [], [dnl
  if test x$ac_success = xno; then
    for alternative in ${ax_cxx_compile_alternatives}; do
      switch="-std=gnu++${alternative}"
      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                     $cachevar,
        [ac_save_CXX="$CXX"
         CXX="$CXX $switch"
         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
          [eval $cachevar=yes],
          [eval $cachevar=no])
         CXX="$ac_save_CXX"])
      if eval test x\$$cachevar = xyes; then
        CXX="$CXX $switch"
        if test -n "$CXXCPP" ; then
          CXXCPP="$CXXCPP $switch"
        fi
        ac_success=yes
        break
      fi
    done
  fi])

  m4_if([$2], [ext], [], [dnl
  if test x$ac_success = xno; then
    dnl HP's aCC needs +std=c++11 according to:
    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf
    dnl Cray's crayCC needs "-h std=c++11"
    dnl MSVC needs -std:c++NN for C++17 and later (default is C++14)
    for alternative in ${ax_cxx_compile_alternatives}; do
      for switch in -std=c++${alternative} +std=c++${alternative} "-h std=c++${alternative}" MSVC; do
        if test x"$switch" = xMSVC; then
          dnl AS_TR_SH maps both `:` and `=` to `_` so -std:c++17 would collide
          dnl with -std=c++17.  We suffix the cache variable name with _MSVC to
          dnl avoid this.
          switch=-std:c++${alternative}
          cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_${switch}_MSVC])
        else
          cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
        fi
        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                       $cachevar,
          [ac_save_CXX="$CXX"
           CXX="$CXX $switch"
           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
            [eval $cachevar=yes],
            [eval $cachevar=no])
           CXX="$ac_save_CXX"])
        if eval test x\$$cachevar = xyes; then
          CXX="$CXX $switch"
          if test -n "$CXXCPP" ; then
            CXXCPP="$CXXCPP $switch"
          fi
          ac_success=yes
          break
        fi
      done
      if test x$ac_success = xyes; then
        break
      fi
    done
  fi])
  AC_LANG_POP([C++])
  if test x$ax_cxx_compile_cxx$1_required = xtrue; then
    if test x$ac_success = xno; then
      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])
    fi
  fi
  if test x$ac_success = xno; then
    HAVE_CXX$1=0
    AC_MSG_NOTICE([No compiler with C++$1 support was found])
  else
    HAVE_CXX$1=1
    AC_DEFINE(HAVE_CXX$1,1,
              [define if the compiler supports basic C++$1 syntax])
  fi
  AC_SUBST(HAVE_CXX$1)
])
m4trace:m4/ax_openmp.m4:72: -1- AC_DEFUN([AX_OPENMP], [
AC_PREREQ([2.69]) dnl for _AC_LANG_PREFIX

AC_CACHE_CHECK([for OpenMP flag of _AC_LANG compiler], ax_cv_[]_AC_LANG_ABBREV[]_openmp, [save[]_AC_LANG_PREFIX[]FLAGS=$[]_AC_LANG_PREFIX[]FLAGS
ax_cv_[]_AC_LANG_ABBREV[]_openmp=unknown
# Flags to try:  -fopenmp (gcc), -mp (SGI & PGI),
#                -qopenmp (icc>=15), -openmp (icc),
#                -xopenmp (Sun), -omp (Tru64),
#                -qsmp=omp (AIX),
#                none
ax_openmp_flags="-fopenmp -openmp -qopenmp -mp -xopenmp -omp -qsmp=omp none"
if test "x$OPENMP_[]_AC_LANG_PREFIX[]FLAGS" != x; then
  ax_openmp_flags="$OPENMP_[]_AC_LANG_PREFIX[]FLAGS $ax_openmp_flags"
fi
for ax_openmp_flag in $ax_openmp_flags; do
  case $ax_openmp_flag in
    none) []_AC_LANG_PREFIX[]FLAGS=$save[]_AC_LANG_PREFIX[] ;;
    *) []_AC_LANG_PREFIX[]FLAGS="$save[]_AC_LANG_PREFIX[]FLAGS $ax_openmp_flag" ;;
  esac
  AC_LINK_IFELSE([AC_LANG_SOURCE([[
@%:@include <omp.h>

static void
parallel_fill(int * data, int n)
{
  int i;
@%:@pragma omp parallel for
  for (i = 0; i < n; ++i)
    data[i] = i;
}

int
main()
{
  int arr[100000];
  omp_set_num_threads(2);
  parallel_fill(arr, 100000);
  return 0;
}
]])],[ax_cv_[]_AC_LANG_ABBREV[]_openmp=$ax_openmp_flag; break],[])
done
[]_AC_LANG_PREFIX[]FLAGS=$save[]_AC_LANG_PREFIX[]FLAGS
])
if test "x$ax_cv_[]_AC_LANG_ABBREV[]_openmp" = "xunknown"; then
  m4_default([$2],:)
else
  if test "x$ax_cv_[]_AC_LANG_ABBREV[]_openmp" != "xnone"; then
    OPENMP_[]_AC_LANG_PREFIX[]FLAGS=$ax_cv_[]_AC_LANG_ABBREV[]_openmp
  fi
  m4_default([$1], [AC_DEFINE(HAVE_OPENMP,1,[Define if OpenMP is enabled])])
fi
])
m4trace:m4/ax_perl_ext.m4:65: -1- AC_DEFUN([AX_PERL_EXT], [

        #
        # Check if perl executable exists.
        #
        AC_PATH_PROGS(PERL, ["${PERL-perl}"], [])

        if test -n "$PERL" ; then

                #
                # Check for Perl prefix.
                #
                AC_ARG_VAR(PERL_EXT_PREFIX, [Perl PREFIX])
                AC_MSG_CHECKING([for Perl prefix])
                if test -z "$PERL_EXT_PREFIX" ; then
                        [PERL_EXT_PREFIX=`$PERL -MConfig -e 'print $Config{prefix};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_PREFIX])
                AC_SUBST(PERL_EXT_PREFIX)

                #
                # Check for Perl siteprefix.
                #
                AC_ARG_VAR(PERL_EXT_SITEPREFIX, [Perl SITEPREFIX])
                AC_MSG_CHECKING([for Perl siteprefix])
                if test -z "$PERL_EXT_SITEPREFIX" ; then
                        [PERL_EXT_SITEPREFIX=`$PERL -MConfig -e 'print $Config{siteprefix};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_SITEPREFIX])
                AC_SUBST(PERL_EXT_SITEPREFIX)

                #
                # Check for Perl vendorprefix.
                #
                AC_ARG_VAR(PERL_EXT_VENDORPREFIX, [Perl VENDORPREFIX])
                AC_MSG_CHECKING([for Perl vendorprefix])
                if test -z "$PERL_EXT_VENDORPREFIX" ; then
                        [PERL_EXT_VENDORPREFIX=`$PERL -MConfig -e 'print $Config{vendorprefix};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_VENDORPREFIX])
                AC_SUBST(PERL_EXT_VENDORPREFIX)

                #
                # Check for Perl extensions include path.
                #
                AC_ARG_VAR(PERL_EXT_INC, [Directory to include XS headers from])
                AC_MSG_CHECKING([for Perl extension include path])
                if test -z "$PERL_EXT_INC" ; then
                        [PERL_EXT_INC=`$PERL -MConfig -e 'print $Config{archlibexp}, "/CORE";'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_INC])
                AC_SUBST(PERL_EXT_INC)

                #
                # Check for the extensions target directory.
                #
                AC_ARG_VAR(PERL_EXT_LIB, [Directory to install perl files into])
                AC_MSG_CHECKING([for Perl extension target directory])
                if test -z "$PERL_EXT_LIB" ; then
                        [PERL_EXT_LIB=`$PERL -MConfig -e 'print $Config{sitearch};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_LIB])
                AC_SUBST(PERL_EXT_LIB)

                #
                # Check for the extensions (architecture dependent) site target directory.
                # (same as PERL_EXT_LIB)
                #
                AC_ARG_VAR(PERL_EXT_SITEARCH, [Directory to install architecture dependent site perl files into])
                AC_MSG_CHECKING([for architecture dependent Perl extension site target directory])
                if test -z "$PERL_EXT_SITEARCH" ; then
                    [PERL_EXT_SITEARCH=`$PERL -MConfig -e 'print $Config{sitearch};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_SITEARCH])
                AC_SUBST(PERL_EXT_SITEARCH)

                #
                # Check for the extensions (architecture dependent) vendor target directory.
                #
                AC_ARG_VAR(PERL_EXT_VENDORARCH, [Directory to install architecture dependent vendor perl files into])
                AC_MSG_CHECKING([for architecture dependent Perl extension vendor target directory])
                if test -z "$PERL_EXT_VENDORARCH" ; then
                    [PERL_EXT_VENDORARCH=`$PERL -MConfig -e 'print $Config{vendorarch};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_VENDORARCH])
                AC_SUBST(PERL_EXT_VENDORARCH)

                #
                # Check for the extensions (architecture independent) site target directory.
                #
                AC_ARG_VAR(PERL_EXT_SITELIB, [Directory to install architecture independent site perl files into])
                AC_MSG_CHECKING([for architecture independent Perl extension site target directory])
                if test -z "$PERL_EXT_SITELIB" ; then
                    [PERL_EXT_SITELIB=`$PERL -MConfig -e 'print $Config{sitelib};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_SITELIB])
                AC_SUBST(PERL_EXT_SITELIB)

                #
                # Check for vendors extensions (architecture independent) vendor target directory.
                #
                AC_ARG_VAR(PERL_EXT_VENDORLIB, [Directory to install architecture independent vendor perl files into])
                AC_MSG_CHECKING([for architecture independent Perl extension vendor target directory])
                if test -z "$PERL_EXT_VENDORLIB" ; then
                    [PERL_EXT_VENDORLIB=`$PERL -MConfig -e 'print $Config{vendorlib};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_VENDORLIB])
                AC_SUBST(PERL_EXT_VENDORLIB)

                #
                # Check for Perl CPP flags.
                #
                AC_ARG_VAR(PERL_EXT_CPPFLAGS, [CPPFLAGS to compile perl extensions])
                AC_MSG_CHECKING([for Perl extensions C preprocessor flags])
                if test -z "$PERL_EXT_CPPFLAGS" ; then
                        [PERL_EXT_CPPFLAGS=`$PERL -MConfig -e 'print $Config{cppflags};'`];
                fi
                AC_MSG_RESULT([$PERL_EXT_CPPFLAGS])
                AC_SUBST(PERL_EXT_CPPFLAGS)

                #
                # Check for Perl extension link flags.
                #
                AC_ARG_VAR(PERL_EXT_LDFLAGS, [LDFLAGS to build perl extensions])
                AC_MSG_CHECKING([for Perl extensions linker flags])
                if test -z "$PERL_EXT_LDFLAGS" ; then
                        [PERL_EXT_LDFLAGS=`$PERL -MConfig -e 'print $Config{lddlflags};'`];
                fi
                # Fix LDFLAGS for OS X.  We don't want any -arch flags here, otherwise
                # linking will fail.  Also, OS X Perl LDFLAGS contains "-arch ppc" which
                # is not supported by XCode anymore.
                case "${host}" in
                *darwin*)
                        PERL_EXT_LDFLAGS=`echo ${PERL_EXT_LDFLAGS} | sed -e "s,-arch [[^ ]]*,,g"`
                        ;;
                esac
                AC_MSG_RESULT([$PERL_EXT_LDFLAGS])
                AC_SUBST(PERL_EXT_LDFLAGS)

                #
                # Check for Perl dynamic library extension.
                #
                AC_ARG_VAR(PERL_SO, [Perl dynamic library extension])
                AC_MSG_CHECKING([for Perl dynamic library extension])
                if test -z "$PERL_SO" ; then
                        [PERL_SO=`$PERL -MConfig -e 'print ".", $Config{'dlext'};'`];
                fi
                AC_MSG_RESULT([$PERL_SO])
                AC_SUBST(PERL_SO)
        fi
])
m4trace:m4/ax_pkg_swig.m4:70: -1- AC_DEFUN([AX_PKG_SWIG], [
        # Find path to the "swig" executable.
        AC_PATH_PROGS([SWIG],[swig swig3.0 swig2.0])
        if test -z "$SWIG" ; then
                m4_ifval([$3],[$3],[:])
        elif test -z "$1" ; then
                m4_ifval([$2],[$2],[:])
	else
                AC_MSG_CHECKING([SWIG version])
                [swig_version=`$SWIG -version 2>&1 | grep 'SWIG Version' | sed 's/.*\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\).*/\1/g'`]
                AC_MSG_RESULT([$swig_version])
                if test -n "$swig_version" ; then
                        # Calculate the required version number components
                        [required=$1]
                        [required_major=`echo $required | sed 's/[^0-9].*//'`]
                        if test -z "$required_major" ; then
                                [required_major=0]
                        fi
                        [required=`echo $required. | sed 's/[0-9]*[^0-9]//'`]
                        [required_minor=`echo $required | sed 's/[^0-9].*//'`]
                        if test -z "$required_minor" ; then
                                [required_minor=0]
                        fi
                        [required=`echo $required. | sed 's/[0-9]*[^0-9]//'`]
                        [required_patch=`echo $required | sed 's/[^0-9].*//'`]
                        if test -z "$required_patch" ; then
                                [required_patch=0]
                        fi
                        # Calculate the available version number components
                        [available=$swig_version]
                        [available_major=`echo $available | sed 's/[^0-9].*//'`]
                        if test -z "$available_major" ; then
                                [available_major=0]
                        fi
                        [available=`echo $available | sed 's/[0-9]*[^0-9]//'`]
                        [available_minor=`echo $available | sed 's/[^0-9].*//'`]
                        if test -z "$available_minor" ; then
                                [available_minor=0]
                        fi
                        [available=`echo $available | sed 's/[0-9]*[^0-9]//'`]
                        [available_patch=`echo $available | sed 's/[^0-9].*//'`]
                        if test -z "$available_patch" ; then
                                [available_patch=0]
                        fi
                        # Convert the version tuple into a single number for easier comparison.
                        # Using base 100 should be safe since SWIG internally uses BCD values
                        # to encode its version number.
                        required_swig_vernum=`expr $required_major \* 10000 \
                            \+ $required_minor \* 100 \+ $required_patch`
                        available_swig_vernum=`expr $available_major \* 10000 \
                            \+ $available_minor \* 100 \+ $available_patch`

                        if test $available_swig_vernum -lt $required_swig_vernum; then
                                AC_MSG_WARN([SWIG version >= $1 is required.  You have $swig_version.])
                                SWIG=''
                                m4_ifval([$3],[$3],[])
                        else
                                AC_MSG_CHECKING([for SWIG library])
                                SWIG_LIB=`$SWIG -swiglib | tr '\r\n' '  '`
                                AC_MSG_RESULT([$SWIG_LIB])
                                m4_ifval([$2],[$2],[])
                        fi
                else
                        AC_MSG_WARN([cannot determine SWIG version])
                        SWIG=''
                        m4_ifval([$3],[$3],[])
                fi
        fi
        AC_SUBST([SWIG_LIB])
])
m4trace:m4/ax_pthread.m4:92: -1- AU_DEFUN([ACX_PTHREAD], [m4_if($#, 0, [AX_PTHREAD], [AX_PTHREAD($@)])])
m4trace:m4/ax_pthread.m4:92: -1- AC_DEFUN([ACX_PTHREAD], [AC_DIAGNOSE([obsolete], [The macro `ACX_PTHREAD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AX_PTHREAD], [AX_PTHREAD($@)])])
m4trace:m4/ax_pthread.m4:93: -1- AC_DEFUN([AX_PTHREAD], [
AC_REQUIRE([AC_CANONICAL_HOST])
AC_REQUIRE([AC_PROG_CC])
AC_REQUIRE([AC_PROG_SED])
AC_LANG_PUSH([C])
ax_pthread_ok=no

# We used to check for pthread.h first, but this fails if pthread.h
# requires special compiler flags (e.g. on Tru64 or Sequent).
# It gets checked for in the link test anyway.

# First of all, check if the user has set any of the PTHREAD_LIBS,
# etcetera environment variables, and if threads linking works using
# them:
if test "x$PTHREAD_CFLAGS$PTHREAD_LIBS" != "x"; then
        ax_pthread_save_CC="$CC"
        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        AS_IF([test "x$PTHREAD_CC" != "x"], [CC="$PTHREAD_CC"])
        AS_IF([test "x$PTHREAD_CXX" != "x"], [CXX="$PTHREAD_CXX"])
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"
        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])
        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])
        AC_MSG_RESULT([$ax_pthread_ok])
        if test "x$ax_pthread_ok" = "xno"; then
                PTHREAD_LIBS=""
                PTHREAD_CFLAGS=""
        fi
        CC="$ax_pthread_save_CC"
        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"
fi

# We must check for the threads library under a number of different
# names; the ordering is very important because some systems
# (e.g. DEC) have both -lpthread and -lpthreads, where one of the
# libraries is broken (non-POSIX).

# Create a list of thread flags to try. Items with a "," contain both
# C compiler flags (before ",") and linker flags (after ","). Other items
# starting with a "-" are C compiler flags, and remaining items are
# library names, except for "none" which indicates that we try without
# any flags at all, and "pthread-config" which is a program returning
# the flags for the Pth emulation library.

ax_pthread_flags="pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config"

# The ordering *is* (sometimes) important.  Some notes on the
# individual items follow:

# pthreads: AIX (must check this before -lpthread)
# none: in case threads are in libc; should be tried before -Kthread and
#       other compiler flags to prevent continual compiler warnings
# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)
# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64
#           (Note: HP C rejects this with "bad form for `-t' option")
# -pthreads: Solaris/gcc (Note: HP C also rejects)
# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
#      doesn't hurt to check since this sometimes defines pthreads and
#      -D_REENTRANT too), HP C (must be checked before -lpthread, which
#      is present but should not be used directly; and before -mthreads,
#      because the compiler interprets this as "-mt" + "-hreads")
# -mthreads: Mingw32/gcc, Lynx/gcc
# pthread: Linux, etcetera
# --thread-safe: KAI C++
# pthread-config: use pthread-config program (for GNU Pth library)

case $host_os in

        freebsd*)

        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)
        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)

        ax_pthread_flags="-kthread lthread $ax_pthread_flags"
        ;;

        hpux*)

        # From the cc(1) man page: "[-mt] Sets various -D flags to enable
        # multi-threading and also sets -lpthread."

        ax_pthread_flags="-mt -pthread pthread $ax_pthread_flags"
        ;;

        openedition*)

        # IBM z/OS requires a feature-test macro to be defined in order to
        # enable POSIX threads at all, so give the user a hint if this is
        # not set. (We don't define these ourselves, as they can affect
        # other portions of the system API in unpredictable ways.)

        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],
            [
#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)
             AX_PTHREAD_ZOS_MISSING
#            endif
            ],
            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])
        ;;

        solaris*)

        # On Solaris (at least, for some versions), libc contains stubbed
        # (non-functional) versions of the pthreads routines, so link-based
        # tests will erroneously succeed. (N.B.: The stubs are missing
        # pthread_cleanup_push, or rather a function called by this macro,
        # so we could check for that, but who knows whether they'll stub
        # that too in a future libc.)  So we'll check first for the
        # standard Solaris way of linking pthreads (-mt -lpthread).

        ax_pthread_flags="-mt,-lpthread pthread $ax_pthread_flags"
        ;;
esac

# Are we compiling with Clang?

AC_CACHE_CHECK([whether $CC is Clang],
    [ax_cv_PTHREAD_CLANG],
    [ax_cv_PTHREAD_CLANG=no
     # Note that Autoconf sets GCC=yes for Clang as well as GCC
     if test "x$GCC" = "xyes"; then
        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],
            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */
#            if defined(__clang__) && defined(__llvm__)
             AX_PTHREAD_CC_IS_CLANG
#            endif
            ],
            [ax_cv_PTHREAD_CLANG=yes])
     fi
    ])
ax_pthread_clang="$ax_cv_PTHREAD_CLANG"


# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)

# Note that for GCC and Clang -pthread generally implies -lpthread,
# except when -nostdlib is passed.
# This is problematic using libtool to build C++ shared libraries with pthread:
# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460
# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333
# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555
# To solve this, first try -pthread together with -lpthread for GCC

AS_IF([test "x$GCC" = "xyes"],
      [ax_pthread_flags="-pthread,-lpthread -pthread -pthreads $ax_pthread_flags"])

# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first

AS_IF([test "x$ax_pthread_clang" = "xyes"],
      [ax_pthread_flags="-pthread,-lpthread -pthread"])


# The presence of a feature test macro requesting re-entrant function
# definitions is, on some systems, a strong hint that pthreads support is
# correctly enabled

case $host_os in
        darwin* | hpux* | linux* | osf* | solaris*)
        ax_pthread_check_macro="_REENTRANT"
        ;;

        aix*)
        ax_pthread_check_macro="_THREAD_SAFE"
        ;;

        *)
        ax_pthread_check_macro="--"
        ;;
esac
AS_IF([test "x$ax_pthread_check_macro" = "x--"],
      [ax_pthread_check_cond=0],
      [ax_pthread_check_cond="!defined($ax_pthread_check_macro)"])


if test "x$ax_pthread_ok" = "xno"; then
for ax_pthread_try_flag in $ax_pthread_flags; do

        case $ax_pthread_try_flag in
                none)
                AC_MSG_CHECKING([whether pthreads work without any flags])
                ;;

                *,*)
                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed "s/^\(.*\),\(.*\)$/\1/"`
                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed "s/^\(.*\),\(.*\)$/\2/"`
                AC_MSG_CHECKING([whether pthreads work with "$PTHREAD_CFLAGS" and "$PTHREAD_LIBS"])
                ;;

                -*)
                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])
                PTHREAD_CFLAGS="$ax_pthread_try_flag"
                ;;

                pthread-config)
                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])
                AS_IF([test "x$ax_pthread_config" = "xno"], [continue])
                PTHREAD_CFLAGS="`pthread-config --cflags`"
                PTHREAD_LIBS="`pthread-config --ldflags` `pthread-config --libs`"
                ;;

                *)
                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])
                PTHREAD_LIBS="-l$ax_pthread_try_flag"
                ;;
        esac

        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"

        # Check for various functions.  We must include pthread.h,
        # since some functions may be macros.  (On the Sequent, we
        # need a special flag -Kthread to make this header compile.)
        # We check for pthread_join because it is in -lpthread on IRIX
        # while pthread_create is in libc.  We check for pthread_attr_init
        # due to DEC craziness with -lpthreads.  We check for
        # pthread_cleanup_push because it is one of the few pthread
        # functions on Solaris that doesn't have a non-functional libc stub.
        # We try pthread_create on general principles.

        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>
#                       if $ax_pthread_check_cond
#                        error "$ax_pthread_check_macro must be defined"
#                       endif
                        static void *some_global = NULL;
                        static void routine(void *a)
                          {
                             /* To avoid any unused-parameter or
                                unused-but-set-parameter warning.  */
                             some_global = a;
                          }
                        static void *start_routine(void *a) { return a; }],
                       [pthread_t th; pthread_attr_t attr;
                        pthread_create(&th, 0, start_routine, 0);
                        pthread_join(th, 0);
                        pthread_attr_init(&attr);
                        pthread_cleanup_push(routine, 0);
                        pthread_cleanup_pop(0) /* ; */])],
            [ax_pthread_ok=yes],
            [])

        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"

        AC_MSG_RESULT([$ax_pthread_ok])
        AS_IF([test "x$ax_pthread_ok" = "xyes"], [break])

        PTHREAD_LIBS=""
        PTHREAD_CFLAGS=""
done
fi


# Clang needs special handling, because older versions handle the -pthread
# option in a rather... idiosyncratic way

if test "x$ax_pthread_clang" = "xyes"; then

        # Clang takes -pthread; it has never supported any other flag

        # (Note 1: This will need to be revisited if a system that Clang
        # supports has POSIX threads in a separate library.  This tends not
        # to be the way of modern systems, but it's conceivable.)

        # (Note 2: On some systems, notably Darwin, -pthread is not needed
        # to get POSIX threads support; the API is always present and
        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But
        # -pthread does define _REENTRANT, and while the Darwin headers
        # ignore this macro, third-party headers might not.)

        # However, older versions of Clang make a point of warning the user
        # that, in an invocation where only linking and no compilation is
        # taking place, the -pthread option has no effect ("argument unused
        # during compilation").  They expect -pthread to be passed in only
        # when source code is being compiled.
        #
        # Problem is, this is at odds with the way Automake and most other
        # C build frameworks function, which is that the same flags used in
        # compilation (CFLAGS) are also used in linking.  Many systems
        # supported by AX_PTHREAD require exactly this for POSIX threads
        # support, and in fact it is often not straightforward to specify a
        # flag that is used only in the compilation phase and not in
        # linking.  Such a scenario is extremely rare in practice.
        #
        # Even though use of the -pthread flag in linking would only print
        # a warning, this can be a nuisance for well-run software projects
        # that build with -Werror.  So if the active version of Clang has
        # this misfeature, we search for an option to squash it.

        AC_CACHE_CHECK([whether Clang needs flag to prevent "argument unused" warning when linking with -pthread],
            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],
            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown
             # Create an alternate version of $ac_link that compiles and
             # links in two steps (.c -> .o, .o -> exe) instead of one
             # (.c -> exe), because the warning occurs only in the second
             # step
             ax_pthread_save_ac_link="$ac_link"
             ax_pthread_sed='s/conftest\.\$ac_ext/conftest.$ac_objext/g'
             ax_pthread_link_step=`AS_ECHO(["$ac_link"]) | sed "$ax_pthread_sed"`
             ax_pthread_2step_ac_link="($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)"
             ax_pthread_save_CFLAGS="$CFLAGS"
             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do
                AS_IF([test "x$ax_pthread_try" = "xunknown"], [break])
                CFLAGS="-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS"
                ac_link="$ax_pthread_save_ac_link"
                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],
                    [ac_link="$ax_pthread_2step_ac_link"
                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],
                         [break])
                    ])
             done
             ac_link="$ax_pthread_save_ac_link"
             CFLAGS="$ax_pthread_save_CFLAGS"
             AS_IF([test "x$ax_pthread_try" = "x"], [ax_pthread_try=no])
             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG="$ax_pthread_try"
            ])

        case "$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG" in
                no | unknown) ;;
                *) PTHREAD_CFLAGS="$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS" ;;
        esac

fi # $ax_pthread_clang = yes



# Various other checks:
if test "x$ax_pthread_ok" = "xyes"; then
        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"

        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.
        AC_CACHE_CHECK([for joinable pthread attribute],
            [ax_cv_PTHREAD_JOINABLE_ATTR],
            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown
             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do
                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],
                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],
                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],
                                [])
             done
            ])
        AS_IF([test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xunknown" && \
               test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xPTHREAD_CREATE_JOINABLE" && \
               test "x$ax_pthread_joinable_attr_defined" != "xyes"],
              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],
                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],
                                  [Define to necessary symbol if this constant
                                   uses a non-standard name on your system.])
               ax_pthread_joinable_attr_defined=yes
              ])

        AC_CACHE_CHECK([whether more special flags are required for pthreads],
            [ax_cv_PTHREAD_SPECIAL_FLAGS],
            [ax_cv_PTHREAD_SPECIAL_FLAGS=no
             case $host_os in
             solaris*)
             ax_cv_PTHREAD_SPECIAL_FLAGS="-D_POSIX_PTHREAD_SEMANTICS"
             ;;
             esac
            ])
        AS_IF([test "x$ax_cv_PTHREAD_SPECIAL_FLAGS" != "xno" && \
               test "x$ax_pthread_special_flags_added" != "xyes"],
              [PTHREAD_CFLAGS="$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS"
               ax_pthread_special_flags_added=yes])

        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],
            [ax_cv_PTHREAD_PRIO_INHERIT],
            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],
                                             [[int i = PTHREAD_PRIO_INHERIT;
                                               return i;]])],
                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],
                            [ax_cv_PTHREAD_PRIO_INHERIT=no])
            ])
        AS_IF([test "x$ax_cv_PTHREAD_PRIO_INHERIT" = "xyes" && \
               test "x$ax_pthread_prio_inherit_defined" != "xyes"],
              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])
               ax_pthread_prio_inherit_defined=yes
              ])

        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"

        # More AIX lossage: compile with *_r variant
        if test "x$GCC" != "xyes"; then
            case $host_os in
                aix*)
                AS_CASE(["x/$CC"],
                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],
                    [#handle absolute path differently from PATH based program lookup
                     AS_CASE(["x$CC"],
                         [x/*],
                         [
			   AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC="${CC}_r"])
			   AS_IF([test "x${CXX}" != "x"], [AS_IF([AS_EXECUTABLE_P([${CXX}_r])],[PTHREAD_CXX="${CXX}_r"])])
			 ],
                         [
			   AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])
			   AS_IF([test "x${CXX}" != "x"], [AC_CHECK_PROGS([PTHREAD_CXX],[${CXX}_r],[$CXX])])
			 ]
                     )
                    ])
                ;;
            esac
        fi
fi

test -n "$PTHREAD_CC" || PTHREAD_CC="$CC"
test -n "$PTHREAD_CXX" || PTHREAD_CXX="$CXX"

AC_SUBST([PTHREAD_LIBS])
AC_SUBST([PTHREAD_CFLAGS])
AC_SUBST([PTHREAD_CC])
AC_SUBST([PTHREAD_CXX])

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test "x$ax_pthread_ok" = "xyes"; then
        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])
        :
else
        ax_pthread_ok=no
        $2
fi
AC_LANG_POP
])
m4trace:m4/ax_python2_devel.m4:2: -1- AC_DEFUN([AX_PYTHON2_DEVEL], [

    # (AM_PATH_PYTHON) cannot be used for multiple Python version at once
    if test -z "$PYTHON2" ; then
      AC_PATH_PROGS([PYTHON2], [python2 python2.7 python2.6], [no])
    fi
    AC_ARG_VAR(PYTHON2, [Path to Python2 interpreter (e.g.: /usr/bin/python2)])

    if test "${PYTHON2}" != "no" ; then
      if $PYTHON2 -c 'import distutils.sysconfig' 2> /dev/null
      then
        AC_MSG_CHECKING([for Python2 include path])
        PYTHON2_INC=`$PYTHON2 -c "import distutils.sysconfig; \
            print(distutils.sysconfig.get_python_inc())"`
        AC_SUBST(PYTHON2_INC)
        AC_MSG_RESULT([$PYTHON2_INC])

        # check if the Python.h header is available in the include directory
        AC_MSG_CHECKING([for $PYTHON2_INC/Python.h])
        if test -f "$PYTHON2_INC/Python.h"
        then
          AC_MSG_RESULT(yes)

          AC_MSG_CHECKING([for Python2 ldflags])
          case "$host" in
            # Handle OSX Python extensions differently
            # see: http://blog.tim-smith.us/2015/09/python-extension-modules-os-x/
            #
            *-darwin* | *-macos10*)
              PYTHON2_LDFLAGS="-bundle -undefined dynamic_lookup"
              ;;
            *)
              ;;
          esac
          AC_SUBST(PYTHON2_LDFLAGS)
          AC_MSG_RESULT([$PYTHON2_LDFLAGS])

          AC_MSG_CHECKING([for Python2 extension linker])
          PYTHON2_LD=`$PYTHON2 -c "import distutils.sysconfig; \
                  print(distutils.sysconfig.get_config_var('LDSHARED'))"`
          AC_SUBST(PYTHON2_LD)
          AC_MSG_RESULT([$PYTHON2_LD])

          AC_MSG_CHECKING([for directory to install Python2 scripts in])
          if test -z "$PYTHON2_DIR" ; then
            # the string concatenation below is just a trick to prevent substitution
            PYTHON2_DIR=`$PYTHON2 -c "import distutils.sysconfig; \
                  print(distutils.sysconfig.get_python_lib(0,0,prefix='$' '{prefix}'))"`
          fi
          AC_SUBST(python2dir, $PYTHON2_DIR)
          AC_MSG_RESULT([$PYTHON2_DIR])
          AC_ARG_VAR(PYTHON2_DIR, [Directory to install python2 scripts in])

          AC_MSG_CHECKING([for directory to install architecture dependent python2 things in])
          if test -z "$PYTHON2_EXECDIR" ; then
            PYTHON2_EXECDIR=`$PYTHON2 -c "import distutils.sysconfig; \
                  print(distutils.sysconfig.get_python_lib(1,0,prefix='$' '{exec_prefix}'))"`
          fi
          AC_SUBST(py2execdir, $PYTHON2_EXECDIR)
          AC_MSG_RESULT([$PYTHON2_EXECDIR])
          AC_ARG_VAR(PYTHON2_EXECDIR, [Directory to install architecture dependent python2 things in])

          AC_MSG_CHECKING([for Python2 module extension])
          dnl Usually ".so", but for example, Mac OS X uses ".dylib".
          PYTHON2_SO=`$PYTHON2 -c "import distutils.sysconfig; \
                  print(distutils.sysconfig.get_config_vars('SO')[[0]])"`
          AC_SUBST(PYTHON2_SO)
          AC_MSG_RESULT([$PYTHON2_SO])
        else
          AC_MSG_RESULT(no)
          AC_MSG_WARN([
**********************************************************************
Python.h not found!
You probably need to install python-dev, python-devel, or something similar.
**********************************************************************
])
          python2_enabled_but_failed="Python.h missing"
        fi
      else
        AC_MSG_WARN([
**********************************************************************
Failed to import distutils.sysconfig!
**********************************************************************
])
          python2_enabled_but_failed="Can't import distutils.sysconfig"
      fi
    else
      python2_enabled_but_failed="python2 executable missing"
    fi
])
m4trace:m4/ax_python3_devel.m4:2: -1- AC_DEFUN([AX_PYTHON3_DEVEL], [

    # (AM_PATH_PYTHON) cannot be used for multiple Python version at once
    if test -z "$PYTHON3" ; then
      AC_PATH_PROGS([PYTHON3], [python3 python312 python3.12 python311 python3.11 python310 python3.10 python39 python3.9 python38 python3.8 python37 python3.7 python36 python3.6 python35 python3.5 python34 python3.4], [no])
    fi
    AC_ARG_VAR(PYTHON3, [Path to Python3 interpreter (e.g.: /usr/bin/python3)])

    if test "${PYTHON3}" != "no" ; then
      if $PYTHON3 -c 'import sysconfig' 2> /dev/null
      then
        AC_MSG_CHECKING([for Python3 include path])
        PYTHON3_INC=`$PYTHON3 -c "import sysconfig; \
            print(sysconfig.get_path('include'))"`
        AC_SUBST(PYTHON3_INC)
        AC_MSG_RESULT([$PYTHON3_INC])

        # check if the Python.h header is available in the include directory
        AC_MSG_CHECKING([for $PYTHON3_INC/Python.h])
        if test -f "$PYTHON3_INC/Python.h"
        then
          AC_MSG_RESULT(yes)

          AC_MSG_CHECKING([for Python3 ldflags])
          case "$host" in
            # Handle OSX Python extensions differently
            # see: http://blog.tim-smith.us/2015/09/python-extension-modules-os-x/
            #
            *-darwin* | *-macos10*)
              PYTHON3_LDFLAGS="-bundle -undefined dynamic_lookup"
              ;;
            *)
              ;;
          esac
          AC_SUBST(PYTHON3_LDFLAGS)
          AC_MSG_RESULT([$PYTHON3_LDFLAGS])

          AC_MSG_CHECKING([for Python3 extension linker])
          PYTHON3_LD=`$PYTHON3 -c "import sysconfig; \
                  print(sysconfig.get_config_var('LDSHARED'))"`
          AC_SUBST(PYTHON3_LD)
          AC_MSG_RESULT([$PYTHON3_LD])

          AC_MSG_CHECKING([for directory to install Python3 scripts in])
          if test -z "$PYTHON3_DIR" ; then
            # the string concatenation below is just a trick to prevent substitution
            PYTHON3_DIR=`$PYTHON3 -c "import sysconfig; \
                  print(sysconfig.get_path('purelib', vars={'base':'$' '{prefix}'}))"`
          fi
          AC_SUBST(python3dir, $PYTHON3_DIR)
          AC_MSG_RESULT([$PYTHON3_DIR])
          AC_ARG_VAR(PYTHON3_DIR, [Directory to install python3 scripts in])

          AC_MSG_CHECKING([for directory to install architecture dependent python3 things in])
          if test -z "$PYTHON3_EXECDIR" ; then
            PYTHON3_EXECDIR=`$PYTHON3 -c "import sysconfig; \
                  print(sysconfig.get_path('platlib', vars={'platbase':'$' '{exec_prefix}'}))"`
          fi
          AC_SUBST(py3execdir, $PYTHON3_EXECDIR)
          AC_MSG_RESULT([$PYTHON3_EXECDIR])
          AC_ARG_VAR(PYTHON3_EXECDIR, [Directory to install architecture dependent python3 things in])

          AC_MSG_CHECKING([for Python3 module extension])
          dnl Usually ".so", but for example, Mac OS X uses ".dylib".
          PYTHON3_SO=`$PYTHON3 -c "import sysconfig; \
                  print(sysconfig.get_config_var('EXT_SUFFIX'))"`
          AC_SUBST(PYTHON3_SO)
          AC_MSG_RESULT([$PYTHON3_SO])

          AC_MSG_CHECKING([for Python3 tag for cached compiled scripts])
          PYTHON3_CACHE_TAG=`$PYTHON3 -c "import sys; \
                  print(sys.implementation.cache_tag)"`
          AC_SUBST(PYTHON3_CACHE_TAG)
          AC_MSG_RESULT([$PYTHON3_CACHE_TAG])

          AC_MSG_CHECKING([for Python3 extension of cached and optimized bytecode])
          PYTHON3_CACHE_OPT1_EXT=`$PYTHON3 -c "import importlib.util; import sys; \
                  print('%s.pyo'%sys.implementation.cache_tag) if sys.version_info.minor<5 \
                  else print('{1}{2}'.format(*importlib.util.cache_from_source('',optimization=1).rpartition(sys.implementation.cache_tag)))"`
          AC_SUBST(PYTHON3_CACHE_OPT1_EXT)
          AC_MSG_RESULT([$PYTHON3_CACHE_OPT1_EXT])

        else
          AC_MSG_RESULT(no)
          AC_MSG_WARN([
**********************************************************************
Python.h not found!
You probably need to install python-dev, python-devel, or something similar.
**********************************************************************
])
          python3_enabled_but_failed="Python.h missing"
        fi
      else
        AC_MSG_WARN([
**********************************************************************
Failed to import sysconfig!
**********************************************************************
])
          python3_enabled_but_failed="Can't import sysconfig"
      fi
    else
      python3_enabled_but_failed="python3 executable missing"
    fi
])
m4trace:m4/ax_require_defined.m4:35: -1- AC_DEFUN([AX_REQUIRE_DEFINED], [dnl
  m4_ifndef([$1], [m4_fatal([macro ]$1[ is not defined; is a m4 file missing?])])
])
m4trace:m4/libtool.m4:61: -1- AC_DEFUN([LT_INIT], [AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK
AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
AC_BEFORE([$0], [LT_LANG])dnl
AC_BEFORE([$0], [LT_OUTPUT])dnl
AC_BEFORE([$0], [LTDL_INIT])dnl
m4_require([_LT_CHECK_BUILDDIR])dnl

dnl Autoconf doesn't catch unexpanded LT_ macros by default:
m4_pattern_forbid([^_?LT_[A-Z_]+$])dnl
m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl
dnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4
dnl unless we require an AC_DEFUNed macro:
AC_REQUIRE([LTOPTIONS_VERSION])dnl
AC_REQUIRE([LTSUGAR_VERSION])dnl
AC_REQUIRE([LTVERSION_VERSION])dnl
AC_REQUIRE([LTOBSOLETE_VERSION])dnl
m4_require([_LT_PROG_LTMAIN])dnl

_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])

dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

# This can be used to rebuild libtool when needed
LIBTOOL_DEPS=$ltmain

# Always use our own libtool.
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
AC_SUBST(LIBTOOL)dnl

_LT_SETUP

# Only expand once:
m4_define([LT_INIT])
])
m4trace:m4/libtool.m4:99: -1- AU_DEFUN([AC_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:m4/libtool.m4:99: -1- AC_DEFUN([AC_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:m4/libtool.m4:100: -1- AU_DEFUN([AM_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:m4/libtool.m4:100: -1- AC_DEFUN([AM_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:m4/libtool.m4:619: -1- AC_DEFUN([LT_OUTPUT], [: ${CONFIG_LT=./config.lt}
AC_MSG_NOTICE([creating $CONFIG_LT])
_LT_GENERATED_FILE_INIT(["$CONFIG_LT"],
[# Run this file to recreate a libtool stub with the current configuration.])

cat >>"$CONFIG_LT" <<\_LTEOF
lt_cl_silent=false
exec AS_MESSAGE_LOG_FD>>config.log
{
  echo
  AS_BOX([Running $as_me.])
} >&AS_MESSAGE_LOG_FD

lt_cl_help="\
'$as_me' creates a local libtool stub from the current configuration,
for use in further configure time tests before the real libtool is
generated.

Usage: $[0] [[OPTIONS]]

  -h, --help      print this help, then exit
  -V, --version   print version number, then exit
  -q, --quiet     do not print progress messages
  -d, --debug     don't remove temporary files

Report bugs to <bug-libtool@gnu.org>."

lt_cl_version="\
m4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl
m4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])
configured by $[0], generated by m4_PACKAGE_STRING.

Copyright (C) 2011 Free Software Foundation, Inc.
This config.lt script is free software; the Free Software Foundation
gives unlimited permision to copy, distribute and modify it."

while test 0 != $[#]
do
  case $[1] in
    --version | --v* | -V )
      echo "$lt_cl_version"; exit 0 ;;
    --help | --h* | -h )
      echo "$lt_cl_help"; exit 0 ;;
    --debug | --d* | -d )
      debug=: ;;
    --quiet | --q* | --silent | --s* | -q )
      lt_cl_silent=: ;;

    -*) AC_MSG_ERROR([unrecognized option: $[1]
Try '$[0] --help' for more information.]) ;;

    *) AC_MSG_ERROR([unrecognized argument: $[1]
Try '$[0] --help' for more information.]) ;;
  esac
  shift
done

if $lt_cl_silent; then
  exec AS_MESSAGE_FD>/dev/null
fi
_LTEOF

cat >>"$CONFIG_LT" <<_LTEOF
_LT_OUTPUT_LIBTOOL_COMMANDS_INIT
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AC_MSG_NOTICE([creating $ofile])
_LT_OUTPUT_LIBTOOL_COMMANDS
AS_EXIT(0)
_LTEOF
chmod +x "$CONFIG_LT"

# configure is writing to config.log, but config.lt does its own redirection,
# appending to config.log, which fails on DOS, as config.log is still kept
# open by configure.  Here we exec the FD to /dev/null, effectively closing
# config.log, so it can be properly (re)opened and appended to by config.lt.
lt_cl_success=:
test yes = "$silent" &&
  lt_config_lt_args="$lt_config_lt_args --quiet"
exec AS_MESSAGE_LOG_FD>/dev/null
$SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
exec AS_MESSAGE_LOG_FD>>config.log
$lt_cl_success || AS_EXIT(1)
])
m4trace:m4/libtool.m4:811: -1- AC_DEFUN([LT_SUPPORTED_TAG], [])
m4trace:m4/libtool.m4:822: -1- AC_DEFUN([LT_LANG], [AC_BEFORE([$0], [LT_OUTPUT])dnl
m4_case([$1],
  [C],			[_LT_LANG(C)],
  [C++],		[_LT_LANG(CXX)],
  [Go],			[_LT_LANG(GO)],
  [Java],		[_LT_LANG(GCJ)],
  [Fortran 77],		[_LT_LANG(F77)],
  [Fortran],		[_LT_LANG(FC)],
  [Windows Resource],	[_LT_LANG(RC)],
  [m4_ifdef([_LT_LANG_]$1[_CONFIG],
    [_LT_LANG($1)],
    [m4_fatal([$0: unsupported language: "$1"])])])dnl
])
m4trace:m4/libtool.m4:914: -1- AU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])
m4trace:m4/libtool.m4:914: -1- AC_DEFUN([AC_LIBTOOL_CXX], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_CXX' is obsolete.
You should run autoupdate.])dnl
LT_LANG(C++)])
m4trace:m4/libtool.m4:915: -1- AU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])
m4trace:m4/libtool.m4:915: -1- AC_DEFUN([AC_LIBTOOL_F77], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_F77' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran 77)])
m4trace:m4/libtool.m4:916: -1- AU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])
m4trace:m4/libtool.m4:916: -1- AC_DEFUN([AC_LIBTOOL_FC], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_FC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran)])
m4trace:m4/libtool.m4:917: -1- AU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])
m4trace:m4/libtool.m4:917: -1- AC_DEFUN([AC_LIBTOOL_GCJ], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_GCJ' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Java)])
m4trace:m4/libtool.m4:918: -1- AU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])
m4trace:m4/libtool.m4:918: -1- AC_DEFUN([AC_LIBTOOL_RC], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_RC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Windows Resource)])
m4trace:m4/libtool.m4:1246: -1- AC_DEFUN([_LT_WITH_SYSROOT], [AC_MSG_CHECKING([for sysroot])
AC_ARG_WITH([sysroot],
[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],
  [Search for dependent libraries within DIR (or the compiler's sysroot
   if not specified).])],
[], [with_sysroot=no])

dnl lt_sysroot will always be passed unquoted.  We quote it here
dnl in case the user passed a directory name.
lt_sysroot=
case $with_sysroot in #(
 yes)
   if test yes = "$GCC"; then
     lt_sysroot=`$CC --print-sysroot 2>/dev/null`
   fi
   ;; #(
 /*)
   lt_sysroot=`echo "$with_sysroot" | sed -e "$sed_quote_subst"`
   ;; #(
 no|'')
   ;; #(
 *)
   AC_MSG_RESULT([$with_sysroot])
   AC_MSG_ERROR([The sysroot must be an absolute path.])
   ;;
esac

 AC_MSG_RESULT([${lt_sysroot:-no}])
_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl
[dependent libraries, and where our libraries should be installed.])])
m4trace:m4/libtool.m4:1577: -1- AC_DEFUN([_LT_COMPILER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="$3"  ## exclude from sc_useless_quotes_in_assignment
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&AS_MESSAGE_LOG_FD
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       $2=yes
     fi
   fi
   $RM conftest*
])

if test yes = "[$]$2"; then
    m4_if([$5], , :, [$5])
else
    m4_if([$6], , :, [$6])
fi
])
m4trace:m4/libtool.m4:1619: -1- AU_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:m4/libtool.m4:1619: -1- AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_COMPILER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:m4/libtool.m4:1628: -1- AC_DEFUN([_LT_LINKER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   save_LDFLAGS=$LDFLAGS
   LDFLAGS="$LDFLAGS $3"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&AS_MESSAGE_LOG_FD
       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         $2=yes
       fi
     else
       $2=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS=$save_LDFLAGS
])

if test yes = "[$]$2"; then
    m4_if([$4], , :, [$4])
else
    m4_if([$5], , :, [$5])
fi
])
m4trace:m4/libtool.m4:1663: -1- AU_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:m4/libtool.m4:1663: -1- AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_LINKER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:m4/libtool.m4:1670: -1- AC_DEFUN([LT_CMD_MAX_LEN], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
# find the maximum length of command line arguments
AC_MSG_CHECKING([the maximum length of command line arguments])
AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
  i=0
  teststring=ABCD

  case $build_os in
  msdosdjgpp*)
    # On DJGPP, this test can blow up pretty badly due to problems in libc
    # (any single argument exceeding 2000 bytes causes a buffer overrun
    # during glob expansion).  Even if it were fixed, the result of this
    # check would be larger than it should be.
    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
    ;;

  gnu*)
    # Under GNU Hurd, this test is not required because there is
    # no limit to the length of command line arguments.
    # Libtool will interpret -1 as no limit whatsoever
    lt_cv_sys_max_cmd_len=-1;
    ;;

  cygwin* | mingw* | cegcc*)
    # On Win9x/ME, this test blows up -- it succeeds, but takes
    # about 5 minutes as the teststring grows exponentially.
    # Worse, since 9x/ME are not pre-emptively multitasking,
    # you end up with a "frozen" computer, even though with patience
    # the test eventually succeeds (with a max line length of 256k).
    # Instead, let's just punt: use the minimum linelength reported by
    # all of the supported platforms: 8192 (on NT/2K/XP).
    lt_cv_sys_max_cmd_len=8192;
    ;;

  mint*)
    # On MiNT this can take a long time and run out of memory.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  amigaos*)
    # On AmigaOS with pdksh, this test takes hours, literally.
    # So we just punt and use a minimum line length of 8192.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)
    # This has been around since 386BSD, at least.  Likely further.
    if test -x /sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
    elif test -x /usr/sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
    else
      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
    fi
    # And add a safety zone
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    ;;

  interix*)
    # We know the value 262144 and hardcode it with a safety zone (like BSD)
    lt_cv_sys_max_cmd_len=196608
    ;;

  os2*)
    # The test takes a long time on OS/2.
    lt_cv_sys_max_cmd_len=8192
    ;;

  osf*)
    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
    # nice to cause kernel panics so lets avoid the loop below.
    # First set a reasonable default.
    lt_cv_sys_max_cmd_len=16384
    #
    if test -x /sbin/sysconfig; then
      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
        *1*) lt_cv_sys_max_cmd_len=-1 ;;
      esac
    fi
    ;;
  sco3.2v5*)
    lt_cv_sys_max_cmd_len=102400
    ;;
  sysv5* | sco5v6* | sysv4.2uw2*)
    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
    if test -n "$kargmax"; then
      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[	 ]]//'`
    else
      lt_cv_sys_max_cmd_len=32768
    fi
    ;;
  *)
    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
    if test -n "$lt_cv_sys_max_cmd_len" && \
       test undefined != "$lt_cv_sys_max_cmd_len"; then
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    else
      # Make teststring a little bigger before we do anything with it.
      # a 1K string should be a reasonable start.
      for i in 1 2 3 4 5 6 7 8; do
        teststring=$teststring$teststring
      done
      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
      # If test is not a shell built-in, we'll probably end up computing a
      # maximum length that is only half of the actual maximum length, but
      # we can't tell.
      while { test X`env echo "$teststring$teststring" 2>/dev/null` \
	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
	      test 17 != "$i" # 1/2 MB should be enough
      do
        i=`expr $i + 1`
        teststring=$teststring$teststring
      done
      # Only check the string length outside the loop.
      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
      teststring=
      # Add a significant safety factor because C++ compilers can tack on
      # massive amounts of additional arguments before passing them to the
      # linker.  It appears as though 1/2 is a usable value.
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
    fi
    ;;
  esac
])
if test -n "$lt_cv_sys_max_cmd_len"; then
  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
else
  AC_MSG_RESULT(none)
fi
max_cmd_len=$lt_cv_sys_max_cmd_len
_LT_DECL([], [max_cmd_len], [0],
    [What is the maximum length of a command?])
])
m4trace:m4/libtool.m4:1809: -1- AU_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:m4/libtool.m4:1809: -1- AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_SYS_MAX_CMD_LEN' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:m4/libtool.m4:1920: -1- AC_DEFUN([LT_SYS_DLOPEN_SELF], [m4_require([_LT_HEADER_DLFCN])dnl
if test yes != "$enable_dlopen"; then
  enable_dlopen=unknown
  enable_dlopen_self=unknown
  enable_dlopen_self_static=unknown
else
  lt_cv_dlopen=no
  lt_cv_dlopen_libs=

  case $host_os in
  beos*)
    lt_cv_dlopen=load_add_on
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen=LoadLibrary
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    ;;

  darwin*)
    # if libdl is installed we need to link against it
    AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[
    lt_cv_dlopen=dyld
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ])
    ;;

  tpf*)
    # Don't try to run any link tests for TPF.  We know it's impossible
    # because TPF is a cross-compiler, and we know how we open DSOs.
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=no
    ;;

  *)
    AC_CHECK_FUNC([shl_load],
	  [lt_cv_dlopen=shl_load],
      [AC_CHECK_LIB([dld], [shl_load],
	    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],
	[AC_CHECK_FUNC([dlopen],
	      [lt_cv_dlopen=dlopen],
	  [AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],
	    [AC_CHECK_LIB([svld], [dlopen],
		  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],
	      [AC_CHECK_LIB([dld], [dld_link],
		    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])
	      ])
	    ])
	  ])
	])
      ])
    ;;
  esac

  if test no = "$lt_cv_dlopen"; then
    enable_dlopen=no
  else
    enable_dlopen=yes
  fi

  case $lt_cv_dlopen in
  dlopen)
    save_CPPFLAGS=$CPPFLAGS
    test yes = "$ac_cv_header_dlfcn_h" && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"

    save_LDFLAGS=$LDFLAGS
    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"

    save_LIBS=$LIBS
    LIBS="$lt_cv_dlopen_libs $LIBS"

    AC_CACHE_CHECK([whether a program can dlopen itself],
	  lt_cv_dlopen_self, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
    ])

    if test yes = "$lt_cv_dlopen_self"; then
      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
	  lt_cv_dlopen_self_static, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
      ])
    fi

    CPPFLAGS=$save_CPPFLAGS
    LDFLAGS=$save_LDFLAGS
    LIBS=$save_LIBS
    ;;
  esac

  case $lt_cv_dlopen_self in
  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
  *) enable_dlopen_self=unknown ;;
  esac

  case $lt_cv_dlopen_self_static in
  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
  *) enable_dlopen_self_static=unknown ;;
  esac
fi
_LT_DECL([dlopen_support], [enable_dlopen], [0],
	 [Whether dlopen is supported])
_LT_DECL([dlopen_self], [enable_dlopen_self], [0],
	 [Whether dlopen of programs is supported])
_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],
	 [Whether dlopen of statically linked programs is supported])
])
m4trace:m4/libtool.m4:2045: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:m4/libtool.m4:2045: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN_SELF' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:m4/libtool.m4:3166: -1- AC_DEFUN([_LT_PATH_TOOL_PREFIX], [m4_require([_LT_DECL_EGREP])dnl
AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
[case $MAGIC_CMD in
[[\\/*] |  ?:[\\/]*])
  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD=$MAGIC_CMD
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
dnl $ac_dummy forces splitting on constant user-supplied paths.
dnl POSIX.2 word splitting is done only on the output of word expansions,
dnl not every word.  This closes a longstanding sh security hole.
  ac_dummy="m4_if([$2], , $PATH, [$2])"
  for ac_dir in $ac_dummy; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$1"; then
      lt_cv_path_MAGIC_CMD=$ac_dir/"$1"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS=$lt_save_ifs
  MAGIC_CMD=$lt_save_MAGIC_CMD
  ;;
esac])
MAGIC_CMD=$lt_cv_path_MAGIC_CMD
if test -n "$MAGIC_CMD"; then
  AC_MSG_RESULT($MAGIC_CMD)
else
  AC_MSG_RESULT(no)
fi
_LT_DECL([], [MAGIC_CMD], [0],
	 [Used to examine libraries when file_magic_cmd begins with "file"])dnl
])
m4trace:m4/libtool.m4:3228: -1- AU_DEFUN([AC_PATH_TOOL_PREFIX], [m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:m4/libtool.m4:3228: -1- AC_DEFUN([AC_PATH_TOOL_PREFIX], [AC_DIAGNOSE([obsolete], [The macro `AC_PATH_TOOL_PREFIX' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:m4/libtool.m4:3251: -1- AC_DEFUN([LT_PATH_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_REQUIRE([AC_CANONICAL_BUILD])dnl
m4_require([_LT_DECL_SED])dnl
m4_require([_LT_DECL_EGREP])dnl
m4_require([_LT_PROG_ECHO_BACKSLASH])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
    [test no = "$withval" || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

ac_prog=ld
if test yes = "$GCC"; then
  # Check if gcc -print-prog-name=ld gives a path.
  AC_MSG_CHECKING([for ld used by $CC])
  case $host in
  *-*-mingw*)
    # gcc leaves a trailing carriage return, which upsets mingw
    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
  *)
    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
  esac
  case $ac_prog in
    # Accept absolute paths.
    [[\\/]]* | ?:[[\\/]]*)
      re_direlt='/[[^/]][[^/]]*/\.\./'
      # Canonicalize the pathname of ld
      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
      done
      test -z "$LD" && LD=$ac_prog
      ;;
  "")
    # If it fails, then pretend we aren't using GCC.
    ac_prog=ld
    ;;
  *)
    # If it is relative, then search for the first ld in PATH.
    with_gnu_ld=unknown
    ;;
  esac
elif test yes = "$with_gnu_ld"; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
AC_CACHE_VAL(lt_cv_path_LD,
[if test -z "$LD"; then
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
  for ac_dir in $PATH; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
      lt_cv_path_LD=$ac_dir/$ac_prog
      # Check to see if the program is GNU ld.  I'd rather use --version,
      # but apparently some variants of GNU ld only accept -v.
      # Break only if it was the GNU/non-GNU ld that we prefer.
      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
      *GNU* | *'with BFD'*)
	test no != "$with_gnu_ld" && break
	;;
      *)
	test yes != "$with_gnu_ld" && break
	;;
      esac
    fi
  done
  IFS=$lt_save_ifs
else
  lt_cv_path_LD=$LD # Let the user override the test with a path.
fi])
LD=$lt_cv_path_LD
if test -n "$LD"; then
  AC_MSG_RESULT($LD)
else
  AC_MSG_RESULT(no)
fi
test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
_LT_PATH_LD_GNU
AC_SUBST([LD])

_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
])
m4trace:m4/libtool.m4:3340: -1- AU_DEFUN([AM_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:m4/libtool.m4:3340: -1- AC_DEFUN([AM_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:m4/libtool.m4:3341: -1- AU_DEFUN([AC_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:m4/libtool.m4:3341: -1- AC_DEFUN([AC_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:m4/libtool.m4:3670: -1- AC_DEFUN([LT_PATH_NM], [AC_REQUIRE([AC_PROG_CC])dnl
AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
[if test -n "$NM"; then
  # Let the user override the test.
  lt_cv_path_NM=$NM
else
  lt_nm_to_check=${ac_tool_prefix}nm
  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
    lt_nm_to_check="$lt_nm_to_check nm"
  fi
  for lt_tmp_nm in $lt_nm_to_check; do
    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
      IFS=$lt_save_ifs
      test -z "$ac_dir" && ac_dir=.
      tmp_nm=$ac_dir/$lt_tmp_nm
      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext"; then
	# Check to see if the nm accepts a BSD-compat flag.
	# Adding the 'sed 1q' prevents false positives on HP-UX, which says:
	#   nm: unknown option "B" ignored
	# Tru64's nm complains that /dev/null is an invalid object file
	# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty
	case $build_os in
	mingw*) lt_bad_file=conftest.nm/nofile ;;
	*) lt_bad_file=/dev/null ;;
	esac
	case `"$tmp_nm" -B $lt_bad_file 2>&1 | sed '1q'` in
	*$lt_bad_file* | *'Invalid file or object type'*)
	  lt_cv_path_NM="$tmp_nm -B"
	  break 2
	  ;;
	*)
	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
	  */dev/null*)
	    lt_cv_path_NM="$tmp_nm -p"
	    break 2
	    ;;
	  *)
	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
	    continue # so that we can try to find one that supports BSD flags
	    ;;
	  esac
	  ;;
	esac
      fi
    done
    IFS=$lt_save_ifs
  done
  : ${lt_cv_path_NM=no}
fi])
if test no != "$lt_cv_path_NM"; then
  NM=$lt_cv_path_NM
else
  # Didn't find any BSD compatible name lister, look for dumpbin.
  if test -n "$DUMPBIN"; then :
    # Let the user override the test.
  else
    AC_CHECK_TOOLS(DUMPBIN, [dumpbin "link -dump"], :)
    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in
    *COFF*)
      DUMPBIN="$DUMPBIN -symbols -headers"
      ;;
    *)
      DUMPBIN=:
      ;;
    esac
  fi
  AC_SUBST([DUMPBIN])
  if test : != "$DUMPBIN"; then
    NM=$DUMPBIN
  fi
fi
test -z "$NM" && NM=nm
AC_SUBST([NM])
_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl

AC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],
  [lt_cv_nm_interface="BSD nm"
  echo "int some_variable = 0;" > conftest.$ac_ext
  (eval echo "\"\$as_me:$LINENO: $ac_compile\"" >&AS_MESSAGE_LOG_FD)
  (eval "$ac_compile" 2>conftest.err)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: $NM \\\"conftest.$ac_objext\\\"\"" >&AS_MESSAGE_LOG_FD)
  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: output\"" >&AS_MESSAGE_LOG_FD)
  cat conftest.out >&AS_MESSAGE_LOG_FD
  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
    lt_cv_nm_interface="MS dumpbin"
  fi
  rm -f conftest*])
])
m4trace:m4/libtool.m4:3765: -1- AU_DEFUN([AM_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:m4/libtool.m4:3765: -1- AC_DEFUN([AM_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:m4/libtool.m4:3766: -1- AU_DEFUN([AC_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:m4/libtool.m4:3766: -1- AC_DEFUN([AC_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:m4/libtool.m4:3837: -1- AC_DEFUN([_LT_DLL_DEF_P], [dnl
  test DEF = "`$SED -n dnl
    -e '\''s/^[[	 ]]*//'\'' dnl Strip leading whitespace
    -e '\''/^\(;.*\)*$/d'\'' dnl      Delete empty lines and comments
    -e '\''s/^\(EXPORTS\|LIBRARY\)\([[	 ]].*\)*$/DEF/p'\'' dnl
    -e q dnl                          Only consider the first "real" line
    $1`" dnl
])
m4trace:m4/libtool.m4:3851: -1- AC_DEFUN([LT_LIB_M], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
LIBM=
case $host in
*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)
  # These system don't have libm, or don't need it
  ;;
*-ncr-sysv4.3*)
  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)
  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
  ;;
*)
  AC_CHECK_LIB(m, cos, LIBM=-lm)
  ;;
esac
AC_SUBST([LIBM])
])
m4trace:m4/libtool.m4:3870: -1- AU_DEFUN([AC_CHECK_LIBM], [m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:m4/libtool.m4:3870: -1- AC_DEFUN([AC_CHECK_LIBM], [AC_DIAGNOSE([obsolete], [The macro `AC_CHECK_LIBM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:m4/libtool.m4:8147: -1- AC_DEFUN([LT_PROG_GCJ], [m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
    [AC_CHECK_TOOL(GCJ, gcj,)
      test set = "${GCJFLAGS+set}" || GCJFLAGS="-g -O2"
      AC_SUBST(GCJFLAGS)])])[]dnl
])
m4trace:m4/libtool.m4:8156: -1- AU_DEFUN([LT_AC_PROG_GCJ], [m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:m4/libtool.m4:8156: -1- AC_DEFUN([LT_AC_PROG_GCJ], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_GCJ' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:m4/libtool.m4:8163: -1- AC_DEFUN([LT_PROG_GO], [AC_CHECK_TOOL(GOC, gccgo,)
])
m4trace:m4/libtool.m4:8170: -1- AC_DEFUN([LT_PROG_RC], [AC_CHECK_TOOL(RC, windres,)
])
m4trace:m4/libtool.m4:8175: -1- AU_DEFUN([LT_AC_PROG_RC], [m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:m4/libtool.m4:8175: -1- AC_DEFUN([LT_AC_PROG_RC], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_RC' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:m4/libtool.m4:8295: -1- AU_DEFUN([LT_AC_PROG_SED], [m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:m4/libtool.m4:8295: -1- AC_DEFUN([LT_AC_PROG_SED], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_SED' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:m4/ltoptions.m4:14: -1- AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
m4trace:m4/ltoptions.m4:113: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN], [_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:113: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:148: -1- AU_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'win32-dll' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:148: -1- AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
You should run autoupdate.])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'win32-dll' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:197: -1- AC_DEFUN([AC_ENABLE_SHARED], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
])
m4trace:m4/ltoptions.m4:201: -1- AC_DEFUN([AC_DISABLE_SHARED], [_LT_SET_OPTION([LT_INIT], [disable-shared])
])
m4trace:m4/ltoptions.m4:205: -1- AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])
m4trace:m4/ltoptions.m4:205: -1- AC_DEFUN([AM_ENABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_SHARED($@)])
m4trace:m4/ltoptions.m4:206: -1- AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
m4trace:m4/ltoptions.m4:206: -1- AC_DEFUN([AM_DISABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_SHARED($@)])
m4trace:m4/ltoptions.m4:251: -1- AC_DEFUN([AC_ENABLE_STATIC], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
])
m4trace:m4/ltoptions.m4:255: -1- AC_DEFUN([AC_DISABLE_STATIC], [_LT_SET_OPTION([LT_INIT], [disable-static])
])
m4trace:m4/ltoptions.m4:259: -1- AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])
m4trace:m4/ltoptions.m4:259: -1- AC_DEFUN([AM_ENABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_STATIC($@)])
m4trace:m4/ltoptions.m4:260: -1- AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
m4trace:m4/ltoptions.m4:260: -1- AC_DEFUN([AM_DISABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_STATIC($@)])
m4trace:m4/ltoptions.m4:305: -1- AU_DEFUN([AC_ENABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'fast-install' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:305: -1- AC_DEFUN([AC_ENABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_ENABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'fast-install' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:312: -1- AU_DEFUN([AC_DISABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:312: -1- AC_DEFUN([AC_DISABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_DISABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:411: -1- AU_DEFUN([AC_LIBTOOL_PICMODE], [_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'pic-only' option into LT_INIT's first parameter.])
])
m4trace:m4/ltoptions.m4:411: -1- AC_DEFUN([AC_LIBTOOL_PICMODE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_PICMODE' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'pic-only' option into LT_INIT's first parameter.])
])
m4trace:m4/ltsugar.m4:14: -1- AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])
m4trace:m4/ltversion.m4:18: -1- AC_DEFUN([LTVERSION_VERSION], [macro_version='2.4.6'
macro_revision='2.4.6'
_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
_LT_DECL(, macro_revision, 0)
])
m4trace:m4/lt~obsolete.m4:37: -1- AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])
m4trace:m4/lt~obsolete.m4:41: -1- AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])
m4trace:m4/lt~obsolete.m4:42: -1- AC_DEFUN([_LT_AC_SHELL_INIT])
m4trace:m4/lt~obsolete.m4:43: -1- AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])
m4trace:m4/lt~obsolete.m4:45: -1- AC_DEFUN([_LT_AC_TAGVAR])
m4trace:m4/lt~obsolete.m4:46: -1- AC_DEFUN([AC_LTDL_ENABLE_INSTALL])
m4trace:m4/lt~obsolete.m4:47: -1- AC_DEFUN([AC_LTDL_PREOPEN])
m4trace:m4/lt~obsolete.m4:48: -1- AC_DEFUN([_LT_AC_SYS_COMPILER])
m4trace:m4/lt~obsolete.m4:49: -1- AC_DEFUN([_LT_AC_LOCK])
m4trace:m4/lt~obsolete.m4:50: -1- AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])
m4trace:m4/lt~obsolete.m4:51: -1- AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])
m4trace:m4/lt~obsolete.m4:52: -1- AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])
m4trace:m4/lt~obsolete.m4:53: -1- AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])
m4trace:m4/lt~obsolete.m4:54: -1- AC_DEFUN([AC_LIBTOOL_OBJDIR])
m4trace:m4/lt~obsolete.m4:55: -1- AC_DEFUN([AC_LTDL_OBJDIR])
m4trace:m4/lt~obsolete.m4:56: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])
m4trace:m4/lt~obsolete.m4:57: -1- AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])
m4trace:m4/lt~obsolete.m4:58: -1- AC_DEFUN([AC_PATH_MAGIC])
m4trace:m4/lt~obsolete.m4:59: -1- AC_DEFUN([AC_PROG_LD_GNU])
m4trace:m4/lt~obsolete.m4:60: -1- AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])
m4trace:m4/lt~obsolete.m4:61: -1- AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])
m4trace:m4/lt~obsolete.m4:62: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])
m4trace:m4/lt~obsolete.m4:63: -1- AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])
m4trace:m4/lt~obsolete.m4:64: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])
m4trace:m4/lt~obsolete.m4:65: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])
m4trace:m4/lt~obsolete.m4:66: -1- AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])
m4trace:m4/lt~obsolete.m4:67: -1- AC_DEFUN([LT_AC_PROG_EGREP])
m4trace:m4/lt~obsolete.m4:72: -1- AC_DEFUN([_AC_PROG_LIBTOOL])
m4trace:m4/lt~obsolete.m4:73: -1- AC_DEFUN([AC_LIBTOOL_SETUP])
m4trace:m4/lt~obsolete.m4:74: -1- AC_DEFUN([_LT_AC_CHECK_DLFCN])
m4trace:m4/lt~obsolete.m4:75: -1- AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])
m4trace:m4/lt~obsolete.m4:76: -1- AC_DEFUN([_LT_AC_TAGCONFIG])
m4trace:m4/lt~obsolete.m4:78: -1- AC_DEFUN([_LT_AC_LANG_CXX])
m4trace:m4/lt~obsolete.m4:79: -1- AC_DEFUN([_LT_AC_LANG_F77])
m4trace:m4/lt~obsolete.m4:80: -1- AC_DEFUN([_LT_AC_LANG_GCJ])
m4trace:m4/lt~obsolete.m4:81: -1- AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])
m4trace:m4/lt~obsolete.m4:82: -1- AC_DEFUN([_LT_AC_LANG_C_CONFIG])
m4trace:m4/lt~obsolete.m4:83: -1- AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])
m4trace:m4/lt~obsolete.m4:84: -1- AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])
m4trace:m4/lt~obsolete.m4:85: -1- AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])
m4trace:m4/lt~obsolete.m4:86: -1- AC_DEFUN([_LT_AC_LANG_F77_CONFIG])
m4trace:m4/lt~obsolete.m4:87: -1- AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])
m4trace:m4/lt~obsolete.m4:88: -1- AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])
m4trace:m4/lt~obsolete.m4:89: -1- AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])
m4trace:m4/lt~obsolete.m4:90: -1- AC_DEFUN([_LT_AC_LANG_RC_CONFIG])
m4trace:m4/lt~obsolete.m4:91: -1- AC_DEFUN([AC_LIBTOOL_CONFIG])
m4trace:m4/lt~obsolete.m4:92: -1- AC_DEFUN([_LT_AC_FILE_LTDLL_C])
m4trace:m4/lt~obsolete.m4:94: -1- AC_DEFUN([_LT_AC_PROG_CXXCPP])
m4trace:m4/lt~obsolete.m4:97: -1- AC_DEFUN([_LT_PROG_F77])
m4trace:m4/lt~obsolete.m4:98: -1- AC_DEFUN([_LT_PROG_FC])
m4trace:m4/lt~obsolete.m4:99: -1- AC_DEFUN([_LT_PROG_CXX])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:7: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:7: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:7: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:13: -1- AC_CONFIG_MACRO_DIR([m4])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_res])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_res])
m4trace:configure.ac:15: -1- _COLORIZE_RESULT_PREPARE
m4trace:configure.ac:15: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$CC])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$CC])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_ct_CC])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_ct_CC])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$CC])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$CC])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$CC])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$CC])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$CC])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$CC])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_ct_CC])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_ct_CC])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:15: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_file])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_file])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_exeext])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_exeext])
m4trace:configure.ac:15: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$cross_compiling])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$cross_compiling])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_objext])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_objext])
m4trace:configure.ac:15: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_prog_cc_g])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_prog_cc_g])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([none needed])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([none needed])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([unsupported])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([unsupported])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_prog_cc_c89])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_prog_cc_c89])
m4trace:configure.ac:15: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:15: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:15: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$am_cv_prog_cc_c_o])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$am_cv_prog_cc_c_o])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_header_compiler])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_header_compiler])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$CPP])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$CPP])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_header_preproc])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_header_preproc])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_res])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_res])
m4trace:configure.ac:15: -1- AC_PROG_EGREP
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_path_GREP])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_path_GREP])
m4trace:configure.ac:15: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_path_EGREP])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_path_EGREP])
m4trace:configure.ac:15: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_header_stdc])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_header_stdc])
m4trace:configure.ac:15: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_res])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_res])
m4trace:configure.ac:15: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:15: -1- AC_MSG_RESULT([$ac_cv_safe_to_define___extensions__])
m4trace:configure.ac:15: -1- COLORIZE_RESULT([$ac_cv_safe_to_define___extensions__])
m4trace:configure.ac:15: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:20: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:20: -1- AC_MSG_RESULT([$am_cv_make_support_nested_variables])
m4trace:configure.ac:20: -1- COLORIZE_RESULT([$am_cv_make_support_nested_variables])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:20: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:20: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:22: -1- AM_INIT_AUTOMAKE([-Wall -Wno-override foreign 1.11 tar-ustar])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:22: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:22: -1- AM_AUTOMAKE_VERSION([1.16.1])
m4trace:configure.ac:22: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([$INSTALL])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([$INSTALL])
m4trace:configure.ac:22: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:22: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:22: -1- _AM_SET_OPTIONS([-Wall -Wno-override foreign 1.11 tar-ustar])
m4trace:configure.ac:22: -1- _AM_SET_OPTION([-Wall])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([-Wall])
m4trace:configure.ac:22: -1- _AM_SET_OPTION([-Wno-override])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([-Wno-override])
m4trace:configure.ac:22: -1- _AM_SET_OPTION([foreign])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([foreign])
m4trace:configure.ac:22: -1- _AM_SET_OPTION([1.11])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([1.11])
m4trace:configure.ac:22: -1- _AM_SET_OPTION([tar-ustar])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:22: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:22: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:22: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:22: -1- AM_SANITY_CHECK
m4trace:configure.ac:22: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:22: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:22: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:22: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:22: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:22: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:22: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:22: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:22: -1- AC_MSG_RESULT([$STRIP])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([$STRIP])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:22: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([$ac_ct_STRIP])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([$ac_ct_STRIP])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:22: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([$MKDIR_P])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([$MKDIR_P])
m4trace:configure.ac:22: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([$AWK])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([$AWK])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:22: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:22: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:22: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:22: -1- _AM_PROG_TAR([ustar])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:22: -1- AM_RUN_LOG([$_am_tar --version])
m4trace:configure.ac:22: -1- AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
m4trace:configure.ac:22: -1- AM_RUN_LOG([$am__untar <conftest.tar])
m4trace:configure.ac:22: -1- AM_RUN_LOG([cat conftest.dir/file])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([$am_cv_prog_tar_ustar])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([$am_cv_prog_tar_ustar])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:22: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:22: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:22: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:22: -1- AM_SET_DEPDIR
m4trace:configure.ac:22: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:22: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:22: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:22: -1- AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([${_am_result}])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([${_am_result}])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:22: -1- AM_DEP_TRACK
m4trace:configure.ac:22: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:22: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:22: -1- AC_MSG_RESULT([$am_cv_CC_dependencies_compiler_type])
m4trace:configure.ac:22: -1- COLORIZE_RESULT([$am_cv_CC_dependencies_compiler_type])
m4trace:configure.ac:22: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:22: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:22: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:28: -1- AM_WITH_DMALLOC
m4trace:configure.ac:28: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:28: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:28: -1- m4_pattern_allow([^WITH_DMALLOC$])
m4trace:configure.ac:28: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:28: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:28: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:28: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:31: -1- m4_pattern_allow([^ISODATE$])
m4trace:configure.ac:33: -1- AC_MSG_RESULT([$ac_cv_build])
m4trace:configure.ac:33: -1- COLORIZE_RESULT([$ac_cv_build])
m4trace:configure.ac:33: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:33: -1- AC_MSG_RESULT([$ac_cv_host])
m4trace:configure.ac:33: -1- COLORIZE_RESULT([$ac_cv_host])
m4trace:configure.ac:33: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:36: -1- AC_MSG_RESULT([$CXX])
m4trace:configure.ac:36: -1- COLORIZE_RESULT([$CXX])
m4trace:configure.ac:36: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:36: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:36: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:36: -1- AC_MSG_RESULT([$ac_ct_CXX])
m4trace:configure.ac:36: -1- COLORIZE_RESULT([$ac_ct_CXX])
m4trace:configure.ac:36: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:36: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:36: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:36: -1- AC_MSG_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:36: -1- COLORIZE_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:36: -1- AC_MSG_RESULT([$ac_cv_prog_cxx_g])
m4trace:configure.ac:36: -1- COLORIZE_RESULT([$ac_cv_prog_cxx_g])
m4trace:configure.ac:36: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:36: -1- AC_MSG_RESULT([$am_cv_CXX_dependencies_compiler_type])
m4trace:configure.ac:36: -1- COLORIZE_RESULT([$am_cv_CXX_dependencies_compiler_type])
m4trace:configure.ac:36: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:36: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:36: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:36: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:36: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:36: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:37: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:37: -1- AC_MSG_RESULT([$CXXCPP])
m4trace:configure.ac:37: -1- COLORIZE_RESULT([$CXXCPP])
m4trace:configure.ac:37: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$CC])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$CC])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$ac_ct_CC])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$ac_ct_CC])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$CC])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$CC])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$CC])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$CC])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$CC])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$CC])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$ac_ct_CC])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$ac_ct_CC])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:38: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$ac_cv_prog_cc_g])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$ac_cv_prog_cc_g])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([none needed])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([none needed])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([unsupported])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([unsupported])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$ac_cv_prog_cc_c89])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$ac_cv_prog_cc_c89])
m4trace:configure.ac:38: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:38: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:38: -1- AC_MSG_RESULT([$am_cv_prog_cc_c_o])
m4trace:configure.ac:38: -1- COLORIZE_RESULT([$am_cv_prog_cc_c_o])
m4trace:configure.ac:39: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:39: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:39: -1- AC_MSG_RESULT([$CPP])
m4trace:configure.ac:39: -1- COLORIZE_RESULT([$CPP])
m4trace:configure.ac:39: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:42: -1- m4_pattern_allow([^UNUSED$])
m4trace:configure.ac:44: -1- m4_pattern_allow([^UNUSED$])
m4trace:configure.ac:48: -1- AM_PROG_AR
m4trace:configure.ac:48: -1- AC_MSG_RESULT([$AR])
m4trace:configure.ac:48: -1- COLORIZE_RESULT([$AR])
m4trace:configure.ac:48: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:48: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:48: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:48: -1- AC_MSG_RESULT([$ac_ct_AR])
m4trace:configure.ac:48: -1- COLORIZE_RESULT([$ac_ct_AR])
m4trace:configure.ac:48: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:48: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:48: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:48: -1- AC_MSG_RESULT([$am_cv_ar_interface])
m4trace:configure.ac:48: -1- COLORIZE_RESULT([$am_cv_ar_interface])
m4trace:configure.ac:48: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:49: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:49: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:49: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:49: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:49: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:50: -1- AC_MSG_RESULT([$ac_cv_path_GREP])
m4trace:configure.ac:50: -1- COLORIZE_RESULT([$ac_cv_path_GREP])
m4trace:configure.ac:50: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:52: -1- AM_PROG_CC_C_O
m4trace:configure.ac:53: -1- AC_MSG_RESULT([$ac_cv_path_SED])
m4trace:configure.ac:53: -1- COLORIZE_RESULT([$ac_cv_path_SED])
m4trace:configure.ac:53: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:54: -1- AC_MSG_RESULT([$AWK])
m4trace:configure.ac:54: -1- COLORIZE_RESULT([$AWK])
m4trace:configure.ac:54: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:54: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:54: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:55: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:55: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:55: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:55: -1- AC_MSG_RESULT([no, using $LN_S])
m4trace:configure.ac:55: -1- COLORIZE_RESULT([no, using $LN_S])
m4trace:configure.ac:57: -1- LT_INIT([pic-only, static])
m4trace:configure.ac:57: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
m4trace:configure.ac:57: -1- LTOPTIONS_VERSION
m4trace:configure.ac:57: -1- LTSUGAR_VERSION
m4trace:configure.ac:57: -1- LTVERSION_VERSION
m4trace:configure.ac:57: -1- LTOBSOLETE_VERSION
m4trace:configure.ac:57: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$with_aix_soname])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$with_aix_soname])
m4trace:configure.ac:57: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:57: -1- _LT_PREPARE_SED_QUOTE_VARS
m4trace:configure.ac:57: -1- _LT_PROG_ECHO_BACKSLASH
m4trace:configure.ac:57: -1- AC_MSG_RESULT([printf])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([printf])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([print -r])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([print -r])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([cat])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([cat])
m4trace:configure.ac:57: -1- LT_PATH_LD
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_cv_path_SED])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_cv_path_SED])
m4trace:configure.ac:57: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_cv_path_FGREP])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_cv_path_FGREP])
m4trace:configure.ac:57: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$LD])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$LD])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_prog_gnu_ld])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_prog_gnu_ld])
m4trace:configure.ac:57: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:57: -1- LT_PATH_NM
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_path_NM])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_path_NM])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$DUMPBIN])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$DUMPBIN])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_DUMPBIN])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_DUMPBIN])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_nm_interface])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_nm_interface])
m4trace:configure.ac:57: -1- LT_CMD_MAX_LEN
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_sys_max_cmd_len])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_sys_max_cmd_len])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([none])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([none])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_to_host_file_cmd])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_to_host_file_cmd])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_to_tool_file_cmd])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_to_tool_file_cmd])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_ld_reload_flag])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_ld_reload_flag])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$OBJDUMP])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$OBJDUMP])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_OBJDUMP])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_OBJDUMP])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_deplibs_check_method])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_deplibs_check_method])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$DLLTOOL])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$DLLTOOL])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_DLLTOOL])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_DLLTOOL])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_sharedlib_from_linklib_cmd])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_sharedlib_from_linklib_cmd])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$AR])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$AR])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_AR])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_AR])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_ar_at_file])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_ar_at_file])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$STRIP])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$STRIP])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_STRIP])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_STRIP])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$RANLIB])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$RANLIB])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_RANLIB])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_RANLIB])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([failed])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([failed])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([ok])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([ok])
m4trace:configure.ac:57: -1- _LT_WITH_SYSROOT
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$with_sysroot])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$with_sysroot])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([${lt_sysroot:-no}])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([${lt_sysroot:-no}])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_cv_path_lt_DD])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_cv_path_lt_DD])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_truncate_bin])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_truncate_bin])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_objdir])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_objdir])
m4trace:configure.ac:57: -1- m4_pattern_allow([LT_OBJDIR])
m4trace:configure.ac:57: -1- m4_pattern_allow([^LT_OBJDIR$])
m4trace:configure.ac:57: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:57: -1- _LT_PATH_TOOL_PREFIX([${ac_tool_prefix}file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$MAGIC_CMD])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$MAGIC_CMD])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- _LT_PATH_TOOL_PREFIX([file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$MAGIC_CMD])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$MAGIC_CMD])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- LT_SUPPORTED_TAG([CC])
m4trace:configure.ac:57: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:57: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:57: -1- _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions], [lt_cv_prog_compiler_rtti_exceptions], [-fno-rtti -fno-exceptions], [], [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, )="$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, ) -fno-rtti -fno-exceptions"])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_prog_compiler_rtti_exceptions])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_prog_compiler_rtti_exceptions])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic, )])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic, )])
m4trace:configure.ac:57: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, ) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )], [$_LT_TAGVAR(lt_prog_compiler_pic, )@&t@m4_if([],[],[ -DPIC],[m4_if([],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, ) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, )=" $_LT_TAGVAR(lt_prog_compiler_pic, )" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, )=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, )=no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )])
m4trace:configure.ac:57: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, )=])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_prog_compiler_static_works])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_prog_compiler_static_works])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, )])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, )])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_cc_needs_belf])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_cc_needs_belf])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, )])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, )])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$hard_links])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$hard_links])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$MANIFEST_TOOL])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$MANIFEST_TOOL])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^MANIFEST_TOOL$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_MANIFEST_TOOL])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_MANIFEST_TOOL])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_path_mainfest_tool])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_path_mainfest_tool])
m4trace:configure.ac:57: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:57: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:57: -1- _LT_REQUIRED_DARWIN_CHECKS
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$DSYMUTIL])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$DSYMUTIL])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^DSYMUTIL$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_DSYMUTIL])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_DSYMUTIL])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$NMEDIT])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$NMEDIT])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^NMEDIT$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_NMEDIT])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_NMEDIT])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$LIPO])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$LIPO])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^LIPO$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_LIPO])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_LIPO])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$OTOOL])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$OTOOL])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_OTOOL])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_OTOOL])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$OTOOL64])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$OTOOL64])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- m4_pattern_allow([^OTOOL64$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_ct_OTOOL64])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_ct_OTOOL64])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_apple_cc_single_mod])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_apple_cc_single_mod])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_ld_exported_symbols_list])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_ld_exported_symbols_list])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_ld_force_load])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_ld_force_load])
m4trace:configure.ac:57: -1- _LT_LINKER_OPTION([if $CC understands -b], [lt_cv_prog_compiler__b], [-b], [_LT_TAGVAR(archive_cmds, )='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'], [_LT_TAGVAR(archive_cmds, )='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_prog_compiler__b])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_prog_compiler__b])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_irix_exported_symbol])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_irix_exported_symbol])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, )])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(ld_shlibs, )])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_archive_cmds_need_lc])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_archive_cmds_need_lc])
m4trace:configure.ac:57: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$dynamic_linker])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$dynamic_linker])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, )])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(hardcode_action, )])
m4trace:configure.ac:57: -1- LT_SYS_DLOPEN_SELF
m4trace:configure.ac:57: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_res])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_res])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_dlopen_self])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_dlopen_self])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_dlopen_self_static])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_dlopen_self_static])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$can_build_shared])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$can_build_shared])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$enable_shared])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$enable_shared])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$enable_static])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$enable_static])
m4trace:configure.ac:57: -1- LT_LANG([CXX])
m4trace:configure.ac:57: -1- LT_SUPPORTED_TAG([CXX])
m4trace:configure.ac:57: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$CXXCPP])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$CXXCPP])
m4trace:configure.ac:57: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:57: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:57: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:57: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:57: -1- LT_PATH_LD
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$LD])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$LD])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_prog_gnu_ld])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_prog_gnu_ld])
m4trace:configure.ac:57: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:57: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:57: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, CXX)])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(ld_shlibs, CXX)])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic, CXX)])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic, CXX)])
m4trace:configure.ac:57: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, CXX) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, CXX)], [$_LT_TAGVAR(lt_prog_compiler_pic, CXX)@&t@m4_if([CXX],[],[ -DPIC],[m4_if([CXX],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, CXX) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, CXX)=" $_LT_TAGVAR(lt_prog_compiler_pic, CXX)" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, CXX)=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, CXX)=no])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic_works, CXX)])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic_works, CXX)])
m4trace:configure.ac:57: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works_CXX], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, CXX)=])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_prog_compiler_static_works_CXX])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_prog_compiler_static_works_CXX])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, CXX)])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, CXX)])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, CXX)])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, CXX)])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$hard_links])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$hard_links])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, CXX)])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(ld_shlibs, CXX)])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$lt_cv_archive_cmds_need_lc_CXX])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$lt_cv_archive_cmds_need_lc_CXX])
m4trace:configure.ac:57: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$dynamic_linker])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$dynamic_linker])
m4trace:configure.ac:57: -1- AC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, CXX)])
m4trace:configure.ac:57: -1- COLORIZE_RESULT([$_LT_TAGVAR(hardcode_action, CXX)])
m4trace:configure.ac:58: -1- m4_pattern_allow([^LIBTOOL_DEPS$])
m4trace:configure.ac:62: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:62: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:62: -1- m4_pattern_allow([^HAVE_LIBM$])
m4trace:configure.ac:66: -1- AC_PROG_EGREP
m4trace:configure.ac:66: -1- AC_MSG_RESULT([$ac_cv_path_EGREP])
m4trace:configure.ac:66: -1- COLORIZE_RESULT([$ac_cv_path_EGREP])
m4trace:configure.ac:66: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:68: -1- AC_MSG_RESULT([$ac_cv_header_stdbool_h])
m4trace:configure.ac:68: -1- COLORIZE_RESULT([$ac_cv_header_stdbool_h])
m4trace:configure.ac:68: -1- AC_MSG_RESULT([$ac_res])
m4trace:configure.ac:68: -1- COLORIZE_RESULT([$ac_res])
m4trace:configure.ac:68: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:68: -1- m4_pattern_allow([^HAVE_STDBOOL_H$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^HAVE_STDLIB_H$])
m4trace:configure.ac:72: -1- AC_MSG_RESULT([$ac_cv_func_malloc_0_nonnull])
m4trace:configure.ac:72: -1- COLORIZE_RESULT([$ac_cv_func_malloc_0_nonnull])
m4trace:configure.ac:72: -1- m4_pattern_allow([^HAVE_MALLOC$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^HAVE_MALLOC$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:72: -1- m4_pattern_allow([^malloc$])
m4trace:configure.ac:73: -1- m4_pattern_allow([^HAVE_STDLIB_H$])
m4trace:configure.ac:73: -1- AC_MSG_RESULT([$ac_cv_func_realloc_0_nonnull])
m4trace:configure.ac:73: -1- COLORIZE_RESULT([$ac_cv_func_realloc_0_nonnull])
m4trace:configure.ac:73: -1- m4_pattern_allow([^HAVE_REALLOC$])
m4trace:configure.ac:73: -1- m4_pattern_allow([^HAVE_REALLOC$])
m4trace:configure.ac:73: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:73: -1- m4_pattern_allow([^realloc$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^POW_LIB$])
m4trace:configure.ac:74: -1- AC_MSG_RESULT([$ac_cv_func_strtod])
m4trace:configure.ac:74: -1- COLORIZE_RESULT([$ac_cv_func_strtod])
m4trace:configure.ac:74: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:74: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:74: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:78: -1- AC_MSG_RESULT([$ac_cv_c_const])
m4trace:configure.ac:78: -1- COLORIZE_RESULT([$ac_cv_c_const])
m4trace:configure.ac:78: -1- m4_pattern_allow([^const$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:80: -1- AC_MSG_RESULT([$ac_cv_c_inline])
m4trace:configure.ac:80: -1- COLORIZE_RESULT([$ac_cv_c_inline])
m4trace:configure.ac:82: -1- AC_RNA_INIT
m4trace:configure.ac:82: -1- AX_COMPILER_VENDOR
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_c_compiler_vendor])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_c_compiler_vendor])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-fno-strict-aliasing], [
  AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_CFLAGS])
], [], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cflags___fno_strict_aliasing])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cflags___fno_strict_aliasing])
m4trace:configure.ac:82: -1- AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_CFLAGS])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-fno-strict-aliasing], [
  AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_CXXFLAGS])
], [], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cxxflags___fno_strict_aliasing])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cxxflags___fno_strict_aliasing])
m4trace:configure.ac:82: -1- AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_CXXFLAGS])
m4trace:configure.ac:82: -1- AX_CHECK_LINK_FLAG([-fno-strict-aliasing], [
  AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_LDFLAGS])
], [], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_ldflags___fno_strict_aliasing])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_ldflags___fno_strict_aliasing])
m4trace:configure.ac:82: -1- AX_APPEND_FLAG(["-fno-strict-aliasing"], [RNA_LDFLAGS])
m4trace:configure.ac:82: -1- RNA_ENABLE_C11
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([c11], [C11 feature support (unnamed unions of unnamed structs)], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([c11], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_c11=$enable_c11],
      [enable_c11=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_c11=$enable_c11], [enable_c11=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([c11], [
    AC_MSG_CHECKING([whether the C compiler allows unnamed unions of unnamed structs])
    # save current global flags
    AC_LANG_PUSH([C])
    AC_RUN_IFELSE([AC_LANG_SOURCE([[#include <stdlib.h>
                                    struct bla {
                                      union {
                                        struct { int a; char  b;};
                                        struct { long c; double d;};
                                      };
                                    };
                                    int main (void) { return 0;} ]])],
                                    [enable_c11=yes],
                                    [enable_c11=no],
                                    [enable_c11=no])

    AC_LANG_POP([C])
    AC_MSG_RESULT([$enable_c11])

    AS_IF([ test "x$enable_c11" != "xno" ],[
      AC_MSG_CHECKING([whether the C++ compiler allows unnamed unions of unnamed structs])
      AC_LANG_PUSH([C++])
      AC_RUN_IFELSE([AC_LANG_SOURCE([[extern "C" {
                                        #include <stdlib.h>
                                        struct bla {
                                          union {
                                            struct { int a; char  b;};
                                            struct { long c; double d;};
                                          };
                                        };
                                      };
                                      int main (void) { return 0;} ]])],
                                      [enable_c11=yes],
                                      [enable_c11=no],
                                      [enable_c11=no])

      AC_LANG_POP([C++])
      AC_MSG_RESULT([$enable_c11])
    ])
  ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$enable_c11])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$enable_c11])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$enable_c11])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$enable_c11])
m4trace:configure.ac:82: -1- AX_APPEND_FLAG(["${DISABLE_C11_FEATURES}"], [RNA_CPPFLAGS])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DISABLE_C11_FEATURES$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_DISABLE_C11_FEATURES$])
m4trace:configure.ac:82: -1- RNA_ENABLE_OSX
m4trace:configure.ac:82: -1- AX_REQUIRE_DEFINED([RNA_ADD_FEATURE])
m4trace:configure.ac:82: -1- RNA_ENABLE_OSX_UNIVERSAL_BINARY
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([universal_binary], [generate universal (fat) binaries on MacOSX], [no], [], [], ["-arch arm64 -arch x86_64"])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([universal_binary], [
  for i in "-arch arm64 -arch x86_64"; do
    AC_RNA_TEST_FILE([$i],
      [enable_universal_binary=$enable_universal_binary],
      [enable_universal_binary=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_universal_binary=$enable_universal_binary], [enable_universal_binary=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([universal_binary], [

    ## This option is only meant for MacOSX
    case "$host" in
        *darwin*)   ;;
        *)          AC_MSG_ERROR([
**********************************************************************
        --enable-universal-binary is intended for use on MacOSX only!
**********************************************************************
                    ])
                    ;;
    esac

    osx_arch_array=( ${enable_universal_binary} )
    if test ${#osx_arch_array[@]} -gt 1 ; then
      if test "$enable_dependency_tracking" != no ; then
        AC_MSG_WARN([disabling dependency tracking])
        AM_CONDITIONAL([AMDEP],[false]) # automake-1.9.6
        AM_CONDITIONAL([am__fastdepCC],[false])
        AMDEPBACKSLASH=
      fi
    fi

    ## set architectures, if specified by the user
    if test "x$enable_universal_binary" != "xyes"; then
      osx_arch="$enable_universal_binary"
    else
      ## otherwise, use default options
      osx_arch="-arch arm64 -arch x86_64"
    fi

    CFLAGS="${CFLAGS} $osx_arch"
    CXXFLAGS="${CXXFLAGS} $osx_arch"
    LDFLAGS="${LDFLAGS} $osx_arch"

    ## trim leading/trailing empty spaces from flags
    CFLAGS="`echo ${CFLAGS} | sed -e 's/^ *//' -e 's/ *$//'`"
    CXXFLAGS="`echo ${CFLAGS} | sed -e 's/^ *//' -e 's/ *$//'`"
    LDLAGS="`echo ${CFLAGS} | sed -e 's/^ *//' -e 's/ *$//'`"

  ])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([AMDEP], [false])
m4trace:configure.ac:82: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([am__fastdepCC], [false])
m4trace:configure.ac:82: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_OSX_SDK
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([macosx_sdk], [use a specific Mac OS X SDK], [no], [], [], ["latest"])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([macosx_sdk], [
  for i in "latest"; do
    AC_RNA_TEST_FILE([$i],
      [enable_macosx_sdk=$enable_macosx_sdk],
      [enable_macosx_sdk=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_macosx_sdk=$enable_macosx_sdk], [enable_macosx_sdk=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([macosx_sdk_path], [specify the path to a specific Mac OS X SDK], [no], [enable_macosx_sdk="custom"], [enable_macosx_sdk_path=auto], ["auto"])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([macosx_sdk_path], [
  for i in "auto"; do
    AC_RNA_TEST_FILE([$i],
      [enable_macosx_sdk_path=$enable_macosx_sdk_path],
      [enable_macosx_sdk_path=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_macosx_sdk_path=$enable_macosx_sdk_path], [enable_macosx_sdk_path=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([macosx_sdk], [

    ## This option is only meant for MacOSX
    case "$host" in
        *darwin*)   ;;
        *)          AC_MSG_ERROR([
**********************************************************************
        --enable-macosx-sdk is intended for use on MacOSX only!
**********************************************************************
                    ])
                    ;;
    esac

    macosx_sdk_path=
    macosx_sdk_version=
    
    # check whether a specific path was given by the user
    if test "x$enable_macosx_sdk_path" != "xauto" ; then
      if test -d "$enable_macosx_sdk_path" ; then
        macosx_sdk_path="$enable_macosx_sdk_path"
        # determine the version
        macosx_sdk_version=11.3
      else
        AC_MSG_ERROR([
**********************************************************************
  Unable to set the MacOSX SDK path!

  The path you've specified is not a directory!
**********************************************************************
        ])
      fi
    else
      # determine xcode path automatically
      if test -x /usr/bin/xcode-select ; then
        xcodepath="`xcode-select -p`"
      else
        AC_MSG_ERROR([
**********************************************************************
  /usr/bin/xcode-select is missing!
  
  Unable to automatically determine SDK path! Please specify the
  SDK path using the --macosx-sdk-path parameter, or fix your XCode
  installation
**********************************************************************
        ])
      fi

      # automatic determination of latest SDK
      if test "x$enable_macosx_sdk" = "xyes" || test "x$enable_macosx_sdk" = "xlatest" ; then
        ## check for possible SDKs in descending order
        macosx_sdk_versions="11.3 11.2 11.1 11.0 10.15 10.14 10.13 10.12 10.11 10.10 10.9 10.8 10.7 10.6 10.5"
      else
        macosx_sdk_versions="${enable_macosx_sdk}"
      fi

      for v in ${macosx_sdk_versions} ; do
        AC_MSG_CHECKING([for MacOSX SDK $v])
        if test -d "$xcodepath/Platforms/MacOSX.platform/Developer/SDKs/MacOSX$v.sdk" ; then
          macosx_sdk_path="$xcodepath/Platforms/MacOSX.platform/Developer/SDKs/MacOSX${v}.sdk"
          macosx_sdk_version="$v"
          AC_MSG_RESULT([${macosx_sdk_path}])
          break
        else
          AC_MSG_RESULT([not found])
        fi
      done
    fi

    if test -z "$macosx_sdk_path" ; then
      AC_MSG_ERROR([
**********************************************************************
  Unable to set/determine the SDK path!

  Either you specified a non-existing version, or, if you have not
  specified a version at all, your XCode installation is missing a
  version we are aware of!
**********************************************************************
                  ])
    else
      bitness=-m64

      if test "$with_macosx_version_min_required" = ""; then
          case $macosx_sdk_version in
          10.5)
              with_macosx_version_min_required="10.5";;
          *)
              with_macosx_version_min_required="11.3";;
          esac
      fi

      if test "$with_macosx_version_max_allowed" = ""; then
          with_macosx_version_max_allowed="$macosx_sdk_version"
      fi

      ## if everything seems to be correct, lets start to set configurations
      AC_MSG_WARN([setting up build for MacOSX SDK ${macosx_sdk_version}])
      AC_MSG_CHECKING([what compiler to use])
      case $macosx_sdk_version in
        10.5)
            CC="${gccprefix}gcc-4.2"
            CXX="${gccprefix}g++-4.2"
            INSTALL_NAME_TOOL=`xcrun -find install_name_tool`
            ;;
        10.6)
            # did someone copy her 10.6 sdk into xcode 4 (needed on Mountain Lion)?
            if test "$(echo $macosx_sdk_path | cut -c1-23)" = "/Applications/Xcode.app"; then
                CC="`xcrun -find gcc`"
                CXX="`xcrun -find g++`"
            else
                CC="gcc-4.2"
                CXX="g++-4.2"
            fi
            CFLAGS="${CFLAGS} $bitness"
            CXXFLAGS="${CXXFLAGS} $bitness"
            LDFLAGS="${LDFLAGS} $bitness"
            INSTALL_NAME_TOOL=`xcrun -find install_name_tool`
            #LIBTOOL=libtool
            ;;
        10.7|10.8|10.9|10.10|10.11|10.12|10.13|10.14|10.15|11.0|11.1|11.2|11.3)
            if test "$with_macosx_version_min_required" != 10.6; then
              # Use libc++ instead of libstdc++ when possible
              stdlib=-stdlib=libc++
            fi

            CC="`xcrun -find clang`"
            CXX="`xcrun -find clang++`"

            CFLAGS="${CFLAGS} $bitness"
            CXXFLAGS="${CXXFLAGS} $bitness $stdlib"
            LDFLAGS="${LDFLAGS} $bitness"

            INSTALL_NAME_TOOL=`xcrun -find install_name_tool`
            AR=`xcrun -find ar`
            NM=`xcrun -find nm`
            STRIP=`xcrun -find strip`
            RANLIB=`xcrun -find ranlib`
            ;;
      esac
      CFLAGS="${CFLAGS} -mmacosx-version-min=$with_macosx_version_min_required -isysroot $macosx_sdk_path"
      CXXFLAGS="${CXXFLAGS} -mmacosx-version-min=$with_macosx_version_min_required -isysroot $macosx_sdk_path"
      LDFLAGS="${LDFLAGS} -mmacosx-version-min=$with_macosx_version_min_required -isysroot $macosx_sdk_path"

      AC_MSG_RESULT([$CC and $CXX])
    fi

  ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([${macosx_sdk_path}])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([${macosx_sdk_path}])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([not found])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([not found])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$CC and $CXX])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$CC and $CXX])
m4trace:configure.ac:82: -1- RNA_ENABLE_OSX_INSTALLER
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([macosx_installer], [generate MacOSX Installer Disk Image], [no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([macosx_installer], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_macosx_installer=$enable_macosx_installer],
      [enable_macosx_installer=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_macosx_installer=$enable_macosx_installer], [enable_macosx_installer=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([macosx_installer], [

    ## This option is only meant for MacOSX
    case "$host" in
        *darwin*)   AC_PATH_PROG([PKGBUILD], [pkgbuild],[no])
                    AC_PATH_PROG([PRODUCTBUILD], [productbuild],[no])
                    AC_PATH_PROG([HDIUTIL], [hdiutil],[no])

                    AS_IF([test "$PKGBUILD" == "no" || test "$PRODUCTBUILD" == "no" || test "$HDITOOL" == "no"],[
                        AC_MSG_ERROR([
**********************************************************************
        --enable-macosx-installer requires the programs pkgbuild,
        productbuild, and hdituil! Make sure they are in your PATH!
**********************************************************************
                        ])
                    ],[
                      AC_SUBST([MACOSX_INSTALLER], [packaging/macosx])
                    ])
                    ;;
        *)          AC_MSG_ERROR([
**********************************************************************
        --enable-macosx-installer is intended for use on MacOSX only!
**********************************************************************
                    ])
                    ;;
    esac
  ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PKGBUILD])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PKGBUILD])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKGBUILD$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PRODUCTBUILD])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PRODUCTBUILD])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PRODUCTBUILD$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$HDIUTIL])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$HDIUTIL])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HDIUTIL$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MACOSX_INSTALLER$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_MACOSX_INSTALLER], [test "$enable_macosx_installer" != "no"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_MACOSX_INSTALLER_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_MACOSX_INSTALLER_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_MACOSX_INSTALLER_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_MACOSX_INSTALLER_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_LTO
m4trace:configure.ac:82: -1- AX_REQUIRE_DEFINED([RNA_ADD_FEATURE])
m4trace:configure.ac:82: -1- AX_REQUIRE_DEFINED([RNA_FEATURE_IF_ENABLED])
m4trace:configure.ac:82: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:82: -1- AX_REQUIRE_DEFINED([AX_COMPILER_VENDOR])
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([lto], [Link time optimization], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([lto], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_lto=$enable_lto],
      [enable_lto=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_lto=$enable_lto], [enable_lto=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^USER_AR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^USER_RANLIB$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^USER_NM$])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([lto], [

    ac_lto_supported=no
    ac_lto_arg_supported=no
    ac_fat_lto_obj_supported=no

  # check whether the compiler accepts LTO option
    AC_LANG_PUSH([C])
    AX_CHECK_COMPILE_FLAG([-flto], [ac_lto_supported=yes],[ac_lto_supported=no],[],[])
    AC_LANG_POP([C])

    AC_LANG_PUSH([C])
    AX_CHECK_COMPILE_FLAG([-flto=auto], [ac_lto_arg_supported=yes],[ac_lto_arg_supported=no],[],[])
    AC_LANG_POP([C])

    if test "x$ac_lto_supported" != "xno" ; then
      AC_LANG_PUSH([C++])
      AX_CHECK_COMPILE_FLAG([-flto], [],[ac_lto_supported=no],[],[])
      AC_LANG_POP([C++])

      AC_LANG_PUSH([C++])
      AX_CHECK_COMPILE_FLAG([-flto=auto], [],[ac_lto_arg_supported=no],[],[])
      AC_LANG_POP([C++])
    fi

    AC_LANG_PUSH([C])
    AX_CHECK_COMPILE_FLAG([-ffat-lto-objects], [ac_fat_lto_obj_supported=yes],[ac_fat_lto_obj_supported=no],[],[])
    AC_LANG_POP([C])

    if test "x$ac_fat_lto_obj_supported" != "xno" ; then
      AC_LANG_PUSH([C++])
      AX_CHECK_COMPILE_FLAG([-ffat-lto-objects], [ac_fat_lto_obj_supported=yes],[ac_fat_lto_obj_supported=no],[],[])
      AC_LANG_POP([C++])
    fi

    ## prepare compile settings
    AS_IF([ test "x$ac_lto_arg_supported" != "xno" ], [
        ## set compile flags
        AS_IF([ test "x$ac_fat_lto_obj_supported" != "xno" ],[
          LTO_CFLAGS="-flto=auto -ffat-lto-objects"
          LTO_CXXFLAGS="-flto=auto -ffat-lto-objects"
        ],[
          LTO_CFLAGS="-flto=auto -ffat-lto-objects"
          LTO_CXXFLAGS="-flto=auto"
        ])
    ], [
      AS_IF([ test "x$ac_lto_supported" != "xno" ], [
        ## set compile flags
        AS_IF([ test "x$ac_fat_lto_obj_supported" != "xno" ],[
          LTO_CFLAGS="-flto -ffat-lto-objects"
          LTO_CXXFLAGS="-flto -ffat-lto-objects"
        ],[
          LTO_CFLAGS="-flto -ffat-lto-objects"
          LTO_CXXFLAGS="-flto"
        ])
      ])
    ])

    ## prepare linker settings
    if test "x$ac_lto_supported" != "xno" ; then
      if test "x$ac_lto_arg_supported" != "xno" ; then
        LTO_LDFLAGS="-flto=auto"
      else
        LTO_LDFLAGS="-flto"
      fi

      AS_IF([ test "x$ax_cv_c_compiler_vendor" == "xclang" ],[
            ## Here we have to distinguish at least OS X, since it
            ## does not use gold plugin as Linux does
            case "$host" in
              *darwin*)   ;;
              *linux*)    AX_CHECK_LINK_FLAG([-fuse-ld=gold], [
                            ## switch explicitely to ld-gold
                            LTO_LDFLAGS="-fuse-ld=gold ${LTO_LDFLAGS}"
                          ], [
                            ac_lto_supported="no"],[], [])
                          ;;
              *)          AC_MSG_WARN([Unknown target host, deactivating LTO support])
                          ac_lto_supported="no"
                          ;;
            esac
      ])
    fi


    # set ar/ranlib/nm
    if test "x$ac_lto_supported" != "xno" ; then

      ## Does the user want to explicitely set the ar/ranlib/nm commands?
      AS_IF([test "x$USER_AR" != "x" || test "x$USER_RANLIB" != "x" || test "x$USER_NM" != "x"],[
        ## The user explicitely set at least one of the above variables. Check if all are set!
        AC_PATH_PROG([OUR_AR], [$USER_AR], [no])
        AC_PATH_PROG([OUR_RANLIB], [$USER_RANLIB], [no])
        AC_PATH_PROG([OUR_NM], [$USER_NM], [no])
        AS_IF([test "$OUR_AR" == "no" || test "$OUR_RANLIB" == "no" || test "$OUR_NM" == "no"],[
          enable_lto="no"
          ac_lto_supported="no"
          AC_MSG_ERROR([Please make sure that you set all three of the USER_AR/USER_RANLIB/USER_NM variables, and that the tools exist in your PATH])
        ],[
          AC_MSG_WARN([Using ar/ranlib/nm tools as specified by user settings])
          AR="$OUR_AR"
          RANLIB="$OUR_RANLIB"
          NM="$OUR_NM"
        ])
      ], [
        ## no explicit user settings, so we proceed by distinguishing the compiler we use
        ## Here we have to hack a little. Some systems do not provide the liblto plugin for
        ## ar/ranlib/nm by default. However, gcc provides some wrappers, gcc-ar, gcc-ranlib,
        ## and gcc-nm that do so. LLVM does it likewise.
        ## Therefore, we substitute the program env vars if we detected compilation with a
        ## compiler that we know uses this scheme
        AC_MSG_WARN([Trying to re-set ar/ranlib/nm to compiler specific wrappers])
        AS_CASE([$ax_cv_c_compiler_vendor],
          [gnu],[
            AC_CHECK_TOOL([OUR_AR], [gcc-ar], [no])
            AC_CHECK_TOOL([OUR_RANLIB], [gcc-ranlib], [no])
            AC_CHECK_TOOL([OUR_NM], [gcc-nm], [no])
            AS_IF([test "$OUR_AR" == "no" || test "$OUR_RANLIB" == "no" || test "$OUR_NM" == "no"],[
              enable_lto="no"
              ac_lto_supported="no"
            ],[
              AR="$OUR_AR"
              RANLIB="$OUR_RANLIB"
              NM="$OUR_NM"
            ])
          ],
          [clang],[
            ## Here we have to distinguish at least OS X, since it
            ## does not use gold plugin as Linux does
            case "$host" in
              *darwin*)   if test "x$enable_universal_binary" != "xno" ; then
                            AC_MSG_WARN([
**********************************************************************
No LTO support for MacOSX combination with clang/llvm and universal binaries!
We will disable LTO support now!
**********************************************************************
                                      ])
                            ac_lto_supported="no"
                          else
                            AC_MSG_WARN([Building for OS X])
                          fi
                          ;;
              *linux*)    AC_MSG_WARN([Building for Linux])
                          AC_CHECK_TOOL([OUR_AR], [llvm-ar], [no])
                          AC_CHECK_TOOL([OUR_RANLIB], [llvm-ranlib], [no])
                          AC_CHECK_TOOL([OUR_NM], [llvm-nm], [no])
                          AS_IF([test "$OUR_AR" == "no"|| test "$OUR_RANLIB" == "no" || test "$OUR_NM" == "no" ],[
                            ac_lto_supported="no"
                          ],[
                            AR="$OUR_AR"
                            RANLIB="$OUR_RANLIB"
                            NM="$OUR_NM"
                          ])
                          ;;
              *)          AC_MSG_WARN([Unknown target host, deactivating LTO support])
                          ac_lto_supported="no"
                          ;;
          esac
        ],
        [
          ac_lto_supported="no"
        ])
      ])

      ## peform a linker test
      AS_IF([ test "x$ac_lto_supported" != "xno" ], [
            AC_MSG_CHECKING([whether the linker supports Link time Optimization (LTO)])
            # save current global flags
            ac_save_LDFLAGS="$LDFLAGS"
            ac_save_CPPFLAGS="$CPPFLAGS"
            ac_save_CFLAGS="$CFLAGS"
            LDFLAGS="$ac_save_LDFLAGS ${LTO_LDFLAGS}"
            CPPFLAGS="$ac_save_CPPFLAGS  ${LTO_CFLAGS}"
            CFLAGS="$ac_save_CFLAGS  ${LTO_CFLAGS}"

            AC_LANG_PUSH([C])
            AC_LINK_IFELSE([
                    AC_LANG_PROGRAM([[#include <stdlib.h>]],
                                    [[printf("bla");]])
                    ],[lto_link_success=yes],[lto_link_success=no])
            AC_LANG_POP([C])

            # turn back to default flags
            LDFLAGS="$ac_save_LDFLAGS"
            CPPFLAGS="$ac_save_CPPFLAGS"
            CFLAGS="$ac_save_CFLAGS"

            AC_MSG_RESULT([$lto_link_success])
            AS_IF([test "x$lto_link_success" != "xyes"],[
                    enable_lto="no"
                    ac_lto_supported="no"
                    AC_MSG_WARN([Your linker does not support Link Time Optimizaton! Disabling LTO support!])
                  ])
      ])

      ## append -flto flag if all checks went fine
      AS_IF([ test "x$ac_lto_supported" != "xno" ], [
        RNA_LDFLAGS="${RNA_LDFLAGS} ${LTO_LDFLAGS}"
        RNA_CFLAGS="${RNA_CFLAGS} ${LTO_CFLAGS}"
        RNA_CXXFLAGS="${RNA_CXXFLAGS} ${LTO_CXXFLAGS}"
        CONFIG_LTO="#define VRNA_WITH_LTO"
      ],[
        AC_MSG_WARN([Your compiler/linker combination does not support link-time optimization (LTO)])
        enable_lto="no"
        enabled_but_failed_lto="unsupported"
      ])
    fi
  ])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-flto], [ac_lto_supported=yes], [ac_lto_supported=no], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cflags___flto])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cflags___flto])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-flto=auto], [ac_lto_arg_supported=yes], [ac_lto_arg_supported=no], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cflags___flto_auto])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cflags___flto_auto])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-flto], [], [ac_lto_supported=no], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cxxflags___flto])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cxxflags___flto])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-flto=auto], [], [ac_lto_arg_supported=no], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cxxflags___flto_auto])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cxxflags___flto_auto])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-ffat-lto-objects], [ac_fat_lto_obj_supported=yes], [ac_fat_lto_obj_supported=no], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cflags___ffat_lto_objects])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cflags___ffat_lto_objects])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-ffat-lto-objects], [ac_fat_lto_obj_supported=yes], [ac_fat_lto_obj_supported=no], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cxxflags___ffat_lto_objects])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cxxflags___ffat_lto_objects])
m4trace:configure.ac:82: -1- AX_CHECK_LINK_FLAG([-fuse-ld=gold], [
                            ## switch explicitely to ld-gold
                            LTO_LDFLAGS="-fuse-ld=gold ${LTO_LDFLAGS}"
                          ], [
                            ac_lto_supported="no"], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_ldflags___fuse_ld_gold])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_ldflags___fuse_ld_gold])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_AR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_AR])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_AR$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_RANLIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_RANLIB])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_RANLIB$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_NM])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_NM])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_NM$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_AR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_AR])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_AR$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_ct_OUR_AR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_ct_OUR_AR])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_RANLIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_RANLIB])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_RANLIB$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_ct_OUR_RANLIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_ct_OUR_RANLIB])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_NM])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_NM])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_NM$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_ct_OUR_NM])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_ct_OUR_NM])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_AR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_AR])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_AR$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_ct_OUR_AR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_ct_OUR_AR])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_RANLIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_RANLIB])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_RANLIB$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_ct_OUR_RANLIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_ct_OUR_RANLIB])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$OUR_NM])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$OUR_NM])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OUR_NM$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_ct_OUR_NM])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_ct_OUR_NM])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$lto_link_success])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$lto_link_success])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_LTO$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LTO_CFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LTO_CXXFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LTO_LDFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_LTO], [test "$ac_lto_supported" != "no"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_LTO_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_LTO_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_LTO_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_LTO_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_SVM
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([svm], [svm classifiers], [yes], [], [], [${srcdir}/src/libsvm-${SVM_VERSION}/svm.cpp ${srcdir}/src/libsvm-${SVM_VERSION}/svm.h])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([svm], [
  for i in ${srcdir}/src/libsvm-${SVM_VERSION}/svm.cpp ${srcdir}/src/libsvm-${SVM_VERSION}/svm.h; do
    AC_RNA_TEST_FILE([$i],
      [with_svm=$with_svm],
      [with_svm=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_svm=$with_svm], [with_svm=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([svm], [
    AC_SUBST([LIBSVM_DIR], [libsvm-${SVM_VERSION}])
    ## substitution for reference manual config
    AC_SUBST([REFDOC_PREDEF_SVM], [VRNA_WITH_SVM])
    AC_DEFINE([VRNA_WITH_SVM], [1], [Compute z-scores for RNALfold])
    SVM_LIBS="-lstdc++"
    CONFIG_SVM="#define VRNA_WITH_SVM"
    SETUPCFG_SW_SVM="True"
    SETUPCFG_SVM_MACRO="svm_macro = VRNA_WITH_SVM"
    SETUPCFG_SVM_LIBS="svm_libs  = stdc++"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LIBSVM_DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^REFDOC_PREDEF_SVM$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_WITH_SVM$])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_DISABLED([svm], [
    SETUPCFG_SW_SVM="False"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SVM_VERSION$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SVM_LIBS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_SVM$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_SW_SVM$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_SVM_MACRO$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_SVM_LIBS$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_SVM], [test "$with_svm" != "no"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_SVM_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_SVM_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_SVM_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_SVM_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_GSL
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([gsl], [GNU Scientific Library], [yes])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([gsl], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_gsl=$with_gsl],
      [with_gsl=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_gsl=$with_gsl], [with_gsl=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([gsl], [
    AC_CHECK_LIB([gslcblas],[cblas_dgemm])
    AC_CHECK_LIB([gsl],[gsl_blas_dgemm])

    if test "$ac_cv_lib_gsl_gsl_blas_dgemm" != yes; then
      AC_MSG_WARN("Can't find libgsl. Falling back to default implementation.")
      enabled_but_failed_gsl="(libgsl not found)"
      with_gsl="no"
    fi
  ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAVE_LIBGSLCBLAS$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_Lib])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_Lib])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAVE_LIBGSL$])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([gsl], [
    ## Check for gsl/gsl_multimin.h header first
    AC_CHECK_HEADER([gsl/gsl_multimin.h], [
      ## now, check if we can compile a program
      AC_MSG_CHECKING([whether we can compile and link programs with gsl support])
      ac_save_LIBS="$LIBS"
      LIBS="$ac_save_LIBS -lgsl -lgslcblas"

      AC_LANG_PUSH([C])

      AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM(
          [[#include <stdio.h>
            #include <gsl/gsl_sf_bessel.h>
          ]],
          [[
            double x = 5.0;
            double y = gsl_sf_bessel_J0 (x);
            printf ("J0(%g) = %.18e\n", x, y);
            return 0;
          ]])
      ],[
        AC_DEFINE([VRNA_WITH_GSL], [1], [Use GNU Scientific Library])
        GSL_LIBS="-lgsl -lgslcblas"
        CONFIG_GSL="#define VRNA_WITH_GSL"
        SETUPCFG_SW_GSL="True"
        SETUPCFG_GSL_MACRO="gsl_macro = VRNA_WITH_GSL"
        SETUPCFG_GSL_LIBS="gsl_libs  = gsl gslcblas"
      ],[
        with_gsl=no
      ])
      AC_LANG_POP([C])
      LIBS="$ac_save_LIBS"
      AC_MSG_RESULT([$with_gsl])
    ], [
      AC_MSG_WARN([
==========================
Failed to find gsl/gsl_multimin.h!

You probably need to install the gsl-devel package or similar
==========================
    ])
    with_gsl=no])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_WITH_GSL$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$with_gsl])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$with_gsl])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_DISABLED([gsl], [
    SETUPCFG_SW_GSL="False"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^GSL_LIBS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_GSL$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_SW_GSL$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_GSL_MACRO$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_GSL_LIBS$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_GSL], [test "x$with_gsl" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_GSL_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_GSL_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_GSL_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_GSL_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_OPENMP
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([openmp], [OpenMP support], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([openmp], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_openmp=$enable_openmp],
      [enable_openmp=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_openmp=$enable_openmp], [enable_openmp=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([openmp], [
    AC_LANG_PUSH([C])
    AX_OPENMP([],[enable_openmp="no"])
    AC_LANG_POP([C])

    AS_IF([ test "x$enable_openmp" != "xno" ],[
      OMP_CFLAGS="$OPENMP_CFLAGS"

      AC_LANG_PUSH([C++])
      AX_OPENMP([],[enable_openmp="no"])
      AC_LANG_POP([C++])

      if test "x$enable_openmp" != "xno"
      then
        RNA_CFLAGS="${RNA_CFLAGS} ${OMP_CFLAGS}"
        RNA_CXXFLAGS="${RNA_CXXFLAGS} ${OPENMP_CXXFLAGS}"
        LIBGOMPFLAG="$OPENMP_CXXFLAGS"
        CONFIG_OPENMP="#define VRNA_WITH_OPENMP"
        SETUPCFG_SW_OPENMP="True"
        SETUPCFG_OPENMP_MACRO="openmp_macro  = VRNA_WITH_OPENMP"
        SETUPCFG_OPENMP_FLAGS="openmp_cflags = $OPENMP_CXXFLAGS"
      fi
    ])
  ])
m4trace:configure.ac:82: -1- AX_OPENMP([], [enable_openmp="no"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_c_openmp])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_c_openmp])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAVE_OPENMP$])
m4trace:configure.ac:82: -1- AX_OPENMP([], [enable_openmp="no"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_cxx_openmp])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_cxx_openmp])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAVE_OPENMP$])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_DISABLED([openmp], [
    SETUPCFG_SW_OPENMP="False"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_OPENMP$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_SW_OPENMP$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_OPENMP_MACRO$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_OPENMP_FLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LIBGOMPFLAG$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OPENMP_CFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^OPENMP_CXXFLAGS$])
m4trace:configure.ac:82: -1- RNA_ENABLE_PTHREADS
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([pthreads], [Parallel input processing support], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([pthreads], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_pthreads=$enable_pthreads],
      [enable_pthreads=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_pthreads=$enable_pthreads], [enable_pthreads=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([pthreads], [
    ## probe for pthreads availability
    AX_PTHREAD([
        AC_DEFINE([VRNA_WITH_PTHREADS], [1], [Use pthreads for parallel input processing])
    ], [
        enable_pthreads="no"
    ])
  ])
m4trace:configure.ac:82: -1- AX_PTHREAD([
        AC_DEFINE([VRNA_WITH_PTHREADS], [1], [Use pthreads for parallel input processing])
    ], [
        enable_pthreads="no"
    ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_pthread_ok])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_pthread_ok])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_PTHREAD_CLANG])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_PTHREAD_CLANG])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_pthread_config])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_pthread_config])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^ax_pthread_config$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_pthread_ok])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_pthread_ok])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_PTHREAD_JOINABLE_ATTR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_PTHREAD_JOINABLE_ATTR])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_CREATE_JOINABLE$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_PTHREAD_SPECIAL_FLAGS])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_PTHREAD_SPECIAL_FLAGS])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_PTHREAD_PRIO_INHERIT])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_PTHREAD_PRIO_INHERIT])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAVE_PTHREAD_PRIO_INHERIT$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PTHREAD_CC])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PTHREAD_CC])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_CC$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PTHREAD_CXX])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PTHREAD_CXX])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_CXX$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_LIBS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_CFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_CC$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_CXX$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_WITH_PTHREADS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_LIBS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PTHREAD_CFLAGS$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_PTHREADS], [test "x$enable_pthreads" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_PTHREADS_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_PTHREADS_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_PTHREADS_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_PTHREADS_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_NR_SAMPLE_HASH
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([NRhash], [Hash for non-redundant sampling datas structure], [no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([NRhash], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_NRhash=$enable_NRhash],
      [enable_NRhash=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_NRhash=$enable_NRhash], [enable_NRhash=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([NRhash], [
    AC_DEFINE([VRNA_NR_SAMPLING_HASH], [1], [Use Hash for non-redundant sampling data structure])
    CONFIG_NR_SAMPLING="#define VRNA_NR_SAMPLING_HASH"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_NR_SAMPLING_HASH$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_NR_SAMPLING$])
m4trace:configure.ac:82: -1- RNA_ENABLE_FLOATPF
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([floatpf], [Floating point precision in partition function computations], [no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([floatpf], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_floatpf=$enable_floatpf],
      [enable_floatpf=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_floatpf=$enable_floatpf], [enable_floatpf=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([floatpf], [

    AC_DEFINE([USE_FLOAT_PF], [1], [Use floating point precision in partition function computations])
    CONFIG_FLOAT_PF="#define USE_FLOAT_PF"
    ## substitution for reference manual config
    AC_SUBST([REFDOC_PREDEF_FLOAT_PF], [USE_FLOAT_PF])
    AC_SUBST([FLOAT_PF_FLAG], [-DUSE_FLOAT_PF])
    AX_APPEND_FLAG([-DUSE_FLOAT_PF], [RNA_CPPFLAGS])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^USE_FLOAT_PF$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^REFDOC_PREDEF_FLOAT_PF$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^FLOAT_PF_FLAG$])
m4trace:configure.ac:82: -1- AX_APPEND_FLAG([-DUSE_FLOAT_PF], [RNA_CPPFLAGS])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_FLOAT_PF$])
m4trace:configure.ac:82: -1- RNA_ENABLE_DEPRECATION_WARNINGS
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([warn_deprecated], [Warn upon usage of deprecated symbols], [no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([warn_deprecated], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_warn_deprecated=$enable_warn_deprecated],
      [enable_warn_deprecated=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_warn_deprecated=$enable_warn_deprecated], [enable_warn_deprecated=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([warn_deprecated], [
    AC_DEFINE([VRNA_WARN_DEPRECATED], [1], [Warn upon usage of deprecated symbols])
    DEPRECATION_WARNING=-DVRNA_WARN_DEPRECATED
    AX_APPEND_FLAG([-DVRNA_WARN_DEPRECATED], [RNA_CPPFLAGS])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_WARN_DEPRECATED$])
m4trace:configure.ac:82: -1- AX_APPEND_FLAG([-DVRNA_WARN_DEPRECATED], [RNA_CPPFLAGS])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DEPRECATION_WARNING$])
m4trace:configure.ac:82: -1- RNA_ENABLE_COLORED_TTY
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([tty_colors], [Colored TTY output], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([tty_colors], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_tty_colors=$enable_tty_colors],
      [enable_tty_colors=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_tty_colors=$enable_tty_colors], [enable_tty_colors=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_DISABLED([tty_colors], [
    AC_DEFINE([VRNA_WITHOUT_TTY_COLORS], [1], [Do not use colors for TTY output])
    CONFIG_TTY_COLORS="#define VRNA_WITHOUT_TTY_COLORS"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_WITHOUT_TTY_COLORS$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_TTY_COLORS], [test "x$enable_tty_colors" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TTY_COLORS_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TTY_COLORS_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TTY_COLORS_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TTY_COLORS_FALSE])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_TTY_COLORS$])
m4trace:configure.ac:82: -1- RNA_ENABLE_STATIC_BIN
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([static_executables], [Produce statically linked executable binaries], [no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([static_executables], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_static_executables=$enable_static_executables],
      [enable_static_executables=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_static_executables=$enable_static_executables], [enable_static_executables=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([static_executables], [
    SAVED_LDFLAGS=$LDFLAGS
    LDFLAGS="$LDFLAGS -static"

    AC_MSG_NOTICE([Checking possiblity to build statically linked executables using C compiler])
    AC_LANG_PUSH([C])

    AC_RUN_IFELSE([AC_LANG_SOURCE([[ #include <math.h>
                                      int main (void) { return (int)log(1.);} ]])],
                                      [],
                                      [ AC_MSG_ERROR([[
############################################
Failed to statically link C program

Please make sure that static variants for
all libraries that are about to be linked
into the executables are present!

Checked compiler flag setup:
 LDFLAGS = $LDFLAGS 
 LIBS    = $LIBS
 CLFAGS  = $CFLAGS
############################################]]) ],
                                      [enable_static_executables=no])

    AC_LANG_POP([C])
    AC_MSG_NOTICE([Building statically linked C executables seems to work fine])
    LDFLAGS=$SAVED_LDFLAGS
  ])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([static_executables], [
    SAVED_LDFLAGS=$LDFLAGS
    LDFLAGS="$LDFLAGS -static -lstdc++"

    AC_MSG_NOTICE([Checking possiblity to build statically linked executables using C++ compiler])
    AC_LANG_PUSH([C++])

    AC_RUN_IFELSE([AC_LANG_SOURCE([[ int main (void) { return 0;} ]])],
                                      [],
                                      [ AC_MSG_ERROR([[
############################################
Failed to statically link C++ program

Please make sure that static variants for
all libraries that are about to be linked
into the executables are present!
############################################]]) ],
                                      [enable_static_executables=no])

    AC_LANG_POP([C++])
    AC_MSG_NOTICE([Building statically linked C++ executables seems to work fine])

    LDFLAGS=$SAVED_LDFLAGS
  ])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_STATIC_EXECUTABLES], [test "x$enable_static_executables" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_STATIC_EXECUTABLES_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_STATIC_EXECUTABLES_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_STATIC_EXECUTABLES_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_STATIC_EXECUTABLES_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_SIMD
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([simd], [Speed-up MFE computations using explicit SIMD instructions.], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([simd], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_simd=$enable_simd],
      [enable_simd=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_simd=$enable_simd], [enable_simd=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([sse], [Deprecated switch for SIMD optimizations. Use --enable-simd/--disable-simd instead], [no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([sse], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_sse=$enable_sse],
      [enable_sse=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_sse=$enable_sse], [enable_sse=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_ADD_WARNING([Deprecated option --enable-simd detected => Please use --enable-simd instead!])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_WITH_SIMD_AVX512$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_WITH_SIMD_SSE41$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([simd], [
    SETUPCFG_SW_SIMD="True"
  ])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_DISABLED([simd], [
    SETUPCFG_SW_SIMD="False"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SIMD_AVX512_FLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SIMD_SSE41_FLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_SW_SIMD$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_SIMD_AVX512], [test "x$ac_simd_capability_avx512f" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_SIMD_AVX512_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_SIMD_AVX512_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_SIMD_AVX512_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_SIMD_AVX512_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_SIMD_SSE41], [test "x$ac_simd_capability_sse41" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_SIMD_SSE41_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_SIMD_SSE41_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_SIMD_SSE41_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_SIMD_SSE41_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_VECTORIZE
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([vectorize], [Apply automatic SIMD vectorization to optimize execution speed], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([vectorize], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_vectorize=$enable_vectorize],
      [enable_vectorize=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_vectorize=$enable_vectorize], [enable_vectorize=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([vectorize], [
    AC_LANG_PUSH([C])
    AX_CHECK_COMPILE_FLAG([-ftree-vectorize], [
      AX_APPEND_FLAG(["-ftree-vectorize"], [RNA_CFLAGS])
    ],[],[],[])
    AC_LANG_POP([C])
  ])
m4trace:configure.ac:82: -1- AX_CHECK_COMPILE_FLAG([-ftree-vectorize], [
      AX_APPEND_FLAG(["-ftree-vectorize"], [RNA_CFLAGS])
    ], [], [], [])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ax_cv_check_cflags___ftree_vectorize])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ax_cv_check_cflags___ftree_vectorize])
m4trace:configure.ac:82: -1- AX_APPEND_FLAG(["-ftree-vectorize"], [RNA_CFLAGS])
m4trace:configure.ac:82: -1- RNA_ENABLE_MPFR
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([mpfr], [Use MPFR library for aribtrary precision computations in non-redundant sampling], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([mpfr], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_mpfr=$enable_mpfr],
      [enable_mpfr=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_mpfr=$enable_mpfr], [enable_mpfr=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([mpfr], [
    ## Check for mpfr.h header first
    AC_CHECK_HEADER([mpfr.h], [
      ## now, check if we can compile a program
      AC_MSG_CHECKING([whether we can compile programs with mpfr support])
      ac_save_LIBS="$LIBS"
      LIBS="$ac_save_LIBS -lmpfr -lgmp"

      AC_LANG_PUSH([C])

      AC_COMPILE_IFELSE([
        AC_LANG_PROGRAM(
          [[#include <stdio.h>
            #include <mpfr.h>
          ]],
          [[  printf ("MPFR library: %-12s\nMPFR header:  %s (based on %d.%d.%d)\n",
              mpfr_get_version (), MPFR_VERSION_STRING, MPFR_VERSION_MAJOR,
              MPFR_VERSION_MINOR, MPFR_VERSION_PATCHLEVEL);
              return 0;
          ]])
      ],[
        MPFR_LIBS="-lmpfr -lgmp"
        SETUPCFG_SW_MPFR="True"
        SETUPCFG_MPFR_MACRO="mpfr_macro  = VRNA_NR_SAMPLING_MPFR"
        SETUPCFG_MPFR_LIBS="mpfr_libs   = mpfr gmp"
        AC_DEFINE([VRNA_NR_SAMPLING_MPFR], [1], [Use MPFR for non-redundant sampling data structure operations])
      ],[
        enable_mpfr=no
      ])
      AC_LANG_POP([C])
      LIBS="$ac_save_LIBS"
      AC_MSG_RESULT([$enable_mpfr])
    ], [
      AC_MSG_WARN([
==========================
Failed to find mpfr.h!

You probably need to install the mpfr-devel package or similar
==========================
    ])
    enable_mpfr=no])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_NR_SAMPLING_MPFR$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$enable_mpfr])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$enable_mpfr])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_DISABLED([mpfr], [
    SETUPCFG_SW_MPFR="False"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MPFR_LIBS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_SW_MPFR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_MPFR_MACRO$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_MPFR_LIBS$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_MPFR], [test "x$enable_mpfr" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_MPFR_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_MPFR_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_MPFR_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_MPFR_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_NAVIEW
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([naview], [Naview Layout algorithm], [yes], [], [], [${srcdir}/src/ViennaRNA/plotting/naview/naview.c ${srcdir}/src/ViennaRNA/plotting/naview/naview.h ])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([naview], [
  for i in ${srcdir}/src/ViennaRNA/plotting/naview/naview.c ${srcdir}/src/ViennaRNA/plotting/naview/naview.h ; do
    AC_RNA_TEST_FILE([$i],
      [enable_naview=$enable_naview],
      [enable_naview=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_naview=$enable_naview], [enable_naview=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([naview], [
    AC_DEFINE([VRNA_WITH_NAVIEW_LAYOUT], [1], [Include Naview RNA structure layout algorithm])
    CONFIG_NAVIEW_LAYOUT="#define VRNA_WITH_NAVIEW_LAYOUT"
    SETUPCFG_SW_NAVIEW="True"
    SETUPCFG_NAVIEW_MACRO="naview_macro  = VRNA_WITH_NAVIEW_LAYOUT"
    NAVIEW_DIR=plotting/naview
    AX_APPEND_FLAG([-DVRNA_WITH_NAVIEW_LAYOUT], [RNA_CPPFLAGS])
    AC_CONFIG_FILES([src/ViennaRNA/plotting/naview/Makefile])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_WITH_NAVIEW_LAYOUT$])
m4trace:configure.ac:82: -1- AX_APPEND_FLAG([-DVRNA_WITH_NAVIEW_LAYOUT], [RNA_CPPFLAGS])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_DISABLED([naview], [
    SETUPCFG_SW_NAVIEW="False"
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^NAVIEW_DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CONFIG_NAVIEW_LAYOUT$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_NAVIEW_MACRO$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SETUPCFG_SW_NAVIEW$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_NAVIEW], [test "$enable_naview" != "no"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_NAVIEW_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_NAVIEW_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_NAVIEW_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_NAVIEW_FALSE])
m4trace:configure.ac:82: -1- RNA_FEATURE_POST
m4trace:configure.ac:82: -1- m4_pattern_allow([^AM_CPPFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^AM_CFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^AM_CXXFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^AM_LDFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^RNA_CFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^RNA_CXXFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^RNA_CPPFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^RNA_LDFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_LIBS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_CFLAGS$])
m4trace:configure.ac:82: -1- RNA_ENABLE_SWIG_INTERFACES
m4trace:configure.ac:82: -1- m4_pattern_allow([^SWIG$])
m4trace:configure.ac:82: -1- AX_REQUIRE_DEFINED([AX_PKG_SWIG])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([swig], [SWIG scripting language interfaces], [yes], [], [], [${srcdir}/interfaces/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([swig], [
  for i in ${srcdir}/interfaces/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_swig=$with_swig],
      [with_swig=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_swig=$with_swig], [with_swig=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AX_PKG_SWIG([4.0.2], [has_swig="yes"], [has_swig="no"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$SWIG])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$SWIG])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SWIG$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$swig_version])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$swig_version])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$SWIG_LIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$SWIG_LIB])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SWIG_LIB$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([HAS_SWIG], [test "x$has_swig" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAS_SWIG_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAS_SWIG_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([HAS_SWIG_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([HAS_SWIG_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_SWIG_PERL
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([perl], [Perl interface], [yes], [], [], [${srcdir}/interfaces/Perl/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([perl], [
  for i in ${srcdir}/interfaces/Perl/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_perl=$with_perl],
      [with_perl=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_perl=$with_perl], [with_perl=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([${srcdir}/interfaces/Perl/RNA_wrap.cpp], [], [
          with_perl="no"
        ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([${srcdir}/interfaces/Perl/RNA.pm], [], [
          with_perl="no"
        ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([perl], [
    AX_PERL_EXT
    if test "x$PERL" = "x"; then
      AC_MSG_ERROR([Perl is required to build.])
      [enable_perl_status="Perl is required to build."]
    fi
  ])
m4trace:configure.ac:82: -1- AX_PERL_EXT
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_PREFIX$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_PREFIX])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_PREFIX])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_PREFIX$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_SITEPREFIX$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_SITEPREFIX])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_SITEPREFIX])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_SITEPREFIX$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_VENDORPREFIX$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_VENDORPREFIX])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_VENDORPREFIX])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_VENDORPREFIX$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_INC$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_INC])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_INC])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_INC$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_LIB$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_LIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_LIB])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_LIB$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_SITEARCH$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_SITEARCH])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_SITEARCH])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_SITEARCH$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_VENDORARCH$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_VENDORARCH])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_VENDORARCH])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_VENDORARCH$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_SITELIB$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_SITELIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_SITELIB])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_SITELIB$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_VENDORLIB$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_VENDORLIB])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_VENDORLIB])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_VENDORLIB$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_CPPFLAGS$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_CPPFLAGS])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_CPPFLAGS])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_CPPFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_LDFLAGS$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_EXT_LDFLAGS])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_EXT_LDFLAGS])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_EXT_LDFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_SO$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PERL_SO])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PERL_SO])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_SO$])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([perl], [
    # Compose the correct installation path for perl modules
    #
    # here we actually have to account for INSTALLDIRS env variable, which can be
    #
    # site    = where the local systems administrator installs packages to
    # vendor  = where system packages are installed to, or
    # core    = where perl core packages are installed
    #
    # The default selection is 'site', but upon packaging for a specific distribution
    # we might want the user to set this to 'vendor'
    #
    AS_IF([ test "x$INSTALLDIRS" == "xvendor" ],[
      PERL_ARCH_RELATIVE_INSTALL_DIR=`echo ${PERL_EXT_VENDORARCH} | sed "s,${PERL_EXT_VENDORPREFIX},,"`
      PERL_LIB_RELATIVE_INSTALL_DIR=`echo ${PERL_EXT_VENDORLIB} | sed "s,${PERL_EXT_VENDORPREFIX},,"`
      ],[
      PERL_ARCH_RELATIVE_INSTALL_DIR=`echo ${PERL_EXT_SITEARCH} | sed "s,${PERL_EXT_SITEPREFIX},,"`
      PERL_LIB_RELATIVE_INSTALL_DIR=`echo ${PERL_EXT_SITELIB} | sed "s,${PERL_EXT_SITEPREFIX},,"`
    ])
    AC_SUBST(PERL_ARCH_RELATIVE_INSTALL_DIR)
    AC_SUBST(PERL_LIB_RELATIVE_INSTALL_DIR)

    AC_DEFINE([WITH_PERL_INTERFACE], [1], [Create the perl interface to RNAlib])
    AC_SUBST([PERL_INTERFACE], [Perl])
    AC_CONFIG_FILES([interfaces/Perl/Makefile interfaces/Perl/version.i])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_ARCH_RELATIVE_INSTALL_DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_LIB_RELATIVE_INSTALL_DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PERL_INTERFACE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PERL_INTERFACE$])
m4trace:configure.ac:82: -1- RNA_ENABLE_SWIG_PYTHON2
m4trace:configure.ac:82: -1- AX_REQUIRE_DEFINED([AX_PYTHON2_DEVEL])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([python2], [Python2 interface], [no], [], [], [${srcdir}/interfaces/Python2/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([python2], [
  for i in ${srcdir}/interfaces/Python2/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_python2=$with_python2],
      [with_python2=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_python2=$with_python2], [with_python2=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([${srcdir}/interfaces/Python2/RNA_wrap.cpp], [], [
          with_python2="no"
        ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([${srcdir}/interfaces/Python2/RNA.py], [], [
          with_python2="no"
        ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AX_PYTHON2_DEVEL
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON2])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON2])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2_INC$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON2_INC])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON2_INC])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2_LDFLAGS$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON2_LDFLAGS])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON2_LDFLAGS])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2_LD$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON2_LD])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON2_LD])
m4trace:configure.ac:82: -1- m4_pattern_allow([^python2dir$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON2_DIR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON2_DIR])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2_DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^py2execdir$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON2_EXECDIR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON2_EXECDIR])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2_EXECDIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2_SO$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON2_SO])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON2_SO])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKGPYTHON2DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYEXEC2DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKGPYEXEC2DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PYTHON2_INTERFACE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON2_INTERFACE$])
m4trace:configure.ac:82: -1- RNA_ENABLE_SWIG_PYTHON
m4trace:configure.ac:82: -1- AX_REQUIRE_DEFINED([AX_PYTHON3_DEVEL])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([python], [Python 3.x interface], [yes], [], [], [${srcdir}/interfaces/Python/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([python], [
  for i in ${srcdir}/interfaces/Python/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_python=$with_python],
      [with_python=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_python=$with_python], [with_python=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([${srcdir}/interfaces/Python/RNA_wrap.cpp], [], [
          with_python="no"
        ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([${srcdir}/interfaces/Python/RNA.py], [], [
          with_python="no"
        ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AX_PYTHON3_DEVEL
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3_INC$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3_INC])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3_INC])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3_LDFLAGS$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3_LDFLAGS])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3_LDFLAGS])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3_LD$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3_LD])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3_LD])
m4trace:configure.ac:82: -1- m4_pattern_allow([^python3dir$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3_DIR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3_DIR])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3_DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^py3execdir$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3_EXECDIR])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3_EXECDIR])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3_EXECDIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3_SO$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3_SO])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3_SO])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3_CACHE_TAG$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3_CACHE_TAG])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3_CACHE_TAG])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON3_CACHE_OPT1_EXT$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PYTHON3_CACHE_OPT1_EXT])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PYTHON3_CACHE_OPT1_EXT])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PYTHON_INTERFACE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PYTHON_INTERFACE$])
m4trace:configure.ac:82: -1- RNA_ENABLE_DOXYGEN_REFMAN([RNAlib])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([doc_pdf], [PDF RNAlib reference manual], [yes], [], [ with_doc=yes])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc_pdf], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_doc_pdf=$with_doc_pdf],
      [with_doc_pdf=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_doc_pdf=$with_doc_pdf], [with_doc_pdf=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc_pdf], [ with_doc=yes])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([doc_html], [HTML RNAlib reference manual], [yes], [], [ with_doc=yes])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc_html], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_doc_html=$with_doc_html],
      [with_doc_html=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_doc_html=$with_doc_html], [with_doc_html=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc_html], [ with_doc=yes])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([doc], [RNAlib reference manual], [yes], [ with_doc=no
                  with_doc_pdf=no
                  with_doc_html=no], [ with_doc_pdf=yes
                  with_doc_html=yes])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_doc=$with_doc],
      [with_doc=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_doc=$with_doc], [with_doc=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_DISABLED([doc], [ with_doc=no
                  with_doc_pdf=no
                  with_doc_html=no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc], [ with_doc_pdf=yes
                  with_doc_html=yes])
m4trace:configure.ac:82: -1- RNA_LATEX_ENVIRONMENT
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$pdflatex])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$pdflatex])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^pdflatex$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$bibtex])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$bibtex])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^bibtex$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$makeindex])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$makeindex])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^makeindex$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LATEX_CMD$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^BIBTEX_CMD$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKEINDEX_CMD$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$doxygen])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$doxygen])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^doxygen$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$dot])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$dot])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^dot$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$grep])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$grep])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^grep$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$perl])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$perl])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^perl$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$SPHINXBUILD])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$SPHINXBUILD])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SPHINXBUILD$])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc], [
  doxygen_xml="yes"
  doc_build_requirements_html="yes"
  doc_build_requirements_pdf="yes"
  doc_build_pdf_failed=""
  doc_build_html_failed=""

  AC_SUBST([DOXYGEN_PROJECT_NAME], [RNAlib-$PACKAGE_VERSION])
  AC_SUBST([DOXYGEN_SRCDIR], [$srcdir])
  AC_SUBST([DOXYGEN_DOCDIR], [doc/doxygen])
  AC_SUBST([DOXYGEN_CONF], [doxygen.conf])
  AC_SUBST([DOXYGEN_HAVE_DOT],[ifelse([$dot], [no], [NO], [YES])])
  AC_SUBST([SPHINX_SRCDIR], [doc/source])
  AC_SUBST([SPHINX_CMD_LATEX], ["$LATEX_CMD -interaction=nonstopmode -halt-on-error"])
  AC_SUBST([SPHINX_CMD_BIBTEX], [$BIBTEX_CMD])
  AC_SUBST([SPHINX_CMD_MAKEINDEX], [$MAKEINDEX_CMD])

  # First, check whether we are able to build doxygen XML data
  # or whether we at least have it already present
  if test "x$doxygen" != xno && test "x$perl" = xno;
  then
    AC_MSG_WARN([perl command required for automatic (re)generation of reference manual!])
    doxygen=no
  fi

  if test "x$doxygen" = xno;
  then
    AC_RNA_TEST_FILE( [$DOXYGEN_DOCDIR/xml/index.xml],
                      [doxygen_xml=yes],
                      [doxygen_xml=no
                       doc_build_requirements_html="no"
                       doc_build_requirements_pdf="no"
                       doc_build_pdf_failed="no doxygen xml"
                       doc_build_html_failed="no doxygen xml"])
  else
    doxygen_xml=yes
  fi

  AS_IF([test "x$SPHINXBUILD" = xno],
        [
          AC_MSG_WARN(sphinx-build is required to build the reference manual)
          doc_build_requirements_html="no"
          doc_build_requirements_pdf="no"
          AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no sphinx-build])
          AC_RNA_APPEND_VAR_COMMA(doc_build_html_failed, [no sphinx-build])
        ])

  RNA_PACKAGE_IF_DISABLED([python],
        [
          AC_MSG_WARN(Python module build required to build the reference manual)
          doc_build_requirements_html="no"
          doc_build_requirements_pdf="no"
          AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no python])
          AC_RNA_APPEND_VAR_COMMA(doc_build_html_failed, [no python])
        ])

  if test "x$LATEX_CMD" = xno;
  then
    AC_MSG_WARN([Could not find pdflatex!])
    AC_MSG_WARN([deactivating automatic (re)generation of reference manual!])
      doc_build_requirements_pdf="no"
      AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no pdflatex])
  else
    RNA_LATEX_TEST_PACKAGES(
      [inputenc cmap fontenc amsmath amssymb amstext babel tgtermes tgheros fncychap geometry hyperref hypcap], [], [
      doc_build_requirements_pdf="no"
      AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [LaTeX packages missing])
    ])
  fi

  if test "x$makeindex" = xno;
  then
    AC_MSG_WARN([makeindex command not found on your system!])
    AC_MSG_WARN([deactivating automatic (re)generation of reference manual!])
    doc_build_requirements_pdf="no"
    AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no makeindex])
  fi

  if test "x$bibtex" = xno;
  then
    AC_MSG_WARN([bibtex command not found on your system!])
    AC_MSG_WARN([deactivating automatic (re)generation of reference manual!])
    doc_build_requirements_pdf="no"
    AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no bibtex])
  fi

  if test "x$grep" = xno;
  then
    AC_MSG_WARN([grep command not found on your system!])
    AC_MSG_WARN([deactivating automatic (re)generation of reference manual!])
    doc_build_requirements_pdf="no"
    AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no grep])
  fi

])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DOXYGEN_PROJECT_NAME$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DOXYGEN_SRCDIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DOXYGEN_DOCDIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DOXYGEN_CONF$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DOXYGEN_HAVE_DOT$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SPHINX_SRCDIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SPHINX_CMD_LATEX$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SPHINX_CMD_BIBTEX$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SPHINX_CMD_MAKEINDEX$])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$DOXYGEN_DOCDIR/xml/index.xml], [doxygen_xml=yes], [doxygen_xml=no
                       doc_build_requirements_html="no"
                       doc_build_requirements_pdf="no"
                       doc_build_pdf_failed="no doxygen xml"
                       doc_build_html_failed="no doxygen xml"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_pdf_failed], [no sphinx-build])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_html_failed], [no sphinx-build])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_DISABLED([python], [
          AC_MSG_WARN(Python module build required to build the reference manual)
          doc_build_requirements_html="no"
          doc_build_requirements_pdf="no"
          AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [no python])
          AC_RNA_APPEND_VAR_COMMA(doc_build_html_failed, [no python])
        ])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_pdf_failed], [no python])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_html_failed], [no python])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_pdf_failed], [no pdflatex])
m4trace:configure.ac:82: -1- RNA_LATEX_TEST_PACKAGES([inputenc cmap fontenc amsmath amssymb amstext babel tgtermes tgheros fncychap geometry hyperref hypcap], [], [
      doc_build_requirements_pdf="no"
      AC_RNA_APPEND_VAR_COMMA(doc_build_pdf_failed, [LaTeX packages missing])
    ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_latex_package_test_success])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_latex_package_test_success])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_pdf_failed], [LaTeX packages missing])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_pdf_failed], [LaTeX packages missing])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_pdf_failed], [no makeindex])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_pdf_failed], [no bibtex])
m4trace:configure.ac:82: -1- AC_RNA_APPEND_VAR_COMMA([doc_build_pdf_failed], [no grep])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc_pdf], [
  if test "x$doc_build_requirements_pdf" = xno;
  then
    # check if a generated reference manual already exists
    RNA_PACKAGE_IF_ENABLED([doc_pdf],[
      AC_RNA_TEST_FILE( [doc/$DOXYGEN_PROJECT_NAME.pdf],
                        [with_doc_pdf=yes],
                        [with_doc_pdf=no
                         doc_pdf_failed="($doc_build_pdf_failed)"])
    ])
  else
    doc_build_pdf_failed=""
  fi
])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc_pdf], [
      AC_RNA_TEST_FILE( [doc/$DOXYGEN_PROJECT_NAME.pdf],
                        [with_doc_pdf=yes],
                        [with_doc_pdf=no
                         doc_pdf_failed="($doc_build_pdf_failed)"])
    ])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([doc/$DOXYGEN_PROJECT_NAME.pdf], [with_doc_pdf=yes], [with_doc_pdf=no
                         doc_pdf_failed="($doc_build_pdf_failed)"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc_html], [
  if test "x$doc_build_requirements_html" = xno;
  then
    RNA_PACKAGE_IF_ENABLED([doc_html],[
      AC_RNA_TEST_FILE( [doc/build/html/index.html],
                        [with_doc_html=yes],
                        [with_doc_html=no
                         doc_html_failed="($doc_build_html_failed)"])
    ])
  else
    doc_build_html_failed=""
  fi
])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc_html], [
      AC_RNA_TEST_FILE( [doc/build/html/index.html],
                        [with_doc_html=yes],
                        [with_doc_html=no
                         doc_html_failed="($doc_build_html_failed)"])
    ])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([doc/build/html/index.html], [with_doc_html=yes], [with_doc_html=no
                         doc_html_failed="($doc_build_html_failed)"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([doc], [


  AC_CONFIG_FILES([${DOXYGEN_DOCDIR}/${DOXYGEN_CONF}])
  AC_CONFIG_FILES([doc/conf.py])
  AC_CONFIG_FILES([${SPHINX_SRCDIR}/conf.py])
  AC_CONFIG_FILES([${SPHINX_SRCDIR}/install.rst])

  if test "x$with_doc_pdf" = "x$with_doc_html";
  then
    if test "x$with_doc_pdf" = "x$with_doc";
    then
        if test "x$with_doc_pdf" = "xno";
        then
            with_doc=no
        fi
    fi
  fi
])
m4trace:configure.ac:82: -1- m4_pattern_allow([^REFERENCE_MANUAL_PDF_NAME$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^REFERENCE_MANUAL_TAGFILE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_REFERENCE_MANUAL], [test "x$with_doc" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_REFERENCE_MANUAL_BUILD], [test "x$doxygen" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_BUILD_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_BUILD_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_BUILD_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_BUILD_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_REFERENCE_MANUAL_PDF], [test "x$with_doc_pdf" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_PDF_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_PDF_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_PDF_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_PDF_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_REFERENCE_MANUAL_HTML], [test "x$with_doc_html" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_HTML_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_HTML_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_HTML_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_HTML_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_REFERENCE_MANUAL_XML], [test "x$doxygen_xml" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_XML_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_REFERENCE_MANUAL_XML_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_XML_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_REFERENCE_MANUAL_XML_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_TUTORIAL([tutorial])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([tutorial_pdf], [PDF tutorial], [yes])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([tutorial_pdf], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_tutorial_pdf=$with_tutorial_pdf],
      [with_tutorial_pdf=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_tutorial_pdf=$with_tutorial_pdf], [with_tutorial_pdf=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([tutorial_html], [HTML tutorial], [no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([tutorial_html], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_tutorial_html=$with_tutorial_html],
      [with_tutorial_html=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_tutorial_html=$with_tutorial_html], [with_tutorial_html=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([tutorial], [ViennaRNA tutorial], [yes], [
                  with_tutorial=no
                  with_tutorial_pdf=no
                  with_tutorial_html=no
                ], [])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([tutorial], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_tutorial=$with_tutorial],
      [with_tutorial=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_tutorial=$with_tutorial], [with_tutorial=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_DISABLED([tutorial], [
                  with_tutorial=no
                  with_tutorial_pdf=no
                  with_tutorial_html=no
                ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$htlatex])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$htlatex])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^htlatex$])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([tutorial], [

  AC_SUBST([TUTORIAL_PROJECT_NAME], [RNA-tutorial-$PACKAGE_VERSION])
  AC_SUBST([TUTORIAL_SRCDIR], [$srcdir])
  AC_SUBST([TUTORIAL_DOCDIR], [ifelse([], [], [RNA-Tutorial], [])])

  RNA_PACKAGE_IF_ENABLED([tutorial_pdf], [
    # check whether pdflatex is available
    if test "x$LATEX_CMD" = xno;
    then
      AC_MSG_WARN([Could not find pdflatex!])
      AC_MSG_WARN([deactivating automatic (re)generation of tutorial!])
      _tutorial_pdf_failed="pdflatex command is missing!"
      tutorial_requirements_pdf=no
    else
      RNA_LATEX_TEST_PACKAGES([amsmath amssymb babel beamerarticle caption color fancyvrb graphics hyperref keystroke pgf upquote url verbatim xcolor], [], [
        _tutorial_pdf_failed="Required LaTeX packages are missing!"
        tutorial_requirements_pdf=no
      ])
    fi

    AC_SUBST([TUTORIAL_CMD_LATEX], ["$LATEX_CMD -interaction=nonstopmode -halt-on-error"])

    # check if a generated tutorial already exists
    if test "x$tutorial_requirements_pdf" = xno;
    then
      AC_RNA_TEST_FILE( [$TUTORIAL_DOCDIR/$TUTORIAL_PROJECT_NAME.pdf],
                        [with_tutorial_pdf=yes],
                        [with_tutorial_pdf=no
                         tutorial_pdf_failed="($_tutorial_pdf_failed)"])
    fi
  ])

  RNA_PACKAGE_IF_ENABLED([tutorial_html], [
    AC_MSG_WARN([

  ============================================================================
   Building the HTML tutorial is intended for the maintainers website only!

   YOU MOST PROBABLY DO NOT WANT TO DO THIS!

   Use the output at your own risk!
   Also note, that the HTML tutorial is ignored during the install step!
  ============================================================================
   ])

    if test "x$htlatex" = xno;
    then
        AC_MSG_WARN([htlatex does not exists on your system!])
        AC_MSG_WARN([deactivating automatic (re)generation of HTML tutorial!])
        tutorial_html_failed="(htlatex command is missing!)"
        with_tutorial_html=no
    fi

    AC_SUBST([TUTORIAL_CMD_HTLATEX], [$htlatex])
  ])

  ## disable tutorial in case PDF and HTML are disabled
  AS_IF([ test "x$with_tutorial_pdf" == "xno" && test "x$with_tutorial_html" == "xno"], [ with_tutorial=no ])
])
m4trace:configure.ac:82: -1- m4_pattern_allow([^TUTORIAL_PROJECT_NAME$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^TUTORIAL_SRCDIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^TUTORIAL_DOCDIR$])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([tutorial_pdf], [
    # check whether pdflatex is available
    if test "x$LATEX_CMD" = xno;
    then
      AC_MSG_WARN([Could not find pdflatex!])
      AC_MSG_WARN([deactivating automatic (re)generation of tutorial!])
      _tutorial_pdf_failed="pdflatex command is missing!"
      tutorial_requirements_pdf=no
    else
      RNA_LATEX_TEST_PACKAGES([amsmath amssymb babel beamerarticle caption color fancyvrb graphics hyperref keystroke pgf upquote url verbatim xcolor], [], [
        _tutorial_pdf_failed="Required LaTeX packages are missing!"
        tutorial_requirements_pdf=no
      ])
    fi

    AC_SUBST([TUTORIAL_CMD_LATEX], ["$LATEX_CMD -interaction=nonstopmode -halt-on-error"])

    # check if a generated tutorial already exists
    if test "x$tutorial_requirements_pdf" = xno;
    then
      AC_RNA_TEST_FILE( [$TUTORIAL_DOCDIR/$TUTORIAL_PROJECT_NAME.pdf],
                        [with_tutorial_pdf=yes],
                        [with_tutorial_pdf=no
                         tutorial_pdf_failed="($_tutorial_pdf_failed)"])
    fi
  ])
m4trace:configure.ac:82: -1- RNA_LATEX_TEST_PACKAGES([amsmath amssymb babel beamerarticle caption color fancyvrb graphics hyperref keystroke pgf upquote url verbatim xcolor], [], [
        _tutorial_pdf_failed="Required LaTeX packages are missing!"
        tutorial_requirements_pdf=no
      ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_latex_package_test_success])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_latex_package_test_success])
m4trace:configure.ac:82: -1- m4_pattern_allow([^TUTORIAL_CMD_LATEX$])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$TUTORIAL_DOCDIR/$TUTORIAL_PROJECT_NAME.pdf], [with_tutorial_pdf=yes], [with_tutorial_pdf=no
                         tutorial_pdf_failed="($_tutorial_pdf_failed)"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([tutorial_html], [
    AC_MSG_WARN([

  ============================================================================
   Building the HTML tutorial is intended for the maintainers website only!

   YOU MOST PROBABLY DO NOT WANT TO DO THIS!

   Use the output at your own risk!
   Also note, that the HTML tutorial is ignored during the install step!
  ============================================================================
   ])

    if test "x$htlatex" = xno;
    then
        AC_MSG_WARN([htlatex does not exists on your system!])
        AC_MSG_WARN([deactivating automatic (re)generation of HTML tutorial!])
        tutorial_html_failed="(htlatex command is missing!)"
        with_tutorial_html=no
    fi

    AC_SUBST([TUTORIAL_CMD_HTLATEX], [$htlatex])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^TUTORIAL_CMD_HTLATEX$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^TUTORIAL_PDF_NAME$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_TUTORIAL], [test "x$with_tutorial" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TUTORIAL_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TUTORIAL_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TUTORIAL_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TUTORIAL_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_TUTORIAL_BUILD], [test "x$tutorial_requirements_pdf" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TUTORIAL_BUILD_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TUTORIAL_BUILD_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TUTORIAL_BUILD_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TUTORIAL_BUILD_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_TUTORIAL_PDF], [test "x$with_tutorial_pdf" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TUTORIAL_PDF_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TUTORIAL_PDF_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TUTORIAL_PDF_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TUTORIAL_PDF_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_TUTORIAL_HTML], [test "x$with_tutorial_html" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TUTORIAL_HTML_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_TUTORIAL_HTML_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TUTORIAL_HTML_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_TUTORIAL_HTML_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_CLA
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([cla_pdf], [PDF Contributors License Agreement], [yes])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([cla_pdf], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_cla_pdf=$with_cla_pdf],
      [with_cla_pdf=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_cla_pdf=$with_cla_pdf], [with_cla_pdf=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([cla], [ViennaRNA Contributors License Agreement], [yes], [
                  with_cla=no
                  with_cla_pdf=no
                ], [])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([cla], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_cla=$with_cla],
      [with_cla=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_cla=$with_cla], [with_cla=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_DISABLED([cla], [
                  with_cla=no
                  with_cla_pdf=no
                ])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([cla], [

  AC_SUBST([CLA_I_PROJECT_NAME], [ViennaRNA-CLA-Individual])
  AC_SUBST([CLA_E_PROJECT_NAME], [ViennaRNA-CLA-Entity])
  AC_SUBST([CLA_SRCDIR], [$srcdir])
  AC_SUBST([CLA_DOCDIR], [ifelse([], [], [doc/CLA], [])])

  RNA_PACKAGE_IF_ENABLED([cla_pdf], [
    # check whether pdflatex is available
    if test "x$LATEX_CMD" = xno;
    then
      AC_MSG_WARN([Could not find pdflatex!])
      AC_MSG_WARN([deactivating automatic (re)generation of CLA!])
      _cla_pdf_failed="pdflatex command is missing!"
      cla_requirements_pdf=no
    else
      RNA_LATEX_TEST_PACKAGES([babel fancyhdr geometry hyperref inputenc lastpage xcolor], [], [
        _cla_pdf_failed="Required LaTeX packages are missing!"
        cla_requirements_pdf=no
      ])
    fi

    AC_SUBST([CLA_CMD_LATEX], ["$LATEX_CMD -interaction=nonstopmode -halt-on-error"])

    # check if a generated CLA already exists
    if test "x$cla_requirements_pdf" = xno;
    then
      AC_RNA_TEST_FILE( [$CLA_DOCDIR/$CLA_I_PROJECT_NAME.pdf],
                        [with_cla_pdf=yes],
                        [with_cla_pdf=no
                         cla_pdf_failed="($_cla_pdf_failed)"])
      AC_RNA_TEST_FILE( [$CLA_DOCDIR/$CLA_E_PROJECT_NAME.pdf],
                        [with_cla_pdf=yes],
                        [with_cla_pdf=no
                         cla_pdf_failed="($_cla_pdf_failed)"])
    fi
  ])

  ## disable CLA in case PDF is disabled
  AS_IF([ test "x$with_cla_pdf" == "xno" ], [ with_cla=no ])
])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CLA_I_PROJECT_NAME$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CLA_E_PROJECT_NAME$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CLA_SRCDIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CLA_DOCDIR$])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([cla_pdf], [
    # check whether pdflatex is available
    if test "x$LATEX_CMD" = xno;
    then
      AC_MSG_WARN([Could not find pdflatex!])
      AC_MSG_WARN([deactivating automatic (re)generation of CLA!])
      _cla_pdf_failed="pdflatex command is missing!"
      cla_requirements_pdf=no
    else
      RNA_LATEX_TEST_PACKAGES([babel fancyhdr geometry hyperref inputenc lastpage xcolor], [], [
        _cla_pdf_failed="Required LaTeX packages are missing!"
        cla_requirements_pdf=no
      ])
    fi

    AC_SUBST([CLA_CMD_LATEX], ["$LATEX_CMD -interaction=nonstopmode -halt-on-error"])

    # check if a generated CLA already exists
    if test "x$cla_requirements_pdf" = xno;
    then
      AC_RNA_TEST_FILE( [$CLA_DOCDIR/$CLA_I_PROJECT_NAME.pdf],
                        [with_cla_pdf=yes],
                        [with_cla_pdf=no
                         cla_pdf_failed="($_cla_pdf_failed)"])
      AC_RNA_TEST_FILE( [$CLA_DOCDIR/$CLA_E_PROJECT_NAME.pdf],
                        [with_cla_pdf=yes],
                        [with_cla_pdf=no
                         cla_pdf_failed="($_cla_pdf_failed)"])
    fi
  ])
m4trace:configure.ac:82: -1- RNA_LATEX_TEST_PACKAGES([babel fancyhdr geometry hyperref inputenc lastpage xcolor], [], [
        _cla_pdf_failed="Required LaTeX packages are missing!"
        cla_requirements_pdf=no
      ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_latex_package_test_success])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_latex_package_test_success])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CLA_CMD_LATEX$])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$CLA_DOCDIR/$CLA_I_PROJECT_NAME.pdf], [with_cla_pdf=yes], [with_cla_pdf=no
                         cla_pdf_failed="($_cla_pdf_failed)"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$CLA_DOCDIR/$CLA_E_PROJECT_NAME.pdf], [with_cla_pdf=yes], [with_cla_pdf=no
                         cla_pdf_failed="($_cla_pdf_failed)"])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CLA_I_PDF_NAME$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CLA_E_PDF_NAME$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_CLA], [test "x$with_cla" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CLA_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CLA_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_CLA_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_CLA_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_CLA_BUILD], [test "x$cla_requirements_pdf" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CLA_BUILD_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CLA_BUILD_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_CLA_BUILD_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_CLA_BUILD_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_CLA_PDF], [test "x$with_cla_pdf" != xno])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CLA_PDF_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CLA_PDF_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_CLA_PDF_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_CLA_PDF_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_UNIT_TESTS
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([unittests], [Unit tests], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([unittests], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_unittests=$enable_unittests],
      [enable_unittests=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_unittests=$enable_unittests], [enable_unittests=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([check], [C-library Unit tests], [yes])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([check], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [with_check=$with_check],
      [with_check=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_check=$with_check], [with_check=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([check_executables], [Unit tests for executables], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([check_executables], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_check_executables=$enable_check_executables],
      [enable_check_executables=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_check_executables=$enable_check_executables], [enable_check_executables=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([check_perl], [Perl interface Unit tests], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([check_perl], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_check_perl=$enable_check_perl],
      [enable_check_perl=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_check_perl=$enable_check_perl], [enable_check_perl=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([check_python], [Python 3.x interface Unit tests], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([check_python], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_check_python=$enable_check_python],
      [enable_check_python=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_check_python=$enable_check_python], [enable_check_python=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_ADD_FEATURE([check_python2], [Python 2.x interface Unit tests], [yes])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([check_python2], [
  for i in ; do
    AC_RNA_TEST_FILE([$i],
      [enable_check_python2=$enable_check_python2],
      [enable_check_python2=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [enable_check_python2=$enable_check_python2], [enable_check_python2=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([unittests], [

  AC_REQUIRE_AUX_FILE([tap-driver.sh])

    # check prerequisties for unit testing support
    RNA_PACKAGE_IF_ENABLED([check],[
      PKG_CHECK_MODULES([CHECK], [check >= 0.9.4], [],[
        AC_MSG_WARN([check not found -- will not build C-library Unit tests])
        with_check="no"
        enabled_but_failed_check="(check framework not found)"
      ])
    ])

    RNA_PACKAGE_IF_ENABLED([check],[
      AC_DEFINE([WITH_CHECK], [1], [Include C-library Unit tests])
    ])

    RNA_FEATURE_IF_ENABLED([check_executables],[
      AC_ARG_VAR([DIFF],[the 'diff' program to use for test output comparison])
      AC_PATH_PROG([DIFF],[diff],[])
      if test "x$DIFF" = "x"; then
        AC_MSG_WARN([diff not found -- deactivating check for executables!])
        AC_MSG_NOTICE([==> Set DIFF environment variable if present in non-standard path!])
        enable_check_executables="no"
      fi
    ])

    RNA_FEATURE_IF_ENABLED([check_perl],[
      ## switch off if perl interface is not going to be build
      if test "x$with_perl" != "xyes" ; then
        enable_check_perl="no"
      fi
    ])

    RNA_FEATURE_IF_ENABLED([check_python],[
      ## switch off if python interface is not going to be build
      if test "x$with_python" != "xyes" ; then
        enable_check_python="no"
      fi
    ])

    RNA_FEATURE_IF_ENABLED([check_python2],[
      ## switch off if python2 interface is not going to be build
      if test "x$with_python2" != "xyes" ; then
        enable_check_python2="no"
      fi
    ])

  ])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([check], [
      PKG_CHECK_MODULES([CHECK], [check >= 0.9.4], [],[
        AC_MSG_WARN([check not found -- will not build C-library Unit tests])
        with_check="no"
        enabled_but_failed_check="(check framework not found)"
      ])
    ])
m4trace:configure.ac:82: -1- PKG_CHECK_MODULES([CHECK], [check >= 0.9.4], [], [
        AC_MSG_WARN([check not found -- will not build C-library Unit tests])
        with_check="no"
        enabled_but_failed_check="(check framework not found)"
      ])
m4trace:configure.ac:82: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:82: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$PKG_CONFIG])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$PKG_CONFIG])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_pt_PKG_CONFIG])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_pt_PKG_CONFIG])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CHECK_CFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CHECK_LIBS$])
m4trace:configure.ac:82: -1- PKG_CHECK_EXISTS([check >= 0.9.4], [pkg_cv_[]CHECK_CFLAGS=`$PKG_CONFIG --[]cflags "check >= 0.9.4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:82: -1- PKG_CHECK_EXISTS([check >= 0.9.4], [pkg_cv_[]CHECK_LIBS=`$PKG_CONFIG --[]libs "check >= 0.9.4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([check], [
      AC_DEFINE([WITH_CHECK], [1], [Include C-library Unit tests])
    ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CHECK$])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([check_executables], [
      AC_ARG_VAR([DIFF],[the 'diff' program to use for test output comparison])
      AC_PATH_PROG([DIFF],[diff],[])
      if test "x$DIFF" = "x"; then
        AC_MSG_WARN([diff not found -- deactivating check for executables!])
        AC_MSG_NOTICE([==> Set DIFF environment variable if present in non-standard path!])
        enable_check_executables="no"
      fi
    ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DIFF$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$DIFF])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$DIFF])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DIFF$])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([check_perl], [
      ## switch off if perl interface is not going to be build
      if test "x$with_perl" != "xyes" ; then
        enable_check_perl="no"
      fi
    ])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([check_python], [
      ## switch off if python interface is not going to be build
      if test "x$with_python" != "xyes" ; then
        enable_check_python="no"
      fi
    ])
m4trace:configure.ac:82: -1- RNA_FEATURE_IF_ENABLED([check_python2], [
      ## switch off if python2 interface is not going to be build
      if test "x$with_python2" != "xyes" ; then
        enable_check_python2="no"
      fi
    ])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_UNIT_TESTS], [test "x$enable_unittests" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_UNIT_TESTS_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_UNIT_TESTS_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_UNIT_TESTS_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_UNIT_TESTS_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_CHECK], [test "x$with_check" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CHECK_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CHECK_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_CHECK_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_CHECK_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_EXECUTABLE_TESTS], [test "x$with_check_executables" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_EXECUTABLE_TESTS_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_EXECUTABLE_TESTS_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_EXECUTABLE_TESTS_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_EXECUTABLE_TESTS_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_PERL_TESTS], [test "x$enable_check_perl" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PERL_TESTS_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PERL_TESTS_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_PERL_TESTS_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_PERL_TESTS_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_PYTHON_TESTS], [test "x$enable_check_python" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PYTHON_TESTS_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PYTHON_TESTS_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_PYTHON_TESTS_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_PYTHON_TESTS_FALSE])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_PYTHON2_TESTS], [test "x$enable_check_python2" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PYTHON2_TESTS_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_PYTHON2_TESTS_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_PYTHON2_TESTS_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_PYTHON2_TESTS_FALSE])
m4trace:configure.ac:82: -1- RNA_CHECK_BUILD_REQUIREMENTS
m4trace:configure.ac:82: -1- RNA_CHECK_SRC_BUILDERS
m4trace:configure.ac:82: -1- m4_pattern_allow([^XXD$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$XXD])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$XXD])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^XXD$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^XXD$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_HAS_XXD], [test "x$XXD" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_HAS_XXD_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_HAS_XXD_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_HAS_XXD_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_HAS_XXD_FALSE])
m4trace:configure.ac:82: -1- m4_pattern_allow([^GENGETOPT$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$GENGETOPT])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$GENGETOPT])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^GENGETOPT$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^GENGETOPT$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_HAS_GENGETOPT], [test "x$GENGETOPT" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_HAS_GENGETOPT_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_HAS_GENGETOPT_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_HAS_GENGETOPT_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_HAS_GENGETOPT_FALSE])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HELP2MAN$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$HELP2MAN])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$HELP2MAN])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HELP2MAN$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HELP2MAN$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([VRNA_AM_SWITCH_BUILD_MANPAGES], [test "x$HELP2MAN" != "xno" && test "x$GENGETOPT" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_BUILD_MANPAGES_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_AM_SWITCH_BUILD_MANPAGES_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_BUILD_MANPAGES_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([VRNA_AM_SWITCH_BUILD_MANPAGES_FALSE])
m4trace:configure.ac:82: -1- RNA_CHECK_POSTSCRIPT_TEMPLATES
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$STATIC_FILE_DIR/$template], [], [
                AC_MSG_ERROR([
=================================================
Can't find the postscript hex template

${template}

Make sure you've installed the 'xxd' tool to
generate it from source!
=================================================
])
            ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PS_TEMPLATE_CONST$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([PS_TEMPLATE_CONST])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PS_TEMPLATE_FILES$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PS_TEMPLATE_FILES_HEX$])
m4trace:configure.ac:82: -1- RNA_CHECK_SVG_TEMPLATES
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$STATIC_FILE_DIR/$template], [], [
                AC_MSG_ERROR([
=================================================
Can't find the svg hex template

${template}

Make sure you've installed the 'xxd' tool to
generate it from source!
=================================================
])
            ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SVG_TEMPLATE_CONST$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([SVG_TEMPLATE_CONST])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SVG_TEMPLATE_FILES$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SVG_TEMPLATE_FILES_HEX$])
m4trace:configure.ac:82: -1- RNA_CHECK_PARAMETER_FILES
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$STATIC_FILE_DIR/$parfile], [], [
                AC_MSG_ERROR([
=================================================
Can't find the energy parameter hex file

${parfile}

Make sure you've installed the 'xxd' tool to
generate it from source!
=================================================
])
            ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^ENERGY_PARAMETER_CONST$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SWIG_ENERGY_PARAMETER_CONST_PYTHON$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^SWIG_ENERGY_PARAMETER_CONST_PERL5$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([ENERGY_PARAMETER_CONST])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([SWIG_ENERGY_PARAMETER_CONST_PYTHON])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([SWIG_ENERGY_PARAMETER_CONST_PERL5])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PARAMETER_FILES$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^PARAMETER_FILES_HEX$])
m4trace:configure.ac:82: -1- RNA_CHECK_DLIB
m4trace:configure.ac:82: -1- AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_res])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_res])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAVE_CXX17$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^HAVE_CXX17$])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$DLIB_SRC_FILE], [], [
    AC_MSG_ERROR([
=================================================
Can't find dlib's source.cpp

Make sure you've unpacked 'src/dlib-${DLIB_VERSION}.tar.bz2'!

Usually, you only need to execute the following command:

tar -xjf src/dlib-${DLIB_VERSION}.tar.bz2 -C src/
=================================================
])
  ])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DLIB_CPPFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DLIB_DIR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^DLIB_VERSION$])
m4trace:configure.ac:82: -1- RNA_CHECK_SWIG_SVM
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_DISABLED([svm], [
      AS_IF([test "x$with_swig" == "xyes" && test "x$has_swig" != "xyes"], [
    AC_MSG_ERROR([
=================================================
Compilation requirements missing!

You deactivated SVM support but this requires the
scripting language interface wrappers (Perl 5, Python)
to be re-generated!

Please either install the 'swig' program to enable
re-generation of the respective wrapper files or:

a) deactivate the scripting language interfaces
   alltogether using the '--without-swig' configure
   option.
b) leave SVM support enabled by omitting the
   '--without-svm' configure option
=================================================
])        
      ])
    ])
m4trace:configure.ac:82: -1- RNA_COLOR_MAKE
m4trace:configure.ac:82: -1- m4_pattern_allow([^am__v_GEN_0$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^am__v_CC_0$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^am__v_CCLD_0$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^am__v_CXX_0$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^am__v_CXXLD_0$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([WITH_COLOR_MAKE], [test "x$enable_color_make" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_COLOR_MAKE_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_COLOR_MAKE_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_COLOR_MAKE_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([WITH_COLOR_MAKE_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_PKG_KINFOLD
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([kinfold], [Kinfold program], [yes], [], [], [${srcdir}/src/Kinfold/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([kinfold], [
  for i in ${srcdir}/src/Kinfold/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_kinfold=$with_kinfold],
      [with_kinfold=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_kinfold=$with_kinfold], [with_kinfold=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([kinfold], [
    AC_CONFIG_SUBDIRS([src/Kinfold])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([MAKE_KINFOLD], [test "x$with_kinfold" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_KINFOLD_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_KINFOLD_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_KINFOLD_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_KINFOLD_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_PKG_FORESTER
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([forester], [RNAforester program], [yes], [], [], [${srcdir}/src/RNAforester/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([forester], [
  for i in ${srcdir}/src/RNAforester/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_forester=$with_forester],
      [with_forester=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_forester=$with_forester], [with_forester=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([forester], [
    AC_CONFIG_SUBDIRS([src/RNAforester])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([MAKE_FORESTER], [test "x$with_forester" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_FORESTER_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_FORESTER_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_FORESTER_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_FORESTER_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_PKG_CLUSTER
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([cluster], [AnalyseSeqs and AnalyseDists], [no], [], [], [${srcdir}/src/Cluster/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([cluster], [
  for i in ${srcdir}/src/Cluster/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_cluster=$with_cluster],
      [with_cluster=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_cluster=$with_cluster], [with_cluster=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([cluster], [
    AC_DEFINE([WITH_CLUSTER], [1], [Analyse{Dists,Seqs}])
    AC_SUBST([CLUSTER_DIR], [Cluster])
    AC_CONFIG_FILES([src/Cluster/Makefile])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^WITH_CLUSTER$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^CLUSTER_DIR$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([MAKE_CLUSTER], [test "x$with_cluster" = "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_CLUSTER_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_CLUSTER_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_CLUSTER_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_CLUSTER_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_PKG_KINWALKER
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([kinwalker], [Kinwalker program], [no], [], [], [${srcdir}/src/Kinwalker/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([kinwalker], [
  for i in ${srcdir}/src/Kinwalker/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_kinwalker=$with_kinwalker],
      [with_kinwalker=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_kinwalker=$with_kinwalker], [with_kinwalker=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([kinwalker], [
    AC_CONFIG_SUBDIRS([src/Kinwalker])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([MAKE_KINFOLD], [test "x$with_kinwalker" != "xyes"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_KINFOLD_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_KINFOLD_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_KINFOLD_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_KINFOLD_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_PKG_RNALOCMIN
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([rnalocmin], [RNAlocmin program], [yes], [], [], [${srcdir}/src/RNAlocmin/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([rnalocmin], [
  for i in ${srcdir}/src/RNAlocmin/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_rnalocmin=$with_rnalocmin],
      [with_rnalocmin=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_rnalocmin=$with_rnalocmin], [with_rnalocmin=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([rnalocmin], [
    AC_CONFIG_SUBDIRS([src/RNAlocmin])
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([MAKE_RNALOCMIN], [test "x$with_rnalocmin" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_RNALOCMIN_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_RNALOCMIN_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_RNALOCMIN_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_RNALOCMIN_FALSE])
m4trace:configure.ac:82: -1- RNA_ENABLE_PKG_RNAXPLORER
m4trace:configure.ac:82: -1- RNA_ADD_PACKAGE([rnaxplorer], [RNAxplorer program and scripting language bindings], [yes], [], [], [${srcdir}/src/RNAxplorer/Makefile.am])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([rnaxplorer], [
  for i in ${srcdir}/src/RNAxplorer/Makefile.am; do
    AC_RNA_TEST_FILE([$i],
      [with_rnaxplorer=$with_rnaxplorer],
      [with_rnaxplorer=no])
  done
])
m4trace:configure.ac:82: -1- AC_RNA_TEST_FILE([$i], [with_rnaxplorer=$with_rnaxplorer], [with_rnaxplorer=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([yes])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([yes])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- RNA_PACKAGE_IF_ENABLED([rnaxplorer], [
    rnaxplorer_requirements="no"
    rnaxplorer_failed=""
    AC_PROG_F77

    if test "x$F77" != "x";
    then
      AC_CHECK_HEADERS([openblas/lapacke.h lapacke/lapacke.h lapacke.h],
                       [rnaxplorer_requirements=yes; rnaxplorer_failed=""; break;],
                       [rnaxplorer_failed="(missing lapacke.h)"])
    else
      rnaxplorer_failed="(missing fortran compiler)"
    fi

    if test "x$rnaxplorer_requirements" = "xyes";
    then
      AC_CONFIG_SUBDIRS([src/RNAxplorer])
    else
      AC_MSG_WARN([
========================================
Unable to detect all lapack requirements
to build the subpackage RNAxplorer!

  ${rnaxplorer_failed}

Deactivating build of RNAxplorer...
========================================])
      with_rnaxplorer=no
    fi
  ])
m4trace:configure.ac:82: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$F77])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$F77])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_ct_F77])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_ct_F77])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^ac_ct_F77$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_cv_prog_f77_g])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_cv_prog_f77_g])
m4trace:configure.ac:82: -1- LT_LANG([F77])
m4trace:configure.ac:82: -1- LT_SUPPORTED_TAG([F77])
m4trace:configure.ac:82: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:82: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:82: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$can_build_shared])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$can_build_shared])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$enable_shared])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$enable_shared])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$enable_static])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$enable_static])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic, F77)])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic, F77)])
m4trace:configure.ac:82: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, F77) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, F77)], [$_LT_TAGVAR(lt_prog_compiler_pic, F77)@&t@m4_if([F77],[],[ -DPIC],[m4_if([F77],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, F77) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, F77)=" $_LT_TAGVAR(lt_prog_compiler_pic, F77)" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, F77)=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, F77)=no])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic_works, F77)])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_pic_works, F77)])
m4trace:configure.ac:82: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works_F77], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, F77)=])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$lt_cv_prog_compiler_static_works_F77])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$lt_cv_prog_compiler_static_works_F77])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, F77)])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, F77)])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, F77)])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$_LT_TAGVAR(lt_cv_prog_compiler_c_o, F77)])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$hard_links])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$hard_links])
m4trace:configure.ac:82: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:82: -1- _m4_warn([syntax], [AC_REQUIRE: `AC_PROG_F77' was expanded before it was required
http://www.gnu.org/software/autoconf/manual/autoconf.html#Expanded-Before-Required], [../../lib/autoconf/fortran.m4:254: AC_LANG_COMPILER(Fortran 77) is expanded from...
../../lib/autoconf/lang.m4:329: AC_LANG_COMPILER_REQUIRE is expanded from...
../../lib/autoconf/general.m4:2689: AC_LINK_IFELSE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
m4/libtool.m4:1151: _LT_SYS_MODULE_PATH_AIX is expanded from...
m4/libtool.m4:4914: _LT_LINKER_SHLIBS is expanded from...
m4/libtool.m4:7681: _LT_LANG_F77_CONFIG is expanded from...
m4/libtool.m4:840: _LT_LANG is expanded from...
m4/libtool.m4:822: LT_LANG is expanded from...
m4/ac_rna_macros.m4:43: RNA_PACKAGE_IF_ENABLED is expanded from...
m4/ac_rna_subpackages.m4:93: RNA_ENABLE_PKG_RNAXPLORER is expanded from...
m4/ac_rna.m4:11: AC_RNA_INIT is expanded from...
configure.ac:82: the top level])
m4trace:configure.ac:82: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$F77])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$F77])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^F77$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_ct_F77])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_ct_F77])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([no])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([no])
m4trace:configure.ac:82: -1- m4_pattern_allow([^ac_ct_F77$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_cv_[]_AC_LANG_ABBREV[]_compiler_gnu])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$ac_cv_prog_f77_g])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$ac_cv_prog_f77_g])
m4trace:configure.ac:82: -1- LT_LANG([F77])
m4trace:configure.ac:82: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$lt_cv_irix_exported_symbol])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$lt_cv_irix_exported_symbol])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, F77)])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$_LT_TAGVAR(ld_shlibs, F77)])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$lt_cv_archive_cmds_need_lc_F77])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$lt_cv_archive_cmds_need_lc_F77])
m4trace:configure.ac:82: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$dynamic_linker])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$dynamic_linker])
m4trace:configure.ac:82: -1- AC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, F77)])
m4trace:configure.ac:82: -1- COLORIZE_RESULT([$_LT_TAGVAR(hardcode_action, F77)])
m4trace:configure.ac:82: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:82: -1- AM_CONDITIONAL([MAKE_RNAXPLORER], [test "x$with_rnaxplorer" != "xno"])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_RNAXPLORER_TRUE$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^MAKE_RNAXPLORER_FALSE$])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_RNAXPLORER_TRUE])
m4trace:configure.ac:82: -1- _AM_SUBST_NOTMAKE([MAKE_RNAXPLORER_FALSE])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_VERSION_MAJOR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_VERSION_MINOR$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_VERSION_PATCH$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VRNA_VERSION$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:84: -1- AC_MSG_RESULT([done])
m4trace:configure.ac:84: -1- COLORIZE_RESULT([done])
m4trace:configure.ac:84: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:84: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:84: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:84: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:84: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:84: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:84: -1- AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles])
m4trace:configure.ac:84: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:86: -1- AC_RNA_NOTICE
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([kinfold])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [kinfold])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([forester])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [forester])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([cluster])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [cluster])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([rnalocmin])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [rnalocmin])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([kinwalker])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [kinwalker])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([rnaxplorer])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [rnaxplorer])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([svm])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [svm])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([gsl])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [gsl])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([perl])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [perl])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([python])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [python])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([python2])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [python2])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([doc_pdf])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [doc_pdf])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([doc_html])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [doc_html])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([tutorial_pdf])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [tutorial_pdf])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([tutorial_html])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [tutorial_html])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([cla_pdf])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [cla_pdf])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_PACKAGE([check])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([with_], [check])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([mpfr])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [mpfr])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([NRhash])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [NRhash])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([c11])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [c11])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([tty_colors])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [tty_colors])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([floatpf])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [floatpf])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([warn_deprecated])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [warn_deprecated])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([vectorize])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [vectorize])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([simd])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [simd])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([lto])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [lto])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([pthreads])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [pthreads])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([openmp])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [openmp])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([unittests])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [unittests])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([check_perl])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [check_perl])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([check_python])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [check_python])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([check_python2])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [check_python2])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([macosx_installer])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [macosx_installer])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_FEATURE([macosx_sdk])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([enable_], [macosx_sdk])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([osx_arch])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [osx_arch])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_bindir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_bindir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_libdir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_libdir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_includedir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_includedir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_mandir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_mandir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_datadir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_datadir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_docdir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_docdir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_htmldir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_htmldir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_pdfdir2])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_pdfdir2])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_perl_install])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_perl_install])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_perl_arch_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_perl_arch_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_perl_lib_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_perl_lib_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_python2_install])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_python2_install])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_python2_arch_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_python2_arch_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_python2_lib_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_python2_lib_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_python_install])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_python_install])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_python_arch_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_python_arch_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT_SIMPLE([_python_lib_dir])
m4trace:configure.ac:86: -1- AC_RNA_COLOR_RESULT([], [_python_lib_dir])
m4trace:configure.ac:86: -1- AC_RNA_STRING_APPEND_FORMAT_BOLD([ac_rna_name_string], [ViennaRNA Package ${PACKAGE_VERSION}])
m4trace:configure.ac:86: -1- AC_RNA_STRING_APPEND_FORMAT_BOLD([ac_rna_final_msg], [You can run 'make', 'make check', and 'make install' now!])
