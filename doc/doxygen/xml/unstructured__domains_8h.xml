<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="unstructured__domains_8h" kind="file" language="C++">
    <compoundname>unstructured_domains.h</compoundname>
    <includes refid="datastructures_2basic_8h" local="no">ViennaRNA/datastructures/basic.h</includes>
    <includes refid="fold__compound_8h" local="no">ViennaRNA/fold_compound.h</includes>
    <includes refid="utils_2structures_8h" local="no">ViennaRNA/utils/structures.h</includes>
    <includedby refid="fold__compound_8h" local="no">ViennaRNA/fold_compound.h</includedby>
    <includedby refid="datastructures_2basic_8h" local="yes">ViennaRNA/datastructures/basic.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ViennaRNA/params/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ViennaRNA/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ViennaRNA/zscore.h</label>
        <link refid="zscore_8h_source"/>
      </node>
      <node id="15">
        <label>ViennaRNA/structured_domains.h</label>
        <link refid="structured__domains_8h"/>
      </node>
      <node id="10">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22">
        <label>ViennaRNA/fold.h</label>
        <link refid="fold_8h"/>
      </node>
      <node id="6">
        <label>ViennaRNA/utils.h</label>
        <link refid="utils_8h"/>
      </node>
      <node id="69">
        <label>ViennaRNA/utils/strings.h</label>
        <link refid="strings_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>ViennaRNA/plot_structure.h</label>
        <link refid="plot__structure_8h"/>
      </node>
      <node id="2">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ViennaRNA/alphabet.h</label>
        <link refid="alphabet_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ViennaRNA/equilibrium_probs.h</label>
        <link refid="equilibrium__probs_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>ViennaRNA/perturbation_fold.h</label>
        <link refid="perturbation__fold_8h"/>
      </node>
      <node id="30">
        <label>ViennaRNA/part_func_up.h</label>
        <link refid="part__func__up_8h"/>
      </node>
      <node id="61">
        <label>ViennaRNA/PS_dot.h</label>
        <link refid="PS__dot_8h"/>
      </node>
      <node id="33">
        <label>ViennaRNA/plex.h</label>
        <link refid="plex_8h_source"/>
      </node>
      <node id="87">
        <label>ViennaRNA/findpath.h</label>
        <link refid="findpath_8h"/>
      </node>
      <node id="78">
        <label>ViennaRNA/pf_multifold.h</label>
        <link refid="pf__multifold_8h_source"/>
      </node>
      <node id="31">
        <label>ViennaRNA/part_func_window.h</label>
        <link refid="part__func__window_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>ViennaRNA/structure_utils.h</label>
        <link refid="structure__utils_8h"/>
      </node>
      <node id="12">
        <label>ViennaRNA/combinatorics.h</label>
        <link refid="combinatorics_8h"/>
      </node>
      <node id="59">
        <label>ViennaRNA/plotting/layouts.h</label>
        <link refid="layouts_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>ViennaRNA/multibranch_loops.h</label>
        <link refid="multibranch__loops_8h"/>
      </node>
      <node id="52">
        <label>ViennaRNA/constraints/ligand.h</label>
        <link refid="ligand_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>ViennaRNA/mfe_window.h</label>
        <link refid="mfe__window_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ViennaRNA/loops/all.h</label>
        <link refid="all_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>ViennaRNA/io/file_formats.h</label>
        <link refid="io_2file__formats_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>ViennaRNA/constraints_SHAPE.h</label>
        <link refid="constraints__SHAPE_8h"/>
      </node>
      <node id="10">
        <label>ViennaRNA/part_func_co.h</label>
        <link refid="part__func__co_8h"/>
      </node>
      <node id="47">
        <label>ViennaRNA/hairpin_loops.h</label>
        <link refid="hairpin__loops_8h"/>
      </node>
      <node id="42">
        <label>ViennaRNA/loops/external.h</label>
        <link refid="external_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>ViennaRNA/neighbor.h</label>
        <link refid="neighbor_8h"/>
      </node>
      <node id="41">
        <label>ViennaRNA/params.h</label>
        <link refid="params_8h"/>
      </node>
      <node id="36">
        <label>ViennaRNA/snoop.h</label>
        <link refid="snoop_8h_source"/>
      </node>
      <node id="18">
        <label>ViennaRNA/data_structures.h</label>
        <link refid="data__structures_8h"/>
      </node>
      <node id="79">
        <label>ViennaRNA/pk_plex.h</label>
        <link refid="pk__plex_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ViennaRNA/concentrations.h</label>
        <link refid="concentrations_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ViennaRNA/commands.h</label>
        <link refid="commands_8h"/>
      </node>
      <node id="26">
        <label>ViennaRNA/heat_capacity.h</label>
        <link refid="heat__capacity_8h"/>
      </node>
      <node id="65">
        <label>ViennaRNA/plotting/utils.h</label>
        <link refid="plotting_2utils_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>ViennaRNA/loops/hairpin.h</label>
        <link refid="hairpin_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>ViennaRNA/landscape/neighbor.h</label>
        <link refid="landscape_2neighbor_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>ViennaRNA/string_utils.h</label>
        <link refid="string__utils_8h"/>
      </node>
      <node id="48">
        <label>ViennaRNA/loops/internal.h</label>
        <link refid="internal_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>ViennaRNA/mm.h</label>
        <link refid="mm_8h"/>
      </node>
      <node id="80">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>ViennaRNA/utils/basic.h</label>
        <link refid="utils_2basic_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>ViennaRNA/loops/multibranch.h</label>
        <link refid="multibranch_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ViennaRNA/gquad.h</label>
        <link refid="gquad_8h"/>
      </node>
      <node id="1">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>ViennaRNA/subopt.h</label>
        <link refid="subopt_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ViennaRNA/profiledist.h</label>
        <link refid="profiledist_8h"/>
      </node>
      <node id="38">
        <label>ViennaRNA/subopt_zuker.h</label>
        <link refid="subopt__zuker_8h_source"/>
      </node>
      <node id="15">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>ViennaRNA/landscape/walk.h</label>
        <link refid="landscape_2walk_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>ViennaRNA/landscape/findpath.h</label>
        <link refid="landscape_2findpath_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>ViennaRNA/utils/alignments.h</label>
        <link refid="utils_2alignments_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>ViennaRNA/interior_loops.h</label>
        <link refid="interior__loops_8h"/>
      </node>
      <node id="11">
        <label>ViennaRNA/centroid.h</label>
        <link refid="centroid_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ViennaRNA/file_formats.h</label>
        <link refid="file__formats_8h"/>
      </node>
      <node id="23">
        <label>ViennaRNA/fold_vars.h</label>
        <link refid="fold__vars_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>ViennaRNA/plotting/probabilities.h</label>
        <link refid="probabilities_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ViennaRNA/2Dpfold.h</label>
        <link refid="2Dpfold_8h"/>
      </node>
      <node id="62">
        <label>ViennaRNA/plotting/structures.h</label>
        <link refid="plotting_2structures_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ViennaRNA/pair_mat.h</label>
        <link refid="pair__mat_8h_source"/>
      </node>
      <node id="32">
        <label>ViennaRNA/PKplex.h</label>
        <link refid="PKplex_8h_source"/>
      </node>
      <node id="56">
        <label>ViennaRNA/constraints_soft.h</label>
        <link refid="constraints__soft_8h"/>
      </node>
      <node id="45">
        <label>ViennaRNA/loop_energies.h</label>
        <link refid="loop__energies_8h"/>
      </node>
      <node id="3">
        <label>ViennaRNA/2Dfold.h</label>
        <link refid="2Dfold_8h"/>
      </node>
      <node id="9">
        <label>ViennaRNA/part_func.h</label>
        <link refid="part__func_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>ViennaRNA/plot_layouts.h</label>
        <link refid="plot__layouts_8h"/>
      </node>
      <node id="68">
        <label>ViennaRNA/params/salt.h</label>
        <link refid="salt_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>ViennaRNA/constraints_ligand.h</label>
        <link refid="constraints__ligand_8h"/>
      </node>
      <node id="90">
        <label>ViennaRNA/walk.h</label>
        <link refid="walk_8h"/>
      </node>
      <node id="17">
        <label>ViennaRNA/cofold.h</label>
        <link refid="cofold_8h"/>
      </node>
      <node id="66">
        <label>ViennaRNA/plot_utils.h</label>
        <link refid="plot__utils_8h"/>
      </node>
      <node id="19">
        <label>ViennaRNA/duplex.h</label>
        <link refid="duplex_8h"/>
      </node>
      <node id="75">
        <label>ViennaRNA/Lfold.h</label>
        <link refid="Lfold_8h"/>
      </node>
      <node id="28">
        <label>ViennaRNA/MEA.h</label>
        <link refid="MEA_8h"/>
      </node>
      <node id="81">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ViennaRNA/ali_plex.h</label>
        <link refid="ali__plex_8h_source"/>
      </node>
      <node id="27">
        <label>ViennaRNA/LPfold.h</label>
        <link refid="LPfold_8h"/>
      </node>
      <node id="84">
        <label>ViennaRNA/constraints/SHAPE.h</label>
        <link refid="SHAPE_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ViennaRNA/mfe.h</label>
        <link refid="mfe_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>ViennaRNA/constraints.h</label>
        <link refid="constraints_8h"/>
      </node>
      <node id="94">
        <label>ViennaRNA/aln_util.h</label>
        <link refid="aln__util_8h"/>
      </node>
      <node id="21">
        <label>ViennaRNA/eval.h</label>
        <link refid="eval_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>ViennaRNA/landscape/paths.h</label>
        <link refid="paths_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>ViennaRNA/exterior_loops.h</label>
        <link refid="exterior__loops_8h"/>
      </node>
      <node id="7">
        <label>ViennaRNA/boltzmann_sampling.h</label>
        <link refid="boltzmann__sampling_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>ViennaRNA/constraints_hard.h</label>
        <link refid="constraints__hard_8h"/>
      </node>
      <node id="14">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ViennaRNA/alifold.h</label>
        <link refid="alifold_8h"/>
      </node>
      <node id="35">
        <label>ViennaRNA/snofold.h</label>
        <link refid="snofold_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structvrna__unstructured__domain__s" prot="public">vrna_unstructured_domain_s</innerclass>
    <innerclass refid="structvrna__unstructured__domain__motif__s" prot="public">vrna_unstructured_domain_motif_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="unstructured__domains_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="16" column="11" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__domains__up_1gaac911374e86236a51bfd42e1f098eaba" prot="public" static="no">
        <name>VRNA_UNSTRUCTURED_DOMAIN_EXT_LOOP</name>
        <initializer>1U</initializer>
        <briefdescription>
<para>Flag to indicate ligand bound to unpiared stretch in the exterior loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="186" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__domains__up_1ga23b610ea9564346c45cc1e2bbb62adf7" prot="public" static="no">
        <name>VRNA_UNSTRUCTURED_DOMAIN_HP_LOOP</name>
        <initializer>2U</initializer>
        <briefdescription>
<para>Flag to indicate ligand bound to unpaired stretch in a hairpin loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="192" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__domains__up_1gac4a0feccd9654c149203200248c2716b" prot="public" static="no">
        <name>VRNA_UNSTRUCTURED_DOMAIN_INT_LOOP</name>
        <initializer>4U</initializer>
        <briefdescription>
<para>Flag to indicate ligand bound to unpiared stretch in an interior loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="198" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__domains__up_1ga67b80796655e5227a4ed662bfbe398b0" prot="public" static="no">
        <name>VRNA_UNSTRUCTURED_DOMAIN_MB_LOOP</name>
        <initializer>8U</initializer>
        <briefdescription>
<para>Flag to indicate ligand bound to unpiared stretch in a multibranch loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="204" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__domains__up_1gaab12b58d59be76446a9f76fad2fe624c" prot="public" static="no">
        <name>VRNA_UNSTRUCTURED_DOMAIN_MOTIF</name>
        <initializer>16U</initializer>
        <briefdescription>
<para>Flag to indicate ligand binding without additional unbound nucleotides (motif-only) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="210" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__domains__up_1ga3c6be4cce70f1af9e885788856101699" prot="public" static="no">
        <name>VRNA_UNSTRUCTURED_DOMAIN_ALL_LOOPS</name>
        <initializer>                                              (<ref refid="group__domains__up_1gaac911374e86236a51bfd42e1f098eaba" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_EXT_LOOP</ref> | \
                                              <ref refid="group__domains__up_1ga23b610ea9564346c45cc1e2bbb62adf7" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_HP_LOOP</ref> | \
                                              <ref refid="group__domains__up_1gac4a0feccd9654c149203200248c2716b" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_INT_LOOP</ref> | \
                                              <ref refid="group__domains__up_1ga67b80796655e5227a4ed662bfbe398b0" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_MB_LOOP</ref>)</initializer>
        <briefdescription>
<para>Flag to indicate ligand bound to unpiared stretch in any loop (convenience macro) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="216" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__domains__up_1ga0009117b14d29143e8b18ab891f48c2d" prot="public" static="no">
        <type>struct <ref refid="structvrna__unstructured__domain__s" kindref="compound">vrna_unstructured_domain_s</ref></type>
        <definition>typedef struct vrna_unstructured_domain_s vrna_ud_t</definition>
        <argsstring></argsstring>
        <name>vrna_ud_t</name>
        <briefdescription>
<para>Typename for the ligand binding extension data structure <ref refid="structvrna__unstructured__domain__s" kindref="compound">vrna_unstructured_domain_s</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="1" column="0" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unstructured__domains_8h_1a2768620f2cfb9cbf87e99635c85b86e5" prot="public" static="no">
        <type>struct <ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_unstructured_domain_motif_s</ref></type>
        <definition>typedef struct vrna_unstructured_domain_motif_s vrna_ud_motif_t</definition>
        <argsstring></argsstring>
        <name>vrna_ud_motif_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="1" column="0" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__domains__up_1gaec7ac7d3800d3ddd42eced89b43038ea" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* vrna_ud_f) (vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, void *data)</definition>
        <argsstring>)(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, void *data)</argsstring>
        <name>vrna_ud_f</name>
        <briefdescription>
<para>Callback to retrieve binding free energy of a ligand bound to an unpaired sequence segment. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="callbacks_1_callbacks000008"><xreftitle>Notes on Callback Functions</xreftitle><xrefdescription><para><parblock><para>This function will be called to determine the additional energy contribution of a specific unstructured domain, e.g. the binding free energy of some ligand. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The current <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the unstructured domain (5&apos; end) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the unstructured domain (3&apos; end) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The loop context of the unstructured domain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Auxiliary data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The auxiliary energy contribution in deka-cal/mol </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="54" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unstructured__domains_8h_1ad1f755fca9d0ed4c29603bd0b42fe762" prot="public" static="no">
        <type>int()</type>
        <definition>typedef int() vrna_callback_ud_energy(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, void *data)</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, void *data)</argsstring>
        <name>vrna_callback_ud_energy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="65" column="10" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__domains__up_1ga2e9002a489309f2cf59379d8ca6d00f0" prot="public" static="no">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref>(*</type>
        <definition>typedef FLT_OR_DBL(* vrna_ud_exp_f) (vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, void *data)</definition>
        <argsstring>)(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, void *data)</argsstring>
        <name>vrna_ud_exp_f</name>
        <briefdescription>
<para>Callback to retrieve Boltzmann factor of the binding free energy of a ligand bound to an unpaired sequence segment. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="callbacks_1_callbacks000009"><xreftitle>Notes on Callback Functions</xreftitle><xrefdescription><para><parblock><para>This function will be called to determine the additional energy contribution of a specific unstructured domain, e.g. the binding free energy of some ligand (Partition function variant, i.e. the Boltzmann factors instead of actual free energies). </para>
</parblock></para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The current <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the unstructured domain (5&apos; end) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the unstructured domain (3&apos; end) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The loop context of the unstructured domain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Auxiliary data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The auxiliary energy contribution as Boltzmann factor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="85" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unstructured__domains_8h_1afcbb599f1a23645cb95298a967920d96" prot="public" static="no">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref>()</type>
        <definition>typedef FLT_OR_DBL() vrna_callback_ud_exp_energy(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, void *data)</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, void *data)</argsstring>
        <name>vrna_callback_ud_exp_energy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="96" column="10" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__domains__up_1ga6da4dff321fdfaf9742efcd558fa327f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* vrna_ud_production_f) (vrna_fold_compound_t *fc, void *data)</definition>
        <argsstring>)(vrna_fold_compound_t *fc, void *data)</argsstring>
        <name>vrna_ud_production_f</name>
        <briefdescription>
<para>Callback for pre-processing the production rule of the ligand binding to unpaired stretches feature. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="callbacks_1_callbacks000010"><xreftitle>Notes on Callback Functions</xreftitle><xrefdescription><para><parblock><para>The production rule for the unstructured domain grammar extension </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="108" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unstructured__domains_8h_1a3c1c3ac399e4797c14984abb245d4eff" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() vrna_callback_ud_production(vrna_fold_compound_t *fc, void *data)</definition>
        <argsstring>(vrna_fold_compound_t *fc, void *data)</argsstring>
        <name>vrna_callback_ud_production</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="113" column="10" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__domains__up_1ga59dc10fdd4705c87aacaed15a8b1015d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* vrna_ud_exp_production_f) (vrna_fold_compound_t *fc, void *data)</definition>
        <argsstring>)(vrna_fold_compound_t *fc, void *data)</argsstring>
        <name>vrna_ud_exp_production_f</name>
        <briefdescription>
<para>Callback for pre-processing the production rule of the ligand binding to unpaired stretches feature (partition function variant) </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="callbacks_1_callbacks000011"><xreftitle>Notes on Callback Functions</xreftitle><xrefdescription><para><parblock><para>The production rule for the unstructured domain grammar extension (Partition function variant) </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="125" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unstructured__domains_8h_1a78f2e6a1bab36175d0d460dd4f0af9f0" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() vrna_callback_ud_exp_production(vrna_fold_compound_t *fc, void *data)</definition>
        <argsstring>(vrna_fold_compound_t *fc, void *data)</argsstring>
        <name>vrna_callback_ud_exp_production</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="130" column="10" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__domains__up_1ga5ea006f39d44db3ae9481a748889a0a1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* vrna_ud_add_probs_f) (vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, FLT_OR_DBL exp_energy, void *data)</definition>
        <argsstring>)(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, FLT_OR_DBL exp_energy, void *data)</argsstring>
        <name>vrna_ud_add_probs_f</name>
        <briefdescription>
<para>Callback to store/add equilibrium probability for a ligand bound to an unpaired sequence segment. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="callbacks_1_callbacks000012"><xreftitle>Notes on Callback Functions</xreftitle><xrefdescription><para><parblock><para>A callback function to store equilibrium probabilities for the unstructured domain feature </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="142" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unstructured__domains_8h_1a06ea0e5491e4d7ed8066d2e5074cb4c0" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() vrna_callback_ud_probs_add(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, FLT_OR_DBL exp_energy, void *data)</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, FLT_OR_DBL exp_energy, void *data)</argsstring>
        <name>vrna_callback_ud_probs_add</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="155" column="10" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__domains__up_1ga584c32828e8803a32de7c52bdad5c6bd" prot="public" static="no">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref>(*</type>
        <definition>typedef FLT_OR_DBL(* vrna_ud_get_probs_f) (vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, int motif, void *data)</definition>
        <argsstring>)(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, int motif, void *data)</argsstring>
        <name>vrna_ud_get_probs_f</name>
        <briefdescription>
<para>Callback to retrieve equilibrium probability for a ligand bound to an unpaired sequence segment. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="callbacks_1_callbacks000013"><xreftitle>Notes on Callback Functions</xreftitle><xrefdescription><para><parblock><para>A callback function to retrieve equilibrium probabilities for the unstructured domain feature </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="166" column="9" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unstructured__domains_8h_1a8a10bd7abb552ca38d690f909190c936" prot="public" static="no">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref>()</type>
        <definition>typedef FLT_OR_DBL() vrna_callback_ud_probs_get(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, int motif, void *data)</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, int j, unsigned int loop_type, int motif, void *data)</argsstring>
        <name>vrna_callback_ud_probs_get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="179" column="10" bodyfile="ViennaRNA/unstructured_domains.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__domains__up_1ga2039caedf194c5edec794866986d95ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref> *</type>
        <definition>vrna_ud_motif_t* vrna_ud_motifs_centroid</definition>
        <argsstring>(vrna_fold_compound_t *fc, const char *structure)</argsstring>
        <name>vrna_ud_motifs_centroid</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Detect unstructured domains in centroid structure. </para>
        </briefdescription>
        <detaileddescription>
<para>Given a centroid structure and a set of unstructured domains compute the list of unstructured domain motifs present in the centroid. Since we do not explicitly annotate unstructured domain motifs in dot-bracket strings, this function can be used to check for the presence and location of unstructured domain motifs under the assumption that the dot-bracket string is the centroid structure of the equiibrium ensemble.</para>
<para><simplesect kind="see"><para><ref refid="group__centroid__fold_1gaa49ce4fe924f80afbcd2474bf9a86408" kindref="member">vrna_centroid()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The fold_compound data structure with pre-computed equilibrium probabilities and model settings </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The centroid structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of unstructured domain motifs (possibly NULL). The last element terminates the list with <computeroutput>start=0</computeroutput>, <computeroutput>number=-1</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="288" column="1" declfile="ViennaRNA/unstructured_domains.h" declline="288" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__domains__up_1ga980126e9f350b64474b35f20fce2782c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref> *</type>
        <definition>vrna_ud_motif_t* vrna_ud_motifs_MEA</definition>
        <argsstring>(vrna_fold_compound_t *fc, const char *structure, vrna_ep_t *probability_list)</argsstring>
        <name>vrna_ud_motifs_MEA</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type><ref refid="group__struct__utils__plist_1gab9ac98ab55ded9fb90043b024b915aca" kindref="member">vrna_ep_t</ref> *</type>
          <declname>probability_list</declname>
        </param>
        <briefdescription>
<para>Detect unstructured domains in MEA structure. </para>
        </briefdescription>
        <detaileddescription>
<para>Given an MEA structure and a set of unstructured domains compute the list of unstructured domain motifs present in the MEA structure. Since we do not explicitly annotate unstructured domain motifs in dot-bracket strings, this function can be used to check for the presence and location of unstructured domain motifs under the assumption that the dot-bracket string is the MEA structure of the equiibrium ensemble.</para>
<para><simplesect kind="see"><para><ref refid="group__mea__fold_1ga396ec6144c6a74fcbab4cea6b42d76c3" kindref="member">MEA()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The fold_compound data structure with pre-computed equilibrium probabilities and model settings </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The MEA structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probability_list</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of probabilities to extract the MEA structure from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of unstructured domain motifs (possibly NULL). The last element terminates the list with <computeroutput>start=0</computeroutput>, <computeroutput>number=-1</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="314" column="1" declfile="ViennaRNA/unstructured_domains.h" declline="314" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__domains__up_1ga464d086264dd6f45089a65acec4e8c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref> *</type>
        <definition>vrna_ud_motif_t* vrna_ud_motifs_MFE</definition>
        <argsstring>(vrna_fold_compound_t *fc, const char *structure)</argsstring>
        <name>vrna_ud_motifs_MFE</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Detect unstructured domains in MFE structure. </para>
        </briefdescription>
        <detaileddescription>
<para>Given an MFE structure and a set of unstructured domains compute the list of unstructured domain motifs present in the MFE structure. Since we do not explicitly annotate unstructured domain motifs in dot-bracket strings, this function can be used to check for the presence and location of unstructured domain motifs under the assumption that the dot-bracket string is the MFE structure of the equiibrium ensemble.</para>
<para><simplesect kind="see"><para><ref refid="group__mfe__global_1ga5577af664e5b9056b44fa5df29e9befb" kindref="member">vrna_mfe()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The fold_compound data structure with model settings </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The MFE structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of unstructured domain motifs (possibly NULL). The last element terminates the list with <computeroutput>start=0</computeroutput>, <computeroutput>number=-1</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="339" column="1" declfile="ViennaRNA/unstructured_domains.h" declline="339" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__domains__up_1gaf82f92ab38dd65169cce575fc5f52184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ud_add_motif</definition>
        <argsstring>(vrna_fold_compound_t *fc, const char *motif, double motif_en, const char *motif_name, unsigned int loop_type)</argsstring>
        <name>vrna_ud_add_motif</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>motif</declname>
        </param>
        <param>
          <type>double</type>
          <declname>motif_en</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>motif_name</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>loop_type</declname>
        </param>
        <briefdescription>
<para>Add an unstructured domain motif, e.g. for ligand binding. </para>
        </briefdescription>
        <detaileddescription>
<para>This function adds a ligand binding motif and the associated binding free energy to the <ref refid="group__domains__up_1ga0009117b14d29143e8b18ab891f48c2d" kindref="member">vrna_ud_t</ref> attribute of a <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref>. The motif data will then be used in subsequent secondary structure predictions. Multiple calls to this function with different motifs append all additional data to a list of ligands, which all will be evaluated. Ligand motif data can be removed from the <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> again using the <ref refid="group__domains__up_1ga35f92cdc7a7b75a19c46df14b992d517" kindref="member">vrna_ud_remove()</ref> function. The loop type parameter allows one to limit the ligand binding to particular loop type, such as the exterior loop, hairpin loops, interior loops, or multibranch loops.</para>
<para><simplesect kind="see"><para><ref refid="group__domains__up_1gaac911374e86236a51bfd42e1f098eaba" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_EXT_LOOP</ref>, <ref refid="group__domains__up_1ga23b610ea9564346c45cc1e2bbb62adf7" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_HP_LOOP</ref>, <ref refid="group__domains__up_1gac4a0feccd9654c149203200248c2716b" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_INT_LOOP</ref>, <ref refid="group__domains__up_1ga67b80796655e5227a4ed662bfbe398b0" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_MB_LOOP</ref>, <ref refid="group__domains__up_1ga3c6be4cce70f1af9e885788856101699" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_ALL_LOOPS</ref>, <ref refid="group__domains__up_1ga35f92cdc7a7b75a19c46df14b992d517" kindref="member">vrna_ud_remove()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> data structure the ligand motif should be bound to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>motif</parametername>
</parameternamelist>
<parameterdescription>
<para>The sequence motif the ligand binds to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>motif_en</parametername>
</parameternamelist>
<parameterdescription>
<para>The binding free energy of the ligand in kcal/mol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>motif_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name/id of the motif (may be <computeroutput>NULL</computeroutput>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loop_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The loop type the ligand binds to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="368" column="7" declfile="ViennaRNA/unstructured_domains.h" declline="368" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="unstructured__domains_8h_1a40ac78a84bf94a833ed03d59354713b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* vrna_ud_get_motif_size_at</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, unsigned int loop_type)</argsstring>
        <name>vrna_ud_get_motif_size_at</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>loop_type</declname>
        </param>
        <briefdescription>
<para>Get a list of unique motif sizes that start at a certain position within the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="379" column="5" declfile="ViennaRNA/unstructured_domains.h" declline="379" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="unstructured__domains_8h_1a30acf5c42889fb85b227cd04c545cbec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* vrna_ud_get_motifs_at</definition>
        <argsstring>(vrna_fold_compound_t *fc, int i, unsigned int loop_type)</argsstring>
        <name>vrna_ud_get_motifs_at</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>loop_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="385" column="1" declfile="ViennaRNA/unstructured_domains.h" declline="385" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="unstructured__domains_8h_1ad018012ebca08cc3e70513f9a5644652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref> *</type>
        <definition>vrna_ud_motif_t* vrna_ud_detect_motifs</definition>
        <argsstring>(vrna_fold_compound_t *fc, const char *structure)</argsstring>
        <name>vrna_ud_detect_motifs</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="391" column="1" declfile="ViennaRNA/unstructured_domains.h" declline="391" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__domains__up_1ga35f92cdc7a7b75a19c46df14b992d517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ud_remove</definition>
        <argsstring>(vrna_fold_compound_t *fc)</argsstring>
        <name>vrna_ud_remove</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <briefdescription>
<para>Remove ligand binding to unpaired stretches. </para>
        </briefdescription>
        <detaileddescription>
<para>This function removes all ligand motifs that were bound to a <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> using the <ref refid="group__domains__up_1gaf82f92ab38dd65169cce575fc5f52184" kindref="member">vrna_ud_add_motif()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> data structure the ligand motif data should be removed from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000102"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>ud_remove()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.ud_remove()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="405" column="7" declfile="ViennaRNA/unstructured_domains.h" declline="405" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__domains__up_1gafb5dba76a97912e7b09174550015aa98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ud_set_data</definition>
        <argsstring>(vrna_fold_compound_t *fc, void *data, vrna_auxdata_free_f free_cb)</argsstring>
        <name>vrna_ud_set_data</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__fold__compound_1gab4e75b7511179095ef41dc1a8656433a" kindref="member">vrna_auxdata_free_f</ref></type>
          <declname>free_cb</declname>
        </param>
        <briefdescription>
<para>Attach an auxiliary data structure. </para>
        </briefdescription>
        <detaileddescription>
<para>This function binds an arbitrary, auxiliary data structure for user-implemented ligand binding. The optional callback <computeroutput>free_cb</computeroutput> will be passed the bound data structure whenever the <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> is removed from memory to avoid memory leaks.</para>
<para><simplesect kind="see"><para><ref refid="group__domains__up_1gaeaa09aa8b60bc87d3ad92d446cb1b8c0" kindref="member">vrna_ud_set_prod_rule_cb()</ref>, <ref refid="group__domains__up_1ga6518ec8abbeb4126f7f990f21d93a95f" kindref="member">vrna_ud_set_exp_prod_rule_cb()</ref>, <ref refid="group__domains__up_1ga35f92cdc7a7b75a19c46df14b992d517" kindref="member">vrna_ud_remove()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> data structure the auxiliary data structure should be bound to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the auxiliary data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a callback function that free&apos;s memory occupied by <computeroutput>data</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000103"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>ud_set_data()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.ud_set_data()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="424" column="7" declfile="ViennaRNA/unstructured_domains.h" declline="424" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__domains__up_1gaeaa09aa8b60bc87d3ad92d446cb1b8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ud_set_prod_rule_cb</definition>
        <argsstring>(vrna_fold_compound_t *fc, vrna_ud_production_f pre_cb, vrna_ud_f e_cb)</argsstring>
        <name>vrna_ud_set_prod_rule_cb</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type><ref refid="group__domains__up_1ga6da4dff321fdfaf9742efcd558fa327f" kindref="member">vrna_ud_production_f</ref></type>
          <declname>pre_cb</declname>
        </param>
        <param>
          <type><ref refid="group__domains__up_1gaec7ac7d3800d3ddd42eced89b43038ea" kindref="member">vrna_ud_f</ref></type>
          <declname>e_cb</declname>
        </param>
        <briefdescription>
<para>Attach production rule callbacks for free energies computations. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this function to bind a user-implemented grammar extension for unstructured domains.</para>
<para>The callback <computeroutput>e_cb</computeroutput> needs to evaluate the free energy contribution <formula id="75">$f(i,j)$</formula> of the unpaired segment <formula id="76">$[i,j]$</formula>. It will be executed in each of the regular secondary structure production rules. Whenever the callback is passed the <ref refid="group__domains__up_1gaab12b58d59be76446a9f76fad2fe624c" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_MOTIF</ref> flag via its <computeroutput>loop_type</computeroutput> parameter the contribution of any ligand that consecutively binds from position <formula id="30">$i$</formula> to <formula id="77">$j$</formula> (the white box) is requested. Otherwise, the callback usually performs a lookup in the precomputed <computeroutput>B</computeroutput> matrices. Which <computeroutput>B</computeroutput> matrix is addressed will be indicated by the flags <ref refid="group__domains__up_1gaac911374e86236a51bfd42e1f098eaba" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_EXT_LOOP</ref>, <ref refid="group__domains__up_1ga23b610ea9564346c45cc1e2bbb62adf7" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_HP_LOOP</ref> <ref refid="group__domains__up_1gac4a0feccd9654c149203200248c2716b" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_INT_LOOP</ref>, and <ref refid="group__domains__up_1ga67b80796655e5227a4ed662bfbe398b0" kindref="member">VRNA_UNSTRUCTURED_DOMAIN_MB_LOOP</ref>. As their names already imply, they specify exterior loops (<computeroutput>F</computeroutput> production rule), hairpin loops and interior loops (<computeroutput>C</computeroutput> production rule), and multibranch loops (<computeroutput>M</computeroutput> and <computeroutput>M1</computeroutput> production rule).</para>
<para>ligands_up_callback.svg</para>
<para>The <computeroutput>pre_cb</computeroutput> callback will be executed as a pre-processing step right before the regular secondary structure rules. Usually one would use this callback to fill the dynamic programming matrices <computeroutput>U</computeroutput> and preparations of the auxiliary data structure <ref refid="structvrna__unstructured__domain__s_1a8802b1b0512999a9f35202031811ce17" kindref="member">vrna_unstructured_domain_s.data</ref></para>
<para>B_prod_rule.svg</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> data structure the callback will be bound to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pre_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a callback function for the <computeroutput>B</computeroutput> production rule </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a callback function for free energy evaluation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000104"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>ud_set_prod_rule_cb()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.ud_set_prod_rule_cb()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="461" column="6" declfile="ViennaRNA/unstructured_domains.h" declline="461" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__domains__up_1ga6518ec8abbeb4126f7f990f21d93a95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ud_set_exp_prod_rule_cb</definition>
        <argsstring>(vrna_fold_compound_t *fc, vrna_ud_exp_production_f pre_cb, vrna_ud_exp_f exp_e_cb)</argsstring>
        <name>vrna_ud_set_exp_prod_rule_cb</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type><ref refid="group__domains__up_1ga59dc10fdd4705c87aacaed15a8b1015d" kindref="member">vrna_ud_exp_production_f</ref></type>
          <declname>pre_cb</declname>
        </param>
        <param>
          <type><ref refid="group__domains__up_1ga2e9002a489309f2cf59379d8ca6d00f0" kindref="member">vrna_ud_exp_f</ref></type>
          <declname>exp_e_cb</declname>
        </param>
        <briefdescription>
<para>Attach production rule for partition function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is the partition function companion of <ref refid="group__domains__up_1gaeaa09aa8b60bc87d3ad92d446cb1b8c0" kindref="member">vrna_ud_set_prod_rule_cb()</ref>.</para>
<para>Use it to bind callbacks to (i) fill the <computeroutput>U</computeroutput> production rule dynamic programming matrices and/or prepare the <ref refid="structvrna__unstructured__domain__s_1a8802b1b0512999a9f35202031811ce17" kindref="member">vrna_unstructured_domain_s.data</ref>, and (ii) provide a callback to retrieve partition functions for subsegments <formula id="78">$ [i,j] $</formula>.</para>
<para>B_prod_rule.svg</para>
<para>ligands_up_callback.svg</para>
<para><simplesect kind="see"><para><ref refid="group__domains__up_1gaeaa09aa8b60bc87d3ad92d446cb1b8c0" kindref="member">vrna_ud_set_prod_rule_cb()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> data structure the callback will be bound to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pre_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a callback function for the <computeroutput>B</computeroutput> production rule </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp_e_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a callback function that retrieves the partition function for a segment <formula id="76">$[i,j]$</formula> that may be bound by one or more ligands.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000105"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>ud_set_exp_prod_rule_cb()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.ud_set_exp_prod_rule_cb()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="488" column="7" declfile="ViennaRNA/unstructured_domains.h" declline="488" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="unstructured__domains_8h_1a7bec52f06e7a746d88e47cba8c959de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ud_set_prob_cb</definition>
        <argsstring>(vrna_fold_compound_t *fc, vrna_ud_add_probs_f setter, vrna_ud_get_probs_f getter)</argsstring>
        <name>vrna_ud_set_prob_cb</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type><ref refid="group__domains__up_1ga5ea006f39d44db3ae9481a748889a0a1" kindref="member">vrna_ud_add_probs_f</ref></type>
          <declname>setter</declname>
        </param>
        <param>
          <type><ref refid="group__domains__up_1ga584c32828e8803a32de7c52bdad5c6bd" kindref="member">vrna_ud_get_probs_f</ref></type>
          <declname>getter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="wrappers_1_wrappers000106"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>ud_set_prob_cb()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.ud_set_prob_cb()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/unstructured_domains.h" line="493" column="7" declfile="ViennaRNA/unstructured_domains.h" declline="493" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions to modify unstructured domains, e.g. to incorporate ligands binding to unpaired stretches. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="group__domains__up_1ga0009117b14d29143e8b18ab891f48c2d" refkind="member"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_UNSTRUCTURED_DOMAIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_UNSTRUCTURED_DOMAIN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>undef<sp/>DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__unstructured__domain__s" kindref="compound">vrna_unstructured_domain_s</ref><sp/><ref refid="structvrna__unstructured__domain__s" kindref="compound">vrna_ud_t</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_unstructured_domain_motif_s</ref><sp/><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="datastructures_2basic_8h" kindref="compound">ViennaRNA/datastructures/basic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fold__compound_8h" kindref="compound">ViennaRNA/fold_compound.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="utils_2structures_8h" kindref="compound">ViennaRNA/utils/structures.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__domains__up_1gaec7ac7d3800d3ddd42eced89b43038ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__domains__up_1gaec7ac7d3800d3ddd42eced89b43038ea" kindref="member">vrna_ud_f</ref>)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(vrna_callback_ud_energy)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_ud_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group__domains__up_1ga2e9002a489309f2cf59379d8ca6d00f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref><sp/>(*<ref refid="group__domains__up_1ga2e9002a489309f2cf59379d8ca6d00f0" kindref="member">vrna_ud_exp_f</ref>)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref><sp/>(vrna_callback_ud_exp_energy)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_ud_exp_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group__domains__up_1ga6da4dff321fdfaf9742efcd558fa327f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__domains__up_1ga6da4dff321fdfaf9742efcd558fa327f" kindref="member">vrna_ud_production_f</ref>)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(vrna_callback_ud_production)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_ud_production_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="group__domains__up_1ga59dc10fdd4705c87aacaed15a8b1015d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__domains__up_1ga59dc10fdd4705c87aacaed15a8b1015d" kindref="member">vrna_ud_exp_production_f</ref>)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(vrna_callback_ud_exp_production)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_ud_exp_production_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group__domains__up_1ga5ea006f39d44db3ae9481a748889a0a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__domains__up_1ga5ea006f39d44db3ae9481a748889a0a1" kindref="member">vrna_ud_add_probs_f</ref>)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp_energy,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(vrna_callback_ud_probs_add)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp_energy,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_ud_add_probs_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group__domains__up_1ga584c32828e8803a32de7c52bdad5c6bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref><sp/>(*<ref refid="group__domains__up_1ga584c32828e8803a32de7c52bdad5c6bd" kindref="member">vrna_ud_get_probs_f</ref>)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motif,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref><sp/>(vrna_callback_ud_probs_get)(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motif,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_ud_get_probs_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group__domains__up_1gaac911374e86236a51bfd42e1f098eaba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_UNSTRUCTURED_DOMAIN_EXT_LOOP<sp/><sp/><sp/><sp/>1U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="group__domains__up_1ga23b610ea9564346c45cc1e2bbb62adf7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_UNSTRUCTURED_DOMAIN_HP_LOOP<sp/><sp/><sp/><sp/><sp/>2U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="group__domains__up_1gac4a0feccd9654c149203200248c2716b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_UNSTRUCTURED_DOMAIN_INT_LOOP<sp/><sp/><sp/><sp/>4U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="group__domains__up_1ga67b80796655e5227a4ed662bfbe398b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_UNSTRUCTURED_DOMAIN_MB_LOOP<sp/><sp/><sp/><sp/><sp/>8U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="group__domains__up_1gaab12b58d59be76446a9f76fad2fe624c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_UNSTRUCTURED_DOMAIN_MOTIF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>16U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="group__domains__up_1ga3c6be4cce70f1af9e885788856101699" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_UNSTRUCTURED_DOMAIN_ALL_LOOPS<sp/><sp/><sp/>(VRNA_UNSTRUCTURED_DOMAIN_EXT_LOOP<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VRNA_UNSTRUCTURED_DOMAIN_HP_LOOP<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VRNA_UNSTRUCTURED_DOMAIN_INT_LOOP<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VRNA_UNSTRUCTURED_DOMAIN_MB_LOOP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structvrna__unstructured__domain__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__unstructured__domain__s" kindref="compound">vrna_unstructured_domain_s</ref><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/>**********************************</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Keep<sp/>track<sp/>of<sp/>all<sp/>motifs<sp/>added</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/>**********************************</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="structvrna__unstructured__domain__s_1ae17005ef8043aca2fc3864804cd5def6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__unstructured__domain__s_1ae17005ef8043aca2fc3864804cd5def6" kindref="member">uniq_motif_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232" refid="structvrna__unstructured__domain__s_1a2b484b0e19a47145db7055ada8b14159" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>*<ref refid="structvrna__unstructured__domain__s_1a2b484b0e19a47145db7055ada8b14159" kindref="member">uniq_motif_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234" refid="structvrna__unstructured__domain__s_1a5ad34148ea1d2e501f3e02029449546e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__unstructured__domain__s_1a5ad34148ea1d2e501f3e02029449546e" kindref="member">motif_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="structvrna__unstructured__domain__s_1af285436bbdea4436ad2cedec65d48c75" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<ref refid="structvrna__unstructured__domain__s_1af285436bbdea4436ad2cedec65d48c75" kindref="member">motif</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236" refid="structvrna__unstructured__domain__s_1ad061d55ef0b51d304c8dce88ebdbbf78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<ref refid="structvrna__unstructured__domain__s_1ad061d55ef0b51d304c8dce88ebdbbf78" kindref="member">motif_name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237" refid="structvrna__unstructured__domain__s_1a6a9f89ab7d147eb0ffd6cf8d77d178c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>*<ref refid="structvrna__unstructured__domain__s_1a6a9f89ab7d147eb0ffd6cf8d77d178c0" kindref="member">motif_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238" refid="structvrna__unstructured__domain__s_1aae4f0a45419784fb7c244bce2781403d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structvrna__unstructured__domain__s_1aae4f0a45419784fb7c244bce2781403d" kindref="member">motif_en</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239" refid="structvrna__unstructured__domain__s_1a3f0c026cced369ff176a66b2820f2057" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>*<ref refid="structvrna__unstructured__domain__s_1a3f0c026cced369ff176a66b2820f2057" kindref="member">motif_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/>**********************************</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Grammar<sp/>extension<sp/>for<sp/>ligand</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/>*<sp/>binding</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/>**********************************</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="structvrna__unstructured__domain__s_1a23b048105dead59426bfb94b24bcea40" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1ga6da4dff321fdfaf9742efcd558fa327f" kindref="member">vrna_ud_production_f</ref><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__unstructured__domain__s_1a23b048105dead59426bfb94b24bcea40" kindref="member">prod_cb</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251" refid="structvrna__unstructured__domain__s_1a0978a882ffc4afa5005ae9a4cf8a5416" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1ga59dc10fdd4705c87aacaed15a8b1015d" kindref="member">vrna_ud_exp_production_f</ref><sp/><ref refid="structvrna__unstructured__domain__s_1a0978a882ffc4afa5005ae9a4cf8a5416" kindref="member">exp_prod_cb</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252" refid="structvrna__unstructured__domain__s_1a3b837fe5151c790dd6d80fe392d01d2b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1gaec7ac7d3800d3ddd42eced89b43038ea" kindref="member">vrna_ud_f</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__unstructured__domain__s_1a3b837fe5151c790dd6d80fe392d01d2b" kindref="member">energy_cb</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253" refid="structvrna__unstructured__domain__s_1ade77475aef6e1b07353a391aa93bb176" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1ga2e9002a489309f2cf59379d8ca6d00f0" kindref="member">vrna_ud_exp_f</ref><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__unstructured__domain__s_1ade77475aef6e1b07353a391aa93bb176" kindref="member">exp_energy_cb</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="254" refid="structvrna__unstructured__domain__s_1a8802b1b0512999a9f35202031811ce17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structvrna__unstructured__domain__s_1a8802b1b0512999a9f35202031811ce17" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255" refid="structvrna__unstructured__domain__s_1a2c0420f8d87d1f9bdb69a0852e659f48" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__fold__compound_1gab4e75b7511179095ef41dc1a8656433a" kindref="member">vrna_auxdata_free_f</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__unstructured__domain__s_1a2c0420f8d87d1f9bdb69a0852e659f48" kindref="member">free_data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256" refid="structvrna__unstructured__domain__s_1ae96239f2bc0cfa200e2cb29f3289c0d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1ga5ea006f39d44db3ae9481a748889a0a1" kindref="member">vrna_ud_add_probs_f</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__unstructured__domain__s_1ae96239f2bc0cfa200e2cb29f3289c0d2" kindref="member">probs_add</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257" refid="structvrna__unstructured__domain__s_1a358a155ec67451abe8a59a540cb47727" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1ga584c32828e8803a32de7c52bdad5c6bd" kindref="member">vrna_ud_get_probs_f</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__unstructured__domain__s_1a358a155ec67451abe8a59a540cb47727" kindref="member">probs_get</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structvrna__unstructured__domain__motif__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_unstructured_domain_motif_s</ref><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref><sp/>*</highlight></codeline>
<codeline lineno="288" refid="group__domains__up_1ga2039caedf194c5edec794866986d95ec" refkind="member"><highlight class="normal"><ref refid="group__domains__up_1ga2039caedf194c5edec794866986d95ec" kindref="member">vrna_ud_motifs_centroid</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*structure);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref><sp/>*</highlight></codeline>
<codeline lineno="314" refid="group__domains__up_1ga980126e9f350b64474b35f20fce2782c" refkind="member"><highlight class="normal"><ref refid="group__domains__up_1ga980126e9f350b64474b35f20fce2782c" kindref="member">vrna_ud_motifs_MEA</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*structure,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__elem__prob__s" kindref="compound">vrna_ep_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*probability_list);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref><sp/>*</highlight></codeline>
<codeline lineno="339" refid="group__domains__up_1ga464d086264dd6f45089a65acec4e8c21" refkind="member"><highlight class="normal"><ref refid="group__domains__up_1ga464d086264dd6f45089a65acec4e8c21" kindref="member">vrna_ud_motifs_MFE</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*structure);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="group__domains__up_1gaf82f92ab38dd65169cce575fc5f52184" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1gaf82f92ab38dd65169cce575fc5f52184" kindref="member">vrna_ud_add_motif</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*motif,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>motif_en,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*motif_name,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="unstructured__domains_8h_1a40ac78a84bf94a833ed03d59354713b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="unstructured__domains_8h_1a40ac78a84bf94a833ed03d59354713b1" kindref="member">vrna_ud_get_motif_size_at</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="385"><highlight class="normal">vrna_ud_get_motifs_at(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_type);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><ref refid="structvrna__unstructured__domain__motif__s" kindref="compound">vrna_ud_motif_t</ref><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="normal">vrna_ud_detect_motifs(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*structure);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="group__domains__up_1ga35f92cdc7a7b75a19c46df14b992d517" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1ga35f92cdc7a7b75a19c46df14b992d517" kindref="member">vrna_ud_remove</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="group__domains__up_1gafb5dba76a97912e7b09174550015aa98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1gafb5dba76a97912e7b09174550015aa98" kindref="member">vrna_ud_set_data</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fold__compound_1gab4e75b7511179095ef41dc1a8656433a" kindref="member">vrna_auxdata_free_f</ref><sp/>free_cb);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="group__domains__up_1gaeaa09aa8b60bc87d3ad92d446cb1b8c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__domains__up_1gaeaa09aa8b60bc87d3ad92d446cb1b8c0" kindref="member">vrna_ud_set_prod_rule_cb</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__domains__up_1ga6da4dff321fdfaf9742efcd558fa327f" kindref="member">vrna_ud_production_f</ref><sp/>pre_cb,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__domains__up_1gaec7ac7d3800d3ddd42eced89b43038ea" kindref="member">vrna_ud_f</ref><sp/><sp/><sp/><sp/><sp/>e_cb);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="group__domains__up_1ga6518ec8abbeb4126f7f990f21d93a95f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="group__domains__up_1ga6518ec8abbeb4126f7f990f21d93a95f" kindref="member">vrna_ud_set_exp_prod_rule_cb</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__domains__up_1ga59dc10fdd4705c87aacaed15a8b1015d" kindref="member">vrna_ud_exp_production_f</ref><sp/><sp/>pre_cb,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__domains__up_1ga2e9002a489309f2cf59379d8ca6d00f0" kindref="member">vrna_ud_exp_f</ref><sp/><sp/><sp/><sp/><sp/><sp/>exp_e_cb);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="unstructured__domains_8h_1a7bec52f06e7a746d88e47cba8c959de2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="unstructured__domains_8h_1a7bec52f06e7a746d88e47cba8c959de2" kindref="member">vrna_ud_set_prob_cb</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__domains__up_1ga5ea006f39d44db3ae9481a748889a0a1" kindref="member">vrna_ud_add_probs_f</ref><sp/><sp/>setter,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__domains__up_1ga584c32828e8803a32de7c52bdad5c6bd" kindref="member">vrna_ud_get_probs_f</ref><sp/><sp/>getter);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/unstructured_domains.h"/>
  </compounddef>
</doxygen>
