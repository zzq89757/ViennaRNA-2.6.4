<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__alphabet__utils" kind="group">
    <compoundname>alphabet_utils</compoundname>
    <title>Utilities to deal with Nucleotide Alphabets</title>
    <innerfile refid="alphabet_8h">alphabet.h</innerfile>
    <innerfile refid="sequence_8h">sequence.h</innerfile>
    <innerclass refid="structvrna__sequence__s" prot="public">vrna_sequence_s</innerclass>
    <innerclass refid="structvrna__alignment__s" prot="public">vrna_alignment_s</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__alphabet__utils_1ga85cda3fcf5d6bd7ec090d3a96e808609" prot="public" static="no" strong="no">
        <type></type>
        <name>vrna_seq_type_e</name>
        <enumvalue id="group__alphabet__utils_1gga85cda3fcf5d6bd7ec090d3a96e808609ad8682ac290d0dd51022e3b82840e1a74" prot="public">
          <name>VRNA_SEQ_UNKNOWN</name>
          <briefdescription>
<para>Nucleotide sequence represents an Unkown type. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__alphabet__utils_1gga85cda3fcf5d6bd7ec090d3a96e808609ac52309234beaf94e6a3bd1b9b69de9f4" prot="public">
          <name>VRNA_SEQ_RNA</name>
          <briefdescription>
<para>Nucleotide sequence represents an RNA type. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__alphabet__utils_1gga85cda3fcf5d6bd7ec090d3a96e808609a4da1613644c3a3766ef1d6494f271332" prot="public">
          <name>VRNA_SEQ_DNA</name>
          <briefdescription>
<para>Nucleotide sequence represents a DNA type. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A enumerator used in <ref refid="structvrna__sequence__s" kindref="compound">vrna_sequence_s</ref> to distinguish different nucleotide sequences. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="31" column="1" bodyfile="ViennaRNA/sequence.h" bodystart="31" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__alphabet__utils_1gaa35bee3061759495467070b47d0e1f22" prot="public" static="no">
        <type>struct <ref refid="structvrna__sequence__s" kindref="compound">vrna_sequence_s</ref></type>
        <definition>typedef struct vrna_sequence_s vrna_seq_t</definition>
        <argsstring></argsstring>
        <name>vrna_seq_t</name>
        <briefdescription>
<para>Typename for nucleotide sequence representation data structure <ref refid="structvrna__sequence__s" kindref="compound">vrna_sequence_s</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="1" column="0" bodyfile="ViennaRNA/sequence.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__alphabet__utils_1gaf0f600b407c7b49be5e2df462b47d079" prot="public" static="no">
        <type>struct <ref refid="structvrna__alignment__s" kindref="compound">vrna_alignment_s</ref></type>
        <definition>typedef struct vrna_alignment_s vrna_msa_t</definition>
        <argsstring></argsstring>
        <name>vrna_msa_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="1" column="0" bodyfile="ViennaRNA/sequence.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__alphabet__utils_1ga0fe05749df8bae9d2eda9013d6ba5551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int vrna_sequence_length_max</definition>
        <argsstring>(unsigned int options)</argsstring>
        <name>vrna_sequence_length_max</name>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="33" column="1" declfile="ViennaRNA/alphabet.h" declline="33" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga2ee2b98985e6335910f128c81c8f5842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_nucleotide_IUPAC_identity</definition>
        <argsstring>(char a, char b)</argsstring>
        <name>vrna_nucleotide_IUPAC_identity</name>
        <param>
          <type>char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>char</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="37" column="1" declfile="ViennaRNA/alphabet.h" declline="37" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1gafa82673941b3bbb8006e9ca105fa33b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ptypes_prepare</definition>
        <argsstring>(vrna_fold_compound_t *fc, unsigned int options)</argsstring>
        <name>vrna_ptypes_prepare</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="42" column="1" declfile="ViennaRNA/alphabet.h" declline="42" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga51a9e86a5f731f5f2f5584ee67cee4a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* vrna_ptypes</definition>
        <argsstring>(const short *S, vrna_md_t *md)</argsstring>
        <name>vrna_ptypes</name>
        <param>
          <type>const short *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Get an array of the numerical encoding for each possible base pair (i,j) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This array is always indexed in column-wise order, in contrast to previously different indexing between mfe and pf variants!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__utils_1ga89ebc69c52fa0c78c9e1974b0017746b" kindref="member">vrna_idx_col_wise()</ref>, <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="56" column="1" declfile="ViennaRNA/alphabet.h" declline="56" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1gaa49a0ee0a2cbda1c863fa3a169d7bf8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short *</type>
        <definition>short * vrna_seq_encode</definition>
        <argsstring>(const char *sequence, vrna_md_t *md)</argsstring>
        <name>vrna_seq_encode</name>
        <param>
          <type>const char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Get a numerical representation of the nucleotide sequence. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>The input sequence in upper-case letters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> data structure that specifies the conversion type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of integer encodings for each sequence letter (1-based). Position 0 denotes the length of the list</para>
</simplesect>
<xrefsect id="wrappers_1_wrappers000166"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>In the target scripting language, this function is wrapped as overloaded function <computeroutput>seq_encode()</computeroutput> where the last parameter, the <computeroutput>model_details</computeroutput> data structure, is optional. If it is omitted, default model settings are applied, i.e. default nucleotide letter conversion. The wrapped function returns a list/tuple of integer representations of the input sequence. See, e.g.  <verbatim>embed:rst:inline:py:func:`RNA.seq_encode()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="68" column="1" declfile="ViennaRNA/alphabet.h" declline="68" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga3cd79d21d53248ad2634c1c0d43e97d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>short *</type>
        <definition>short* vrna_seq_encode_simple</definition>
        <argsstring>(const char *sequence, vrna_md_t *md)</argsstring>
        <name>vrna_seq_encode_simple</name>
        <param>
          <type>const char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Get a numerical representation of the nucleotide sequence (simple version) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="77" column="1" declfile="ViennaRNA/alphabet.h" declline="77" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1gac12bf00123f88621c9be847b0879c1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_nucleotide_encode</definition>
        <argsstring>(char c, vrna_md_t *md)</argsstring>
        <name>vrna_nucleotide_encode</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Encode a nucleotide character to numerical value. </para>
        </briefdescription>
        <detaileddescription>
<para>This function encodes a nucleotide character to its numerical representation as required by many functions in RNAlib.</para>
<para><simplesect kind="see"><para><ref refid="group__alphabet__utils_1ga48ef585e697be9c8a08ed68c655e29b6" kindref="member">vrna_nucleotide_decode()</ref>, <ref refid="group__alphabet__utils_1gaa49a0ee0a2cbda1c863fa3a169d7bf8d" kindref="member">vrna_seq_encode()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The nucleotide character to encode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>The model details that determine the kind of encoding </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The encoded nucleotide </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="93" column="1" declfile="ViennaRNA/alphabet.h" declline="93" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga48ef585e697be9c8a08ed68c655e29b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char vrna_nucleotide_decode</definition>
        <argsstring>(int enc, vrna_md_t *md)</argsstring>
        <name>vrna_nucleotide_decode</name>
        <param>
          <type>int</type>
          <declname>enc</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Decode a numerical representation of a nucleotide back into nucleotide alphabet. </para>
        </briefdescription>
        <detaileddescription>
<para>This function decodes a numerical representation of a nucleotide character back into nucleotide alphabet</para>
<para><simplesect kind="see"><para><ref refid="group__alphabet__utils_1gac12bf00123f88621c9be847b0879c1fb" kindref="member">vrna_nucleotide_encode()</ref>, <ref refid="group__alphabet__utils_1gaa49a0ee0a2cbda1c863fa3a169d7bf8d" kindref="member">vrna_seq_encode()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enc</parametername>
</parameternamelist>
<parameterdescription>
<para>The encoded nucleotide </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>The model details that determine the kind of decoding </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The decoded nucleotide character </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="109" column="1" declfile="ViennaRNA/alphabet.h" declline="109" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga56dfbd38023d289a3b5daf7fe06ab4d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_aln_encode</definition>
        <argsstring>(const char *sequence, short **S_p, short **s5_p, short **s3_p, char **ss_p, unsigned int **as_p, vrna_md_t *md)</argsstring>
        <name>vrna_aln_encode</name>
        <param>
          <type>const char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>short **</type>
          <declname>S_p</declname>
        </param>
        <param>
          <type>short **</type>
          <declname>s5_p</declname>
        </param>
        <param>
          <type>short **</type>
          <declname>s3_p</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>ss_p</declname>
        </param>
        <param>
          <type>unsigned int **</type>
          <declname>as_p</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="114" column="1" declfile="ViennaRNA/alphabet.h" declline="114" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga629aeca7a1a5d148e2c7e0e5d12299cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int vrna_get_ptype_md</definition>
        <argsstring>(int i, int j, vrna_md_t *md)</argsstring>
        <name>vrna_get_ptype_md</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="124" column="1" declfile="ViennaRNA/alphabet.h" declline="124" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga1cef98562ce6016ed83e38bc15d7b4bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int vrna_get_ptype</definition>
        <argsstring>(int ij, char *ptype)</argsstring>
        <name>vrna_get_ptype</name>
        <param>
          <type>int</type>
          <declname>ij</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="130" column="1" declfile="ViennaRNA/alphabet.h" declline="130" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1gab134b2a70a6933b7f3aada9abdc7b96e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int vrna_get_ptype_window</definition>
        <argsstring>(int i, int j, char **ptype)</argsstring>
        <name>vrna_get_ptype_window</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/alphabet.h" line="135" column="1" declfile="ViennaRNA/alphabet.h" declline="135" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga6018070ab3c3bb711578ff42eca81c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__alphabet__utils_1gaa35bee3061759495467070b47d0e1f22" kindref="member">vrna_seq_t</ref> *</type>
        <definition>vrna_seq_t* vrna_sequence</definition>
        <argsstring>(const char *string, unsigned int options)</argsstring>
        <name>vrna_sequence</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="65" column="1" declfile="ViennaRNA/sequence.h" declline="65" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1gaa10bb891b172e80c303b2d8ef2bb7946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_sequence_add</definition>
        <argsstring>(vrna_fold_compound_t *fc, const char *string, unsigned int options)</argsstring>
        <name>vrna_sequence_add</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="70" column="1" declfile="ViennaRNA/sequence.h" declline="70" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga87f2115e7cf3ed9e66ac077d497a069c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_sequence_remove</definition>
        <argsstring>(vrna_fold_compound_t *fc, unsigned int i)</argsstring>
        <name>vrna_sequence_remove</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="76" column="1" declfile="ViennaRNA/sequence.h" declline="76" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga7d75afad5470ad39656fb4e9f79e21a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_sequence_remove_all</definition>
        <argsstring>(vrna_fold_compound_t *fc)</argsstring>
        <name>vrna_sequence_remove_all</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="81" column="1" declfile="ViennaRNA/sequence.h" declline="81" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga482e89d70cff3b867a93d7ecdba167d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_sequence_prepare</definition>
        <argsstring>(vrna_fold_compound_t *fc)</argsstring>
        <name>vrna_sequence_prepare</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="85" column="1" declfile="ViennaRNA/sequence.h" declline="85" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga545651c2301bde9097c1581321cab1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_sequence_order_update</definition>
        <argsstring>(vrna_fold_compound_t *fc, const unsigned int *order)</argsstring>
        <name>vrna_sequence_order_update</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const unsigned int *</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="89" column="1" declfile="ViennaRNA/sequence.h" declline="89" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__alphabet__utils_1ga8a63f0d8432373027016683a7d678fe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_msa_add</definition>
        <argsstring>(vrna_fold_compound_t *fc, const char **alignment, const char **names, const unsigned char *orientation, const unsigned long long *start, const unsigned long long *genome_size, unsigned int options)</argsstring>
        <name>vrna_msa_add</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>alignment</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>names</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>const unsigned long long *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const unsigned long long *</type>
          <declname>genome_size</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="94" column="1" declfile="ViennaRNA/sequence.h" declline="94" declcolumn="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__alphabet__utils_1ga0c1c7a9244d4a300adbc0c1d81d58ac5" prot="public" static="no">
        <name>VRNA_SEQUENCE_RNA</name>
        <initializer>1U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="24" column="9" bodyfile="ViennaRNA/sequence.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__alphabet__utils_1gac4bc4b1aad71d684a95ee1b2c7ee4db1" prot="public" static="no">
        <name>VRNA_SEQUENCE_DNA</name>
        <initializer>2U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/sequence.h" line="26" column="9" bodyfile="ViennaRNA/sequence.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions to cope with various aspects related to the nucleotide sequence alphabet. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
