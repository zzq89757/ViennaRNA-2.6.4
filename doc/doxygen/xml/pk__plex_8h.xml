<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="pk__plex_8h" kind="file" language="C++">
    <compoundname>pk_plex.h</compoundname>
    <includes refid="fold__compound_8h" local="no">ViennaRNA/fold_compound.h</includes>
    <includedby refid="PKplex_8h" local="no">ViennaRNA/PKplex.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ViennaRNA/params/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ViennaRNA/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="12">
        <label>stdlib.h</label>
      </node>
      <node id="16">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/pk_plex.h</label>
        <link refid="pk__plex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="18">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ViennaRNA/zscore.h</label>
        <link refid="zscore_8h_source"/>
      </node>
      <node id="14">
        <label>ViennaRNA/structured_domains.h</label>
        <link refid="structured__domains_8h"/>
      </node>
      <node id="9">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>ViennaRNA/pk_plex.h</label>
        <link refid="pk__plex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ViennaRNA/PKplex.h</label>
        <link refid="PKplex_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structvrna__pk__plex__result__s" prot="public">vrna_pk_plex_result_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pk__plex_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="16" column="11" bodyfile="ViennaRNA/pk_plex.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__pseudoknots_1gaa3c616a490113feba261bed7a92981eb" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* vrna_pk_plex_score_f) (const short *pt, int start_5, int end_5, int start_3, int end_3, void *data)</definition>
        <argsstring>)(const short *pt, int start_5, int end_5, int start_3, int end_3, void *data)</argsstring>
        <name>vrna_pk_plex_score_f</name>
        <briefdescription>
<para>Pseudoknot loop scoring function prototype. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used to evaluate a formed pseudoknot (PK) interaction in <ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref>. It is supposed to take a PK-free secondary structure as input and coordinates of an additional interaction site. From this data, the energy (penalty) to score the PK loop is derived and returned in decakal/mol. Upon passing zero in any of the interaction site coordinates (<computeroutput>start_5</computeroutput>, <computeroutput>end_5</computeroutput>, <computeroutput>start_3</computeroutput>, <computeroutput>end_3</computeroutput>) or a <emphasis>NULL</emphasis> pointer in <computeroutput>pt</computeroutput>, the function must return a PK loop score. This minimum PK loop score is used in the first phase of the heuristic implemented in <ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref> to assess whether a particular interaction is further taken into account in a later, more thorough evaluation step.</para>
<para>The simplest scoring function would simply return a constant score for any PK loop, no matter what type of loop is formed and how large the loop is. This is the default if <ref refid="group__pseudoknots_1gaa6a5f5e20804ba729134eb8ad0c8da54" kindref="member">vrna_pk_plex_opt_defaults()</ref> or <ref refid="group__pseudoknots_1ga8f224a6aa666fd7444b225f676471992" kindref="member">vrna_pk_plex_opt()</ref> is used to generate options for <ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref>.</para>
<para><simplesect kind="see"><para><ref refid="group__pseudoknots_1ga7209e5212f611aa1c06b1609da696d35" kindref="member">vrna_pk_plex_opt_fun()</ref>, <ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure (without pseudoknot) in pair table notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_5</parametername>
</parameternamelist>
<parameterdescription>
<para>The start coordinate of the 5&apos; site of the pseudoknot interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_5</parametername>
</parameternamelist>
<parameterdescription>
<para>The end coordinate of the 5&apos; site of the pseudoknot interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_3</parametername>
</parameternamelist>
<parameterdescription>
<para>The start coordinate of the 3&apos; site of the pseudoknot interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_3</parametername>
</parameternamelist>
<parameterdescription>
<para>The end coordinate of the 3&apos; site of the pseudoknot interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>An arbitrary data structure passed from the calling function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The energy (penalty) of the resulting pseudoknot </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="58" column="9" bodyfile="ViennaRNA/pk_plex.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pseudoknots_1ga7c413e55ee5117ef87193461241319c3" prot="public" static="no">
        <type>int()</type>
        <definition>typedef int() vrna_callback_pk_plex_score(const short *pt, int start_5, int end_5, int start_3, int end_3, void *data)</definition>
        <argsstring>(const short *pt, int start_5, int end_5, int start_3, int end_3, void *data)</argsstring>
        <name>vrna_callback_pk_plex_score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="71" column="10" bodyfile="ViennaRNA/pk_plex.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" prot="public" static="no">
        <type>struct vrna_pk_plex_option_s *</type>
        <definition>typedef struct vrna_pk_plex_option_s* vrna_pk_plex_opt_t</definition>
        <argsstring></argsstring>
        <name>vrna_pk_plex_opt_t</name>
        <briefdescription>
<para>RNA PKplex options object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pseudoknots_1gaa6a5f5e20804ba729134eb8ad0c8da54" kindref="member">vrna_pk_plex_opt_defaults()</ref>, <ref refid="group__pseudoknots_1ga8f224a6aa666fd7444b225f676471992" kindref="member">vrna_pk_plex_opt()</ref>, <ref refid="group__pseudoknots_1ga7209e5212f611aa1c06b1609da696d35" kindref="member">vrna_pk_plex_opt_fun()</ref>, <ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref>, <ref refid="group__pseudoknots_1gaa3c616a490113feba261bed7a92981eb" kindref="member">vrna_pk_plex_score_f</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="80" column="36" bodyfile="ViennaRNA/pk_plex.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pseudoknots_1ga4b505034ccee4de966519afe8b3c120f" prot="public" static="no">
        <type>struct <ref refid="structvrna__pk__plex__result__s" kindref="compound">vrna_pk_plex_result_s</ref></type>
        <definition>typedef struct vrna_pk_plex_result_s vrna_pk_plex_t</definition>
        <argsstring></argsstring>
        <name>vrna_pk_plex_t</name>
        <briefdescription>
<para>Convenience typedef for results of the RNA PKplex prediction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>#vrna_pk_plex_results_s, <ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="80" column="36" bodyfile="ViennaRNA/pk_plex.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__pseudoknots_1ga4b505034ccee4de966519afe8b3c120f" kindref="member">vrna_pk_plex_t</ref> *</type>
        <definition>vrna_pk_plex_t* vrna_pk_plex</definition>
        <argsstring>(vrna_fold_compound_t *fc, const int **accessibility, vrna_pk_plex_opt_t options)</argsstring>
        <name>vrna_pk_plex</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>accessibility</declname>
        </param>
        <param>
          <type><ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref></type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Predict Pseudoknot interactions in terms of a two-step folding process. </para>
        </briefdescription>
        <detaileddescription>
<para>Computes simple pseudoknot interactions according to the PKplex algorithm. This simple heuristic first compiles a list of potential interaction sites that may form a pseudoknot. The resulting candidate interactions are then fixed and an PK-free MFE structure for the remainder of the sequence is computed.</para>
<para>The <computeroutput>accessibility</computeroutput> argument is a list of opening energies for potential interaction sites. It is used in the first step of the algorithm to identify potential interactions. Upon passing <emphasis>NULL</emphasis>, the opening energies are determined automatically based on the current model settings.</para>
<para>Depending on the <computeroutput>options</computeroutput>, the function can return the MFE (incl. PK loops) or suboptimal structures within an energy band around the MFE. The PK loop is internally scored by a scoring function that in the simplest cases assigns a constant value for each PK loop. More complicated scoring functions can be passed as well, see <ref refid="group__pseudoknots_1gaa3c616a490113feba261bed7a92981eb" kindref="member">vrna_pk_plex_score_f</ref> and <ref refid="group__pseudoknots_1ga7209e5212f611aa1c06b1609da696d35" kindref="member">vrna_pk_plex_opt_fun()</ref>.</para>
<para>The function returns <emphasis>NULL</emphasis> on any error. Otherwise, a list of structures and interaction coordinates with corresponding energy contributions is returned. If no PK-interaction that satisfies the options is found, the list only consists of the PK-free MFE structure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>fold compound with the input sequence and model settings </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accessibility</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of opening energies for the implemented heuristic (maybe <emphasis>NULL</emphasis>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref> options data structure that determines the algorithm parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of potentially pseudoknotted structures (Last element in the list indicated by <emphasis>NULL</emphasis> value in <ref refid="structvrna__pk__plex__result__s_1a31fe3dea3cb3799621cd111ab3e31629" kindref="member">vrna_pk_plex_result_s.structure</ref>) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="139" column="1" declfile="ViennaRNA/pk_plex.h" declline="139" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__pseudoknots_1gaf5d94fd4c79d75b0a91b6abb18dbd09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int **</type>
        <definition>int** vrna_pk_plex_accessibility</definition>
        <argsstring>(const char *sequence, unsigned int unpaired, double cutoff)</argsstring>
        <name>vrna_pk_plex_accessibility</name>
        <param>
          <type>const char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>unpaired</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cutoff</declname>
        </param>
        <briefdescription>
<para>Obtain a list of opening energies suitable for PKplex computations. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>The RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unpaired</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of unpaired nucleotides, i.e. length of interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cutoff</parametername>
</parameternamelist>
<parameterdescription>
<para>A cutoff value for unpaired probabilities </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Opening energies as required for <ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="155" column="1" declfile="ViennaRNA/pk_plex.h" declline="155" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__pseudoknots_1gaa6a5f5e20804ba729134eb8ad0c8da54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref></type>
        <definition>vrna_pk_plex_opt_t vrna_pk_plex_opt_defaults</definition>
        <argsstring>(void)</argsstring>
        <name>vrna_pk_plex_opt_defaults</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Default options for PKplex algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref>, <ref refid="group__pseudoknots_1ga8f224a6aa666fd7444b225f676471992" kindref="member">vrna_pk_plex_opt()</ref>, <ref refid="group__pseudoknots_1ga7209e5212f611aa1c06b1609da696d35" kindref="member">vrna_pk_plex_opt_fun()</ref></para>
</simplesect>
<simplesect kind="return"><para>An options data structure suitabe for PKplex computations </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="168" column="1" declfile="ViennaRNA/pk_plex.h" declline="168" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__pseudoknots_1ga8f224a6aa666fd7444b225f676471992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref></type>
        <definition>vrna_pk_plex_opt_t vrna_pk_plex_opt</definition>
        <argsstring>(unsigned int delta, unsigned int max_interaction_length, int pk_penalty)</argsstring>
        <name>vrna_pk_plex_opt</name>
        <param>
          <type>unsigned int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max_interaction_length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pk_penalty</declname>
        </param>
        <briefdescription>
<para>Simple options for PKplex algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref>, <ref refid="group__pseudoknots_1gaa6a5f5e20804ba729134eb8ad0c8da54" kindref="member">vrna_pk_plex_opt_defaults()</ref>, <ref refid="group__pseudoknots_1ga7209e5212f611aa1c06b1609da696d35" kindref="member">vrna_pk_plex_opt_fun()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of energy band around MFE for suboptimal results in dekacal/mol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_interaction_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum length of interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pk_penalty</parametername>
</parameternamelist>
<parameterdescription>
<para>Energy constant to score the PK forming loop </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An options data structure suitabe for PKplex computations </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="182" column="1" declfile="ViennaRNA/pk_plex.h" declline="182" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__pseudoknots_1ga7209e5212f611aa1c06b1609da696d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref></type>
        <definition>vrna_pk_plex_opt_t vrna_pk_plex_opt_fun</definition>
        <argsstring>(unsigned int delta, unsigned int max_interaction_length, vrna_pk_plex_score_f scoring_function, void *scoring_data)</argsstring>
        <name>vrna_pk_plex_opt_fun</name>
        <param>
          <type>unsigned int</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max_interaction_length</declname>
        </param>
        <param>
          <type><ref refid="group__pseudoknots_1gaa3c616a490113feba261bed7a92981eb" kindref="member">vrna_pk_plex_score_f</ref></type>
          <declname>scoring_function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>scoring_data</declname>
        </param>
        <briefdescription>
<para>Simple options for PKplex algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex()</ref>, <ref refid="group__pseudoknots_1gaa6a5f5e20804ba729134eb8ad0c8da54" kindref="member">vrna_pk_plex_opt_defaults()</ref>, <ref refid="group__pseudoknots_1ga8f224a6aa666fd7444b225f676471992" kindref="member">vrna_pk_plex_opt()</ref>, <ref refid="group__pseudoknots_1gaa3c616a490113feba261bed7a92981eb" kindref="member">vrna_pk_plex_score_f</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of energy band around MFE for suboptimal results in dekacal/mol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_interaction_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum length of interaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scoring_function</parametername>
</parameternamelist>
<parameterdescription>
<para>Energy evaluating function to score the PK forming loop </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scoring_data</parametername>
</parameternamelist>
<parameterdescription>
<para>An arbitrary data structure passed to the scoring function (maybe <emphasis>NUL</emphasis>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An options data structure suitabe for PKplex computations </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/pk_plex.h" line="199" column="1" declfile="ViennaRNA/pk_plex.h" declline="199" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Heuristics for two-step pseudoknot forming interaction predictions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_PK_PLEX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_PK_PLEX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>undef<sp/>DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__pseudoknots_1gaa3c616a490113feba261bed7a92981eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__pseudoknots_1gaa3c616a490113feba261bed7a92981eb" kindref="member">vrna_pk_plex_score_f</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*pt,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_5,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_5,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_3,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_3,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(vrna_callback_pk_plex_score)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*pt,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_5,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_5,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_3,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_3,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_pk_plex_score_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">vrna_pk_plex_option_s<sp/>*<ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__pk__plex__result__s" kindref="compound">vrna_pk_plex_result_s</ref><sp/><ref refid="structvrna__pk__plex__result__s" kindref="compound">vrna_pk_plex_t</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fold__compound_8h" kindref="compound">ViennaRNA/fold_compound.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structvrna__pk__plex__result__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__pk__plex__result__s" kindref="compound">vrna_pk_plex_result_s</ref><sp/>{</highlight></codeline>
<codeline lineno="97" refid="structvrna__pk__plex__result__s_1a31fe3dea3cb3799621cd111ab3e31629" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structvrna__pk__plex__result__s_1a31fe3dea3cb3799621cd111ab3e31629" kindref="member">structure</ref>;<sp/></highlight></codeline>
<codeline lineno="98" refid="structvrna__pk__plex__result__s_1a1a28780d20573e1e8e74137f74ebaa8b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1a1a28780d20573e1e8e74137f74ebaa8b" kindref="member">energy</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="structvrna__pk__plex__result__s_1ad229d6898ffdb195b6442defdec35171" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1ad229d6898ffdb195b6442defdec35171" kindref="member">dGpk</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="structvrna__pk__plex__result__s_1abb999a7a5a80f71d57a801d83901a596" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1abb999a7a5a80f71d57a801d83901a596" kindref="member">dGint</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="structvrna__pk__plex__result__s_1ad5c142b580ce0db3e2bb4ec7faa9cbdd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1ad5c142b580ce0db3e2bb4ec7faa9cbdd" kindref="member">dG1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="structvrna__pk__plex__result__s_1a3aaccf208713fe56d9a27d65062989cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1a3aaccf208713fe56d9a27d65062989cb" kindref="member">dG2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="structvrna__pk__plex__result__s_1aeebb3e74fb4390b23aefaa50b98e4672" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1aeebb3e74fb4390b23aefaa50b98e4672" kindref="member">start_5</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="structvrna__pk__plex__result__s_1ae2a8ca7f4769a6595617649adbf6284f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1ae2a8ca7f4769a6595617649adbf6284f" kindref="member">end_5</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="structvrna__pk__plex__result__s_1a364296aea56d85179a1576d83e5a4826" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1a364296aea56d85179a1576d83e5a4826" kindref="member">start_3</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="structvrna__pk__plex__result__s_1a69f49f082cb148f0fbd5dd4fe84ab9bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structvrna__pk__plex__result__s_1a69f49f082cb148f0fbd5dd4fe84ab9bb" kindref="member">end_3</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="structvrna__pk__plex__result__s" kindref="compound">vrna_pk_plex_t</ref><sp/>*</highlight></codeline>
<codeline lineno="139" refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" refkind="member"><highlight class="normal"><ref refid="group__pseudoknots_1ga2ac2baaedebca166f0000b7e61067a7c" kindref="member">vrna_pk_plex</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**accessibility,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref><sp/><sp/><sp/>options);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**</highlight></codeline>
<codeline lineno="155" refid="group__pseudoknots_1gaf5d94fd4c79d75b0a91b6abb18dbd09c" refkind="member"><highlight class="normal"><ref refid="group__pseudoknots_1gaf5d94fd4c79d75b0a91b6abb18dbd09c" kindref="member">vrna_pk_plex_accessibility</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*sequence,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__struct__utils__deprecated_1gadd2f952597e02d66e1116a9d11d252d6" kindref="member">unpaired</ref>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cutoff);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref></highlight></codeline>
<codeline lineno="168" refid="group__pseudoknots_1gaa6a5f5e20804ba729134eb8ad0c8da54" refkind="member"><highlight class="normal"><ref refid="group__pseudoknots_1gaa6a5f5e20804ba729134eb8ad0c8da54" kindref="member">vrna_pk_plex_opt_defaults</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref></highlight></codeline>
<codeline lineno="182" refid="group__pseudoknots_1ga8f224a6aa666fd7444b225f676471992" refkind="member"><highlight class="normal"><ref refid="group__pseudoknots_1ga8f224a6aa666fd7444b225f676471992" kindref="member">vrna_pk_plex_opt</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_interaction_length,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pk_penalty);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="group__pseudoknots_1gab5afc6c459727dbdc37257711f062090" kindref="member">vrna_pk_plex_opt_t</ref></highlight></codeline>
<codeline lineno="199" refid="group__pseudoknots_1ga7209e5212f611aa1c06b1609da696d35" refkind="member"><highlight class="normal"><ref refid="group__pseudoknots_1ga7209e5212f611aa1c06b1609da696d35" kindref="member">vrna_pk_plex_opt_fun</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_interaction_length,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pseudoknots_1gaa3c616a490113feba261bed7a92981eb" kindref="member">vrna_pk_plex_score_f</ref><sp/><sp/>scoring_function,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scoring_data);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/pk_plex.h"/>
  </compounddef>
</doxygen>
