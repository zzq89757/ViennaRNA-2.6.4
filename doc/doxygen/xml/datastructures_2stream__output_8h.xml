<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="datastructures_2stream__output_8h" kind="file" language="C++">
    <compoundname>stream_output.h</compoundname>
    <includedby refid="stream__output_8h" local="no">ViennaRNA/stream_output.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>ViennaRNA/stream_output.h</label>
        <link refid="stream__output_8h"/>
      </node>
      <node id="1">
        <label>ViennaRNA/datastructures/stream_output.h</label>
        <link refid="datastructures_2stream__output_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="datastructures_2stream__output_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="16" column="11" bodyfile="ViennaRNA/datastructures/stream_output.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" prot="public" static="no">
        <type>struct vrna_ordered_stream_s *</type>
        <definition>typedef struct vrna_ordered_stream_s* vrna_ostream_t</definition>
        <argsstring></argsstring>
        <name>vrna_ostream_t</name>
        <briefdescription>
<para>An ordered output stream structure with unordered insert capabilities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="33" column="36" bodyfile="ViennaRNA/datastructures/stream_output.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__buffer__utils_1ga587647e75f26bdf830b4a5f291e5fdc2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* vrna_stream_output_f) (void *auxdata, unsigned int i, void *data)</definition>
        <argsstring>)(void *auxdata, unsigned int i, void *data)</argsstring>
        <name>vrna_stream_output_f</name>
        <briefdescription>
<para>Ordered stream processing callback. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback will be processed in sequential order as soon as sequential data in the output stream becomes available.</para>
<para><simplesect kind="note"><para>The callback must also release the memory occupied by the data passed since the stream will lose any reference to it after the callback has been executed.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>auxdata</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer for all calls, as provided by the second argument to <ref refid="group__buffer__utils_1ga64421b7126cc1b17a472e6f5e878ba9a" kindref="member">vrna_ostream_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The index number of the data passed to <computeroutput>data</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A block of data ready for processing </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="49" column="9" bodyfile="ViennaRNA/datastructures/stream_output.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__buffer__utils_1ga4adb94338a6f0a1a451e03c1bdac0d9d" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() vrna_callback_stream_output(void *auxdata, unsigned int i, void *data)</definition>
        <argsstring>(void *auxdata, unsigned int i, void *data)</argsstring>
        <name>vrna_callback_stream_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="55" column="10" bodyfile="ViennaRNA/datastructures/stream_output.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__buffer__utils_1ga64421b7126cc1b17a472e6f5e878ba9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref></type>
        <definition>vrna_ostream_t vrna_ostream_init</definition>
        <argsstring>(vrna_stream_output_f output, void *auxdata)</argsstring>
        <name>vrna_ostream_init</name>
        <param>
          <type><ref refid="group__buffer__utils_1ga587647e75f26bdf830b4a5f291e5fdc2" kindref="member">vrna_stream_output_f</ref></type>
          <declname>output</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>auxdata</declname>
        </param>
        <briefdescription>
<para>Get an initialized ordered output stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__buffer__utils_1gaf813ec90e1446ba82c89f9a39688a3b3" kindref="member">vrna_ostream_free()</ref>, <ref refid="group__buffer__utils_1gaebca91932705d71bcbf00bd8d82bd7c8" kindref="member">vrna_ostream_request()</ref>, <ref refid="group__buffer__utils_1ga6253c42abdeaf3b41a38204865e1f0f7" kindref="member">vrna_ostream_provide()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback function that processes and releases data in the stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auxdata</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to auxiliary data passed as first argument to the <computeroutput>output</computeroutput> callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An initialized ordered output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="68" column="1" declfile="ViennaRNA/datastructures/stream_output.h" declline="68" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__buffer__utils_1gaf813ec90e1446ba82c89f9a39688a3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ostream_free</definition>
        <argsstring>(vrna_ostream_t dat)</argsstring>
        <name>vrna_ostream_free</name>
        <param>
          <type><ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref></type>
          <declname>dat</declname>
        </param>
        <briefdescription>
<para>Free an initialized ordered output stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__buffer__utils_1ga64421b7126cc1b17a472e6f5e878ba9a" kindref="member">vrna_ostream_init()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dat</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream for which occupied memory should be free&apos;d </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="80" column="1" declfile="ViennaRNA/datastructures/stream_output.h" declline="80" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__buffer__utils_1ga4e60fb5548f6b56003860aa046a74ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_ostream_threadsafe</definition>
        <argsstring>(void)</argsstring>
        <name>vrna_ostream_threadsafe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="84" column="1" declfile="ViennaRNA/datastructures/stream_output.h" declline="84" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__buffer__utils_1gaebca91932705d71bcbf00bd8d82bd7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ostream_request</definition>
        <argsstring>(vrna_ostream_t dat, unsigned int num)</argsstring>
        <name>vrna_ostream_request</name>
        <param>
          <type><ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref></type>
          <declname>dat</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Request index in ordered output stream. </para>
        </briefdescription>
        <detaileddescription>
<para>This function must be called prior to <ref refid="group__buffer__utils_1ga6253c42abdeaf3b41a38204865e1f0f7" kindref="member">vrna_ostream_provide()</ref> to indicate that data associted with a certain index number is expected to be inserted into the stream in the future.</para>
<para><simplesect kind="see"><para><ref refid="group__buffer__utils_1ga64421b7126cc1b17a472e6f5e878ba9a" kindref="member">vrna_ostream_init()</ref>, <ref refid="group__buffer__utils_1ga6253c42abdeaf3b41a38204865e1f0f7" kindref="member">vrna_ostream_provide()</ref>, <ref refid="group__buffer__utils_1gaf813ec90e1446ba82c89f9a39688a3b3" kindref="member">vrna_ostream_free()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dat</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream for which the index is requested </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to request data for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="100" column="1" declfile="ViennaRNA/datastructures/stream_output.h" declline="100" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__buffer__utils_1ga6253c42abdeaf3b41a38204865e1f0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_ostream_provide</definition>
        <argsstring>(vrna_ostream_t dat, unsigned int i, void *data)</argsstring>
        <name>vrna_ostream_provide</name>
        <param>
          <type><ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref></type>
          <declname>dat</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Provide output stream data for a particular index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The index data is provided for must have been requested using <ref refid="group__buffer__utils_1gaebca91932705d71bcbf00bd8d82bd7c8" kindref="member">vrna_ostream_request()</ref> beforehand.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__buffer__utils_1gaebca91932705d71bcbf00bd8d82bd7c8" kindref="member">vrna_ostream_request()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dat</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream for which data is provided </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the provided data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data provided </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/datastructures/stream_output.h" line="117" column="1" declfile="ViennaRNA/datastructures/stream_output.h" declline="117" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An implementation of a buffered, ordered stream output data structure. </para>
    </briefdescription>
    <detaileddescription>
<para>, </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_STREAM_OUTPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_STREAM_OUTPUT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>undef<sp/>DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">vrna_ordered_stream_s<sp/>*<ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__buffer__utils_1ga587647e75f26bdf830b4a5f291e5fdc2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__buffer__utils_1ga587647e75f26bdf830b4a5f291e5fdc2" kindref="member">vrna_stream_output_f</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*auxdata,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(vrna_callback_stream_output)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*auxdata,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_stream_output_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref></highlight></codeline>
<codeline lineno="68" refid="group__buffer__utils_1ga64421b7126cc1b17a472e6f5e878ba9a" refkind="member"><highlight class="normal"><ref refid="group__buffer__utils_1ga64421b7126cc1b17a472e6f5e878ba9a" kindref="member">vrna_ostream_init</ref>(<ref refid="group__buffer__utils_1ga587647e75f26bdf830b4a5f291e5fdc2" kindref="member">vrna_stream_output_f</ref><sp/>output,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*auxdata);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group__buffer__utils_1gaf813ec90e1446ba82c89f9a39688a3b3" refkind="member"><highlight class="normal"><ref refid="group__buffer__utils_1gaf813ec90e1446ba82c89f9a39688a3b3" kindref="member">vrna_ostream_free</ref>(<ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref><sp/>dat);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">vrna_ostream_threadsafe(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__buffer__utils_1gaebca91932705d71bcbf00bd8d82bd7c8" refkind="member"><highlight class="normal"><ref refid="group__buffer__utils_1gaebca91932705d71bcbf00bd8d82bd7c8" kindref="member">vrna_ostream_request</ref>(<ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref><sp/>dat,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>num);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="group__buffer__utils_1ga6253c42abdeaf3b41a38204865e1f0f7" refkind="member"><highlight class="normal"><ref refid="group__buffer__utils_1ga6253c42abdeaf3b41a38204865e1f0f7" kindref="member">vrna_ostream_provide</ref>(<ref refid="group__buffer__utils_1ga8da189552af21ab6e4e88bdcc240870c" kindref="member">vrna_ostream_t</ref><sp/>dat,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/datastructures/stream_output.h"/>
  </compounddef>
</doxygen>
