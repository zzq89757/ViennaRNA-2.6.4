<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RNAstruct_8h" kind="file" language="C++">
    <compoundname>RNAstruct.h</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="RNAstruct_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="13" column="11" bodyfile="ViennaRNA/RNAstruct.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__struct__utils__deprecated_1gaa100f7d3ce0ad4f527a61c5764ebf277" prot="public" static="no">
        <name>STRUC</name>
        <initializer>2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="40" column="9" bodyfile="ViennaRNA/RNAstruct.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__struct__utils__deprecated_1ga365a3fad38b21ca8606cb556f2896218" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int loop_size[2000]</definition>
        <argsstring>[2000]</argsstring>
        <name>loop_size</name>
        <briefdescription>
<para>contains a list of all loop sizes. loop_size[0] contains the number of external bases. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="170" column="13" declfile="ViennaRNA/RNAstruct.h" declline="170" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="group__struct__utils__deprecated_1ga3fce53616c021cbc724fc80b8c1ebeb5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int helix_size[2000]</definition>
        <argsstring>[2000]</argsstring>
        <name>helix_size</name>
        <briefdescription>
<para>contains a list of all stack sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="176" column="13" declfile="ViennaRNA/RNAstruct.h" declline="176" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="group__struct__utils__deprecated_1ga0518a287aa4a870508cea819029778ab" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int loop_degree[2000]</definition>
        <argsstring>[2000]</argsstring>
        <name>loop_degree</name>
        <briefdescription>
<para>contains the corresponding list of loop degrees. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="182" column="13" declfile="ViennaRNA/RNAstruct.h" declline="182" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="group__struct__utils__deprecated_1ga439fcb9f8d4f9f4d2227fde5fbfecb30" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int loops</definition>
        <argsstring></argsstring>
        <name>loops</name>
        <briefdescription>
<para>contains the number of loops ( and therefore of stacks ). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="188" column="13" declfile="ViennaRNA/RNAstruct.h" declline="188" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="group__struct__utils__deprecated_1gadd2f952597e02d66e1116a9d11d252d6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int unpaired</definition>
        <argsstring></argsstring>
        <name>unpaired</name>
        <briefdescription>
<para>contains the number of unpaired bases. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="194" column="13" declfile="ViennaRNA/RNAstruct.h" declline="194" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="group__struct__utils__deprecated_1ga6341cbb704924824e0236c1dce791032" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int pairs</definition>
        <argsstring></argsstring>
        <name>pairs</name>
        <briefdescription>
<para>contains the number of base pairs in the last parsed structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="200" column="13" declfile="ViennaRNA/RNAstruct.h" declline="200" declcolumn="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga07b7e90e712559a1992fba3ac6d21bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* b2HIT</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>b2HIT</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Converts the full structure from bracket notation to the HIT notation including root. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000131"><xreftitle>Deprecated</xreftitle><xrefdescription><para>See <ref refid="group__struct__utils__tree_1ga56551ab7da64933a7230d29430f40cfe" kindref="member">vrna_db_to_tree_string()</ref> and <ref refid="group__struct__utils__tree_1ga3ad5609bc93ef20034c3ab989365c1f0" kindref="member">VRNA_STRUCTURE_TREE_HIT</ref> for a replacement</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="53" column="7" declfile="ViennaRNA/RNAstruct.h" declline="53" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga9c80d92391f2833549a8b6dac92233f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* b2C</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>b2C</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Converts the full structure from bracket notation to the a coarse grained notation using the &apos;H&apos; &apos;B&apos; &apos;I&apos; &apos;M&apos; and &apos;R&apos; identifiers. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000132"><xreftitle>Deprecated</xreftitle><xrefdescription><para>See <ref refid="group__struct__utils__tree_1ga56551ab7da64933a7230d29430f40cfe" kindref="member">vrna_db_to_tree_string()</ref> and <ref refid="group__struct__utils__tree_1ga549e259a963d77e2d5b7e14083fc016e" kindref="member">VRNA_STRUCTURE_TREE_SHAPIRO_SHORT</ref> for a replacement</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="67" column="7" declfile="ViennaRNA/RNAstruct.h" declline="67" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga5cd2feb367feeacad0c03cb7ddba5f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* b2Shapiro</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>b2Shapiro</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Converts the full structure from bracket notation to the <emphasis>weighted</emphasis> coarse grained notation using the &apos;H&apos; &apos;B&apos; &apos;I&apos; &apos;M&apos; &apos;S&apos; &apos;E&apos; and &apos;R&apos; identifiers. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000133"><xreftitle>Deprecated</xreftitle><xrefdescription><para>See <ref refid="group__struct__utils__tree_1ga56551ab7da64933a7230d29430f40cfe" kindref="member">vrna_db_to_tree_string()</ref> and <ref refid="group__struct__utils__tree_1ga91f2e3a3a502d5445fd7fe5983a5fe92" kindref="member">VRNA_STRUCTURE_TREE_SHAPIRO_WEIGHT</ref> for a replacement</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="82" column="7" declfile="ViennaRNA/RNAstruct.h" declline="82" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga880d33066dd95441e5fbb73c57ed1c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* add_root</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>add_root</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Adds a root to an un-rooted tree in any except bracket notation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="92" column="7" declfile="ViennaRNA/RNAstruct.h" declline="92" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1gabe3d815b420dc4553bfb23511198b4c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* expand_Shapiro</definition>
        <argsstring>(const char *coarse)</argsstring>
        <name>expand_Shapiro</name>
        <param>
          <type>const char *</type>
          <declname>coarse</declname>
        </param>
        <briefdescription>
<para>Inserts missing &apos;S&apos; identifiers in unweighted coarse grained structures as obtained from <ref refid="group__struct__utils__deprecated_1ga9c80d92391f2833549a8b6dac92233f0" kindref="member">b2C()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coarse</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="103" column="7" declfile="ViennaRNA/RNAstruct.h" declline="103" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga78d73cd54a068ef2812812771cdddc6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* expand_Full</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>expand_Full</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Convert the full structure from bracket notation to the expanded notation including root. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="115" column="7" declfile="ViennaRNA/RNAstruct.h" declline="115" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga260c4b622093b76a883bf96628280de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* unexpand_Full</definition>
        <argsstring>(const char *ffull)</argsstring>
        <name>unexpand_Full</name>
        <param>
          <type>const char *</type>
          <declname>ffull</declname>
        </param>
        <briefdescription>
<para>Restores the bracket notation from an expanded full or HIT tree, that is any tree using only identifiers &apos;U&apos; &apos;P&apos; and &apos;R&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ffull</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="126" column="7" declfile="ViennaRNA/RNAstruct.h" declline="126" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga09a80253ac7b6bae606871ba7c6e5136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* unweight</definition>
        <argsstring>(const char *wcoarse)</argsstring>
        <name>unweight</name>
        <param>
          <type>const char *</type>
          <declname>wcoarse</declname>
        </param>
        <briefdescription>
<para>Strip weights from any weighted tree. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wcoarse</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="136" column="7" declfile="ViennaRNA/RNAstruct.h" declline="136" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga1054c4477d53b31d79d4cb132100e87a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unexpand_aligned_F</definition>
        <argsstring>(char *align[2])</argsstring>
        <name>unexpand_aligned_F</name>
        <param>
          <type>char *</type>
          <declname>align</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
<para>Converts two aligned structures in expanded notation. </para>
        </briefdescription>
        <detaileddescription>
<para>Takes two aligned structures as produced by <ref refid="treedist_8h_1a3b21f1925f7071f46d93431a835217bb" kindref="member">tree_edit_distance()</ref> function back to bracket notation with &apos;_&apos; as the gap character. The result overwrites the input.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="149" column="9" declfile="ViennaRNA/RNAstruct.h" declline="149" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__struct__utils__deprecated_1ga3c79042e6bf6f01706bf30ec9e69e8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_structure</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>parse_structure</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Collects a statistic of structure elements of the full structure in bracket notation. </para>
        </briefdescription>
        <detaileddescription>
<para>The function writes to the following global variables: <ref refid="group__struct__utils__deprecated_1ga365a3fad38b21ca8606cb556f2896218" kindref="member">loop_size</ref>, <ref refid="group__struct__utils__deprecated_1ga0518a287aa4a870508cea819029778ab" kindref="member">loop_degree</ref>, <ref refid="group__struct__utils__deprecated_1ga3fce53616c021cbc724fc80b8c1ebeb5" kindref="member">helix_size</ref>, <ref refid="group__struct__utils__deprecated_1ga439fcb9f8d4f9f4d2227fde5fbfecb30" kindref="member">loops</ref>, <ref refid="group__struct__utils__deprecated_1ga6341cbb704924824e0236c1dce791032" kindref="member">pairs</ref>, <ref refid="group__struct__utils__deprecated_1gadd2f952597e02d66e1116a9d11d252d6" kindref="member">unpaired</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/RNAstruct.h" line="162" column="9" declfile="ViennaRNA/RNAstruct.h" declline="162" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parsing and Coarse Graining of Structures. </para>
    </briefdescription>
    <detaileddescription>
<para>Example: <verbatim>*   .((..(((...)))..((..)))).   is the bracket or full tree
*   becomes expanded:   - expand_Full() -
*   ((U)(((U)(U)((((U)(U)(U)P)P)P)(U)(U)(((U)(U)P)P)P)P)(U)R)
*   HIT:                - b2HIT() -
*   ((U1)((U2)((U3)P3)(U2)((U2)P2)P2)(U1)R)
*   Coarse:             - b2C() -
*   ((H)((H)M)R)
*   becomes expanded:   - expand_Shapiro() -
*   (((((H)S)((H)S)M)S)R)
*   weighted Shapiro:   - b2Shapiro() -
*   ((((((H3)S3)((H2)S2)M4)S2)E2)R)
*  </verbatim> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_RNASTRUCT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_RNASTRUCT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRUC<sp/><sp/><sp/><sp/><sp/>2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__struct__utils__deprecated_1ga07b7e90e712559a1992fba3ac6d21bbd" kindref="member">b2HIT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure),</highlight></codeline>
<codeline lineno="53" refid="group__struct__utils__deprecated_1ga07b7e90e712559a1992fba3ac6d21bbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_db_to_tree_string()<sp/>instead!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Full<sp/><sp/><sp/>-&gt;<sp/>HIT<sp/><sp/><sp/><sp/>[incl.<sp/>root]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__struct__utils__deprecated_1ga9c80d92391f2833549a8b6dac92233f0" kindref="member">b2C</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure),</highlight></codeline>
<codeline lineno="67" refid="group__struct__utils__deprecated_1ga9c80d92391f2833549a8b6dac92233f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_db_to_tree_string()<sp/>instead!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Full<sp/><sp/><sp/>-&gt;<sp/>Coarse<sp/>[incl.<sp/>root]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__struct__utils__deprecated_1ga5cd2feb367feeacad0c03cb7ddba5f10" kindref="member">b2Shapiro</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure),</highlight></codeline>
<codeline lineno="82" refid="group__struct__utils__deprecated_1ga5cd2feb367feeacad0c03cb7ddba5f10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_db_to_tree_string()<sp/>instead!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Full<sp/>-&gt;<sp/>weighted<sp/>Shapiro<sp/>[i.r.]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__struct__utils__deprecated_1ga880d33066dd95441e5fbb73c57ed1c3e" kindref="member">add_root</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure),</highlight></codeline>
<codeline lineno="92" refid="group__struct__utils__deprecated_1ga880d33066dd95441e5fbb73c57ed1c3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>{Tree}<sp/>-&gt;<sp/>({Tree}R)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__struct__utils__deprecated_1gabe3d815b420dc4553bfb23511198b4c6" kindref="member">expand_Shapiro</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*coarse),</highlight></codeline>
<codeline lineno="103" refid="group__struct__utils__deprecated_1gabe3d815b420dc4553bfb23511198b4c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_db_to_tree_string()<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>add<sp/>S<sp/>for<sp/>stacks<sp/>to<sp/>coarse<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__struct__utils__deprecated_1ga78d73cd54a068ef2812812771cdddc6f" kindref="member">expand_Full</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure),</highlight></codeline>
<codeline lineno="115" refid="group__struct__utils__deprecated_1ga78d73cd54a068ef2812812771cdddc6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_db_to_tree_string()<sp/>instead!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Full<sp/><sp/><sp/>-&gt;<sp/>FFull<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__struct__utils__deprecated_1ga260c4b622093b76a883bf96628280de1" kindref="member">unexpand_Full</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ffull),</highlight></codeline>
<codeline lineno="126" refid="group__struct__utils__deprecated_1ga260c4b622093b76a883bf96628280de1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_tree_string_to_db()<sp/>instead!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FFull<sp/><sp/>-&gt;<sp/>Full<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__struct__utils__deprecated_1ga09a80253ac7b6bae606871ba7c6e5136" kindref="member">unweight</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wcoarse),</highlight></codeline>
<codeline lineno="136" refid="group__struct__utils__deprecated_1ga09a80253ac7b6bae606871ba7c6e5136" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_tree_string_unweight()<sp/>instead!&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>weights<sp/>from<sp/>coarse<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="group__struct__utils__deprecated_1ga1054c4477d53b31d79d4cb132100e87a" kindref="member">unexpand_aligned_F</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*align[2]),</highlight></codeline>
<codeline lineno="149" refid="group__struct__utils__deprecated_1ga1054c4477d53b31d79d4cb132100e87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="group__struct__utils__deprecated_1ga3c79042e6bf6f01706bf30ec9e69e8ac" kindref="member">parse_structure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure),</highlight></codeline>
<codeline lineno="162" refid="group__struct__utils__deprecated_1ga3c79042e6bf6f01706bf30ec9e69e8ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>structure<sp/>statistics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__struct__utils__deprecated_1ga365a3fad38b21ca8606cb556f2896218" kindref="member">loop_size</ref>[STRUC],</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>sizes<sp/>of<sp/>a<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__struct__utils__deprecated_1ga3fce53616c021cbc724fc80b8c1ebeb5" kindref="member">helix_size</ref>[STRUC],</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>helix<sp/>sizes<sp/>of<sp/>a<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__struct__utils__deprecated_1ga0518a287aa4a870508cea819029778ab" kindref="member">loop_degree</ref>[STRUC],</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>degrees<sp/>of<sp/>a<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__struct__utils__deprecated_1ga439fcb9f8d4f9f4d2227fde5fbfecb30" kindref="member">loops</ref>,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>n<sp/>of<sp/>loops<sp/>and<sp/>stacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__struct__utils__deprecated_1gadd2f952597e02d66e1116a9d11d252d6" kindref="member">unpaired</ref>,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__struct__utils__deprecated_1ga6341cbb704924824e0236c1dce791032" kindref="member">pairs</ref>,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>n<sp/>of<sp/>unpaired<sp/>digits<sp/>and<sp/>pairs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/RNAstruct.h"/>
  </compounddef>
</doxygen>
