<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cofold_8h" kind="file" language="C++">
    <compoundname>cofold.h</compoundname>
    <includes refid="datastructures_2basic_8h" local="no">ViennaRNA/datastructures/basic.h</includes>
    <includes refid="params_2basic_8h" local="no">ViennaRNA/params/basic.h</includes>
    <includes refid="mfe_8h" local="no">ViennaRNA/mfe.h</includes>
    <incdepgraph>
      <node id="5">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ViennaRNA/params/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ViennaRNA/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ViennaRNA/zscore.h</label>
        <link refid="zscore_8h_source"/>
      </node>
      <node id="15">
        <label>ViennaRNA/structured_domains.h</label>
        <link refid="structured__domains_8h"/>
      </node>
      <node id="10">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/cofold.h</label>
        <link refid="cofold_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdio.h</label>
      </node>
      <node id="20">
        <label>ViennaRNA/mfe.h</label>
        <link refid="mfe_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cofold_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="17" column="11" bodyfile="ViennaRNA/cofold.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mfe__global__deprecated_1gabc8517f22cfe70595ee81fc837910d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float cofold</definition>
        <argsstring>(const char *sequence, char *structure)</argsstring>
        <name>cofold</name>
        <param>
          <type>const char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Compute the minimum free energy of two interacting RNA molecules. </para>
        </briefdescription>
        <detaileddescription>
<para>The code is analog to the <ref refid="group__mfe__global__deprecated_1gaadafcb0f140795ae62e5ca027e335a9b" kindref="member">fold()</ref> function. If <ref refid="fold__vars_8h_1ab9b2c3a37a5516614c06d0ab54b97cda" kindref="member">cut_point</ref> ==-1 results should be the same as with <ref refid="group__mfe__global__deprecated_1gaadafcb0f140795ae62e5ca027e335a9b" kindref="member">fold()</ref>.</para>
<para><xrefsect id="deprecated_1_deprecated000030"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="group__mfe__global_1gaeefffa2179cebb6b8b30cb6ac52de2cd" kindref="member">vrna_mfe_dimer()</ref> instead</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>The two sequences concatenated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>Will hold the barcket dot structure of the dimer molecule </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum free energy of the structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="45" column="19" declfile="ViennaRNA/cofold.h" declline="45" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__mfe__global__deprecated_1ga7612cfeeb1b793f1e4179b1eb53df1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float cofold_par</definition>
        <argsstring>(const char *string, char *structure, vrna_param_t *parameters, int is_constrained)</argsstring>
        <name>cofold_par</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_constrained</declname>
        </param>
        <briefdescription>
<para>Compute the minimum free energy of two interacting RNA molecules. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000031"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="group__mfe__global_1gaeefffa2179cebb6b8b30cb6ac52de2cd" kindref="member">vrna_mfe_dimer()</ref> instead</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="59" column="19" declfile="ViennaRNA/cofold.h" declline="59" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__mfe__global__deprecated_1gaafb33d7473eb9af9d1b168ca8761c41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_co_arrays</definition>
        <argsstring>(void)</argsstring>
        <name>free_co_arrays</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Free memory occupied by <ref refid="group__mfe__global__deprecated_1gabc8517f22cfe70595ee81fc837910d52" kindref="member">cofold()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000032"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function will only free memory allocated by a prior call of <ref refid="group__mfe__global__deprecated_1gabc8517f22cfe70595ee81fc837910d52" kindref="member">cofold()</ref> or <ref refid="group__mfe__global__deprecated_1ga7612cfeeb1b793f1e4179b1eb53df1f3" kindref="member">cofold_par()</ref>. See <ref refid="group__mfe__global_1gaeefffa2179cebb6b8b30cb6ac52de2cd" kindref="member">vrna_mfe_dimer()</ref> for how to use the new API</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="note"><para>folding matrices now reside in the fold compound, and should be free&apos;d there</para>
</simplesect>
<simplesect kind="see"><para>vrna_fc_destroy(), <ref refid="group__mfe__global_1gaeefffa2179cebb6b8b30cb6ac52de2cd" kindref="member">vrna_mfe_dimer()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="75" column="18" declfile="ViennaRNA/cofold.h" declline="75" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__mfe__global__deprecated_1ga4fcbf34e77b99bfbb2333d2ab0c41a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_cofold_params</definition>
        <argsstring>(void)</argsstring>
        <name>update_cofold_params</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Recalculate parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000033"><xreftitle>Deprecated</xreftitle><xrefdescription><para>See <ref refid="group__energy__parameters_1ga9202b803da6f5364f91db89ab3d8b048" kindref="member">vrna_params_subst()</ref> for an alternative using the new API</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="85" column="18" declfile="ViennaRNA/cofold.h" declline="85" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__mfe__global__deprecated_1gaaadbd28b4e428710529ab4098fdacad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_cofold_params_par</definition>
        <argsstring>(vrna_param_t *parameters)</argsstring>
        <name>update_cofold_params_par</name>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Recalculate parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000034"><xreftitle>Deprecated</xreftitle><xrefdescription><para>See <ref refid="group__energy__parameters_1ga9202b803da6f5364f91db89ab3d8b048" kindref="member">vrna_params_subst()</ref> for an alternative using the new API</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="95" column="18" declfile="ViennaRNA/cofold.h" declline="95" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__mfe__global__deprecated_1ga5f5bf4df35d0554f6ace9579f8744c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void export_cofold_arrays_gq</definition>
        <argsstring>(int **f5_p, int **c_p, int **fML_p, int **fM1_p, int **fc_p, int **ggg_p, int **indx_p, char **ptype_p)</argsstring>
        <name>export_cofold_arrays_gq</name>
        <param>
          <type>int **</type>
          <declname>f5_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>c_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fML_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fM1_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fc_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>ggg_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>indx_p</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>ptype_p</declname>
        </param>
        <briefdescription>
<para>Export the arrays of partition function cofold (with gquadruplex support) </para>
        </briefdescription>
        <detaileddescription>
<para>Export the cofold arrays for use e.g. in the concentration Computations or suboptimal secondary structure backtracking</para>
<para><xrefsect id="deprecated_1_deprecated000035"><xreftitle>Deprecated</xreftitle><xrefdescription><para>folding matrices now reside within the fold compound. Thus, this function will only work in conjunction with a prior call to <ref refid="group__mfe__global__deprecated_1gabc8517f22cfe70595ee81fc837910d52" kindref="member">cofold()</ref> or <ref refid="group__mfe__global__deprecated_1ga7612cfeeb1b793f1e4179b1eb53df1f3" kindref="member">cofold_par()</ref></para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__mfe__global_1gaeefffa2179cebb6b8b30cb6ac52de2cd" kindref="member">vrna_mfe_dimer()</ref> for the new API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f5_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;f5&apos; array, i.e. array conatining best free energy in interval [1,j] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;c&apos; array, i.e. array containing best free energy in interval [i,j] given that i pairs with j </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fML_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;M&apos; array, i.e. array containing best free energy in interval [i,j] for any multiloop segment with at least one stem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fM1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;M1&apos; array, i.e. array containing best free energy in interval [i,j] for multiloop segment with exactly one stem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fc_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;fc&apos; array, i.e. array ... </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ggg_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;ggg&apos; array, i.e. array containing best free energy of a gquadruplex delimited by [i,j] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indx_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the indexing array used for accessing the energy matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the ptype array containing the base pair types for each possibility (i,j) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="128" column="18" declfile="ViennaRNA/cofold.h" declline="128" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__mfe__global__deprecated_1ga5cb6b59983f1f74ccc00b9b9c4e84482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void export_cofold_arrays</definition>
        <argsstring>(int **f5_p, int **c_p, int **fML_p, int **fM1_p, int **fc_p, int **indx_p, char **ptype_p)</argsstring>
        <name>export_cofold_arrays</name>
        <param>
          <type>int **</type>
          <declname>f5_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>c_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fML_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fM1_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fc_p</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>indx_p</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>ptype_p</declname>
        </param>
        <briefdescription>
<para>Export the arrays of partition function cofold. </para>
        </briefdescription>
        <detaileddescription>
<para>Export the cofold arrays for use e.g. in the concentration Computations or suboptimal secondary structure backtracking</para>
<para><xrefsect id="deprecated_1_deprecated000036"><xreftitle>Deprecated</xreftitle><xrefdescription><para>folding matrices now reside within the <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref>. Thus, this function will only work in conjunction with a prior call to the deprecated functions <ref refid="group__mfe__global__deprecated_1gabc8517f22cfe70595ee81fc837910d52" kindref="member">cofold()</ref> or <ref refid="group__mfe__global__deprecated_1ga7612cfeeb1b793f1e4179b1eb53df1f3" kindref="member">cofold_par()</ref></para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__mfe__global_1gaeefffa2179cebb6b8b30cb6ac52de2cd" kindref="member">vrna_mfe_dimer()</ref> for the new API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f5_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;f5&apos; array, i.e. array conatining best free energy in interval [1,j] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;c&apos; array, i.e. array containing best free energy in interval [i,j] given that i pairs with j </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fML_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;M&apos; array, i.e. array containing best free energy in interval [i,j] for any multiloop segment with at least one stem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fM1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;M1&apos; array, i.e. array containing best free energy in interval [i,j] for multiloop segment with exactly one stem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fc_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the &apos;fc&apos; array, i.e. array ... </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indx_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the indexing array used for accessing the energy matrices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype_p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the ptype array containing the base pair types for each possibility (i,j) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="158" column="18" declfile="ViennaRNA/cofold.h" declline="158" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__mfe__global__deprecated_1gafee0c32208aa2ac97338b6e3fbad7fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize_cofold</definition>
        <argsstring>(int length)</argsstring>
        <name>initialize_cofold</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allocate arrays for folding <xrefsect id="deprecated_1_deprecated000037"><xreftitle>Deprecated</xreftitle><xrefdescription><para>{This function is obsolete and will be removed soon!}</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/cofold.h" line="169" column="18" declfile="ViennaRNA/cofold.h" declline="169" declcolumn="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>MFE implementations for RNA-RNA interaction. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_COFOLD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_COFOLD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="datastructures_2basic_8h" kindref="compound">ViennaRNA/datastructures/basic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="params_2basic_8h" kindref="compound">ViennaRNA/params/basic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mfe_8h" kindref="compound">ViennaRNA/mfe.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VRNA_DISABLE_BACKWARD_COMPATIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mfe__global__deprecated_1gabc8517f22cfe70595ee81fc837910d52" kindref="member">cofold</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*sequence,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*structure),</highlight></codeline>
<codeline lineno="45" refid="group__mfe__global__deprecated_1gabc8517f22cfe70595ee81fc837910d52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_cofold()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mfe__global__deprecated_1ga7612cfeeb1b793f1e4179b1eb53df1f3" kindref="member">cofold_par</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*structure,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__param__s" kindref="compound">vrna_param_t</ref><sp/><sp/>*parameters,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_constrained),</highlight></codeline>
<codeline lineno="59" refid="group__mfe__global__deprecated_1ga7612cfeeb1b793f1e4179b1eb53df1f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>new<sp/>API<sp/>and<sp/>vrna_mfe_dimer()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mfe__global__deprecated_1gaafb33d7473eb9af9d1b168ca8761c41a" kindref="member">free_co_arrays</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="75" refid="group__mfe__global__deprecated_1gaafb33d7473eb9af9d1b168ca8761c41a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>function<sp/>is<sp/>obsolete&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mfe__global__deprecated_1ga4fcbf34e77b99bfbb2333d2ab0c41a57" kindref="member">update_cofold_params</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="85" refid="group__mfe__global__deprecated_1ga4fcbf34e77b99bfbb2333d2ab0c41a57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>function<sp/>is<sp/>obsolete&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mfe__global__deprecated_1gaaadbd28b4e428710529ab4098fdacad3" kindref="member">update_cofold_params_par</ref>(<ref refid="structvrna__param__s" kindref="compound">vrna_param_t</ref><sp/>*parameters),</highlight></codeline>
<codeline lineno="95" refid="group__mfe__global__deprecated_1gaaadbd28b4e428710529ab4098fdacad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>new<sp/>API<sp/>with<sp/>vrna_fold_compound_t<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mfe__global__deprecated_1ga5f5bf4df35d0554f6ace9579f8744c48" kindref="member">export_cofold_arrays_gq</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>**f5_p,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>**c_p,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>**fML_p,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>**fM1_p,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>**fc_p,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>**ggg_p,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>**indx_p,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**ptype_p),</highlight></codeline>
<codeline lineno="128" refid="group__mfe__global__deprecated_1ga5f5bf4df35d0554f6ace9579f8744c48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>new<sp/>API<sp/>with<sp/>vrna_fold_compound_t<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mfe__global__deprecated_1ga5cb6b59983f1f74ccc00b9b9c4e84482" kindref="member">export_cofold_arrays</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>**f5_p,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>**c_p,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>**fML_p,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>**fM1_p,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>**fc_p,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>**indx_p,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>**ptype_p),</highlight></codeline>
<codeline lineno="158" refid="group__mfe__global__deprecated_1ga5cb6b59983f1f74ccc00b9b9c4e84482" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>new<sp/>API<sp/>with<sp/>vrna_fold_compound_t<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mfe__global__deprecated_1gafee0c32208aa2ac97338b6e3fbad7fa5" kindref="member">initialize_cofold</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length),</highlight></codeline>
<codeline lineno="169" refid="group__mfe__global__deprecated_1gafee0c32208aa2ac97338b6e3fbad7fa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>function<sp/>is<sp/>obsolete&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/cofold.h"/>
  </compounddef>
</doxygen>
