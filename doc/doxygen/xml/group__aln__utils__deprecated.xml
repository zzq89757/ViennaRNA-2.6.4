<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__aln__utils__deprecated" kind="group">
    <compoundname>aln_utils_deprecated</compoundname>
    <title>Deprecated Interface for Multiple Sequence Alignment Utilities</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__aln__utils__deprecated_1ga7b61662a793ad0aa1ea38efc3a5baacc" prot="public" static="no">
        <type>struct <ref refid="structvrna__pinfo__s" kindref="compound">vrna_pinfo_s</ref></type>
        <definition>typedef struct vrna_pinfo_s pair_info</definition>
        <argsstring></argsstring>
        <name>pair_info</name>
        <briefdescription>
<para>Old typename of <ref refid="structvrna__pinfo__s" kindref="compound">vrna_pinfo_s</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000181"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__aln__utils_1ga6660dfca23debee7306e0cd53341263f" kindref="member">vrna_pinfo_t</ref> instead!</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="1" column="0" bodyfile="ViennaRNA/utils/alignments.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__aln__utils__deprecated_1ga1cc88b4df842ca73b4ac0cb5e71c696a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_clustal</definition>
        <argsstring>(FILE *clust, char *AlignedSeqs[], char *names[])</argsstring>
        <name>read_clustal</name>
        <param>
          <type>FILE *</type>
          <declname>clust</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>AlignedSeqs</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>names</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="297" column="6" declfile="ViennaRNA/utils/alignments.h" declline="297" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__aln__utils__deprecated_1ga8e8b805faaf6dee2feb4cbc38ba48e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* consensus</definition>
        <argsstring>(const char *AS[])</argsstring>
        <name>consensus</name>
        <param>
          <type>const char *</type>
          <declname>AS</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="304" column="7" declfile="ViennaRNA/utils/alignments.h" declline="304" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__aln__utils__deprecated_1gab8c6d748a1b44e516759233879dadcc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* consens_mis</definition>
        <argsstring>(const char *AS[])</argsstring>
        <name>consens_mis</name>
        <param>
          <type>const char *</type>
          <declname>AS</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="311" column="7" declfile="ViennaRNA/utils/alignments.h" declline="311" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__aln__utils__deprecated_1ga4a17a26c6cfc1ad5bf4c3d035292a275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* get_ungapped_sequence</definition>
        <argsstring>(const char *seq)</argsstring>
        <name>get_ungapped_sequence</name>
        <param>
          <type>const char *</type>
          <declname>seq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="318" column="7" declfile="ViennaRNA/utils/alignments.h" declline="318" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__aln__utils__deprecated_1gaa2d600be90844094ec145ea14a314d2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_mpi</definition>
        <argsstring>(char *Alseq[], int n_seq, int length, int *mini)</argsstring>
        <name>get_mpi</name>
        <param>
          <type>char *</type>
          <declname>Alseq</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>n_seq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mini</declname>
        </param>
        <briefdescription>
<para>Get the mean pairwise identity in steps from ?to?(ident) </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000182"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__aln__utils_1gade5a1f2d16e7fd9a57b37d8514f08e8e" kindref="member">vrna_aln_mpi()</ref> as a replacement</para>
</xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Alseq</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_seq</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of sequences in the alignment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the alignment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mini</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mean pairwise identity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="336" column="6" declfile="ViennaRNA/utils/alignments.h" declline="336" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__aln__utils__deprecated_1gaa3e40277c837d6f7603afe319884c786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void encode_ali_sequence</definition>
        <argsstring>(const char *sequence, short *S, short *s5, short *s3, char *ss, unsigned short *as, int circ)</argsstring>
        <name>encode_ali_sequence</name>
        <param>
          <type>const char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s5</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>s3</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>ss</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>as</declname>
        </param>
        <param>
          <type>int</type>
          <declname>circ</declname>
        </param>
        <briefdescription>
<para>Get arrays with encoded sequence of the alignment. </para>
        </briefdescription>
        <detaileddescription>
<para>this function assumes that in S, S5, s3, ss and as enough space is already allocated (size must be at least sequence length+2)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>The gapped sequence from the alignment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array that holds encoded sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s5</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array that holds the next base 5&apos; of alignment position i </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s3</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array that holds the next base 3&apos; of alignment position i </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ss</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>as</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>circ</parametername>
</parameternamelist>
<parameterdescription>
<para>assume the molecules to be circular instead of linear (circ=0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="366" column="7" declfile="ViennaRNA/utils/alignments.h" declline="366" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__aln__utils__deprecated_1ga8a560930f7f2582cc3967723a86cfdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alloc_sequence_arrays</definition>
        <argsstring>(const char **sequences, short ***S, short ***S5, short ***S3, unsigned short ***a2s, char ***Ss, int circ)</argsstring>
        <name>alloc_sequence_arrays</name>
        <param>
          <type>const char **</type>
          <declname>sequences</declname>
        </param>
        <param>
          <type>short ***</type>
          <declname>S</declname>
        </param>
        <param>
          <type>short ***</type>
          <declname>S5</declname>
        </param>
        <param>
          <type>short ***</type>
          <declname>S3</declname>
        </param>
        <param>
          <type>unsigned short ***</type>
          <declname>a2s</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>Ss</declname>
        </param>
        <param>
          <type>int</type>
          <declname>circ</declname>
        </param>
        <briefdescription>
<para>Allocate memory for sequence array used to deal with aligned sequences. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that these arrays will also be initialized according to the sequence alignment given</para>
<para><simplesect kind="see"><para><ref refid="group__aln__utils__deprecated_1ga298a420a8c879202e2617b3f724fde38" kindref="member">free_sequence_arrays()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sequences</parametername>
</parameternamelist>
<parameterdescription>
<para>The aligned sequences </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array of encoded sequences </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S5</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array that contains the next 5&apos; nucleotide of a sequence position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S3</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array that contains the next 3&apos; nucleotide of a sequence position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2s</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array that contains the alignment to sequence position mapping </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ss</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array that contains the ungapped sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>circ</parametername>
</parameternamelist>
<parameterdescription>
<para>assume the molecules to be circular instead of linear (circ=0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="392" column="8" declfile="ViennaRNA/utils/alignments.h" declline="392" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__aln__utils__deprecated_1ga298a420a8c879202e2617b3f724fde38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_sequence_arrays</definition>
        <argsstring>(unsigned int n_seq, short ***S, short ***S5, short ***S3, unsigned short ***a2s, char ***Ss)</argsstring>
        <name>free_sequence_arrays</name>
        <param>
          <type>unsigned int</type>
          <declname>n_seq</declname>
        </param>
        <param>
          <type>short ***</type>
          <declname>S</declname>
        </param>
        <param>
          <type>short ***</type>
          <declname>S5</declname>
        </param>
        <param>
          <type>short ***</type>
          <declname>S3</declname>
        </param>
        <param>
          <type>unsigned short ***</type>
          <declname>a2s</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>Ss</declname>
        </param>
        <briefdescription>
<para>Free the memory of the sequence arrays used to deal with aligned sequences. </para>
        </briefdescription>
        <detaileddescription>
<para>This function frees the memory previously allocated with <ref refid="group__aln__utils__deprecated_1ga8a560930f7f2582cc3967723a86cfdfa" kindref="member">alloc_sequence_arrays()</ref></para>
<para><simplesect kind="see"><para><ref refid="group__aln__utils__deprecated_1ga8a560930f7f2582cc3967723a86cfdfa" kindref="member">alloc_sequence_arrays()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n_seq</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of aligned sequences </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array of encoded sequences </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S5</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array that contains the next 5&apos; nucleotide of a sequence position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S3</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array that contains the next 3&apos; nucleotide of a sequence position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2s</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array that contains the alignment to sequence position mapping </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ss</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the array that contains the ungapped sequence </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/alignments.h" line="416" column="8" declfile="ViennaRNA/utils/alignments.h" declline="416" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
