<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RNAturtle_8h" kind="file" language="C++">
    <compoundname>RNAturtle.h</compoundname>
    <includedby refid="layouts_8h" local="yes">ViennaRNA/plotting/layouts.h</includedby>
    <invincdepgraph>
      <node id="6">
        <label>ViennaRNA/plot_structure.h</label>
        <link refid="plot__structure_8h"/>
      </node>
      <node id="4">
        <label>ViennaRNA/PS_dot.h</label>
        <link refid="PS__dot_8h"/>
      </node>
      <node id="2">
        <label>ViennaRNA/plotting/layouts.h</label>
        <link refid="layouts_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/plotting/RNApuzzler/RNAturtle.h</label>
        <link refid="RNAturtle_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ViennaRNA/plotting/structures.h</label>
        <link refid="plotting_2structures_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ViennaRNA/plot_layouts.h</label>
        <link refid="plot__layouts_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_plot_coords_turtle</definition>
        <argsstring>(const char *structure, float **x, float **y, double **arc_coords)</argsstring>
        <name>vrna_plot_coords_turtle</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>arc_coords</declname>
        </param>
        <briefdescription>
<para>Compute nucleotide coordinates for secondary structure plot using the <emphasis>RNAturtle</emphasis> algorithm <verbatim>embed:rst:inline :cite:p:`wiegreffe:2018` </verbatim>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function basically is a wrapper to <ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref> that passes the <computeroutput>plot_type</computeroutput> <ref refid="group__plot__layout__utils_1ga382c1c5c0b1943500aa4bb55b7658a33" kindref="member">VRNA_PLOT_TYPE_TURTLE</ref>.</para>
<para>Here is a simple example how to use this function, assuming variable <computeroutput>structure</computeroutput> contains a valid dot-bracket string: <programlisting filename=".c"><codeline><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>*x,<sp/>*y;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*arcs;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle</ref>(structure,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;arcs))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;all<sp/>fine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;some<sp/>failure<sp/>occured!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">free(x);</highlight></codeline>
<codeline><highlight class="normal">free(y);</highlight></codeline>
<codeline><highlight class="normal">free(arcs);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="note"><para>On success, this function allocates memory for X, Y and arc coordinates and assigns the pointers at addressess <computeroutput>x</computeroutput>, <computeroutput>y</computeroutput> and <computeroutput>arc_coords</computeroutput> to the corresponding memory locations. It&apos;s the users responsibility to cleanup this memory after usage!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref>, <ref refid="group__plot__layout__utils_1ga3d3531ebbca9054240c73bff115c4dcf" kindref="member">vrna_plot_coords_turtle_pt()</ref>, <ref refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" kindref="member">vrna_plot_coords_circular()</ref>, <ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple()</ref>, vrna_plot_coords_naview(), <ref refid="group__plot__layout__utils_1gafd49896df8780c9669125429bc0da9b3" kindref="member">vrna_plot_coords_puzzler()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of X coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of Y coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">arc_coords</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer that will hold arc coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the structure on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/RNApuzzler/RNAturtle.h" line="53" column="1" declfile="ViennaRNA/plotting/RNApuzzler/RNAturtle.h" declline="53" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga3d3531ebbca9054240c73bff115c4dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_plot_coords_turtle_pt</definition>
        <argsstring>(short const *const pair_table, float **x, float **y, double **arc_coords)</argsstring>
        <name>vrna_plot_coords_turtle_pt</name>
        <param>
          <type>short const *const</type>
          <declname>pair_table</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>arc_coords</declname>
        </param>
        <briefdescription>
<para>Compute nucleotide coordinates for secondary structure plot using the <emphasis>RNAturtle</emphasis> algorithm <verbatim>embed:rst:inline :cite:p:`wiegreffe:2018` </verbatim>. </para>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle()</ref> but takes a pair table with the structure information as input.</para>
<para><simplesect kind="note"><para>On success, this function allocates memory for X, Y and arc coordinates and assigns the pointers at addressess <computeroutput>x</computeroutput>, <computeroutput>y</computeroutput> and <computeroutput>arc_coords</computeroutput> to the corresponding memory locations. It&apos;s the users responsibility to cleanup this memory after usage!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1gaccd6a87cb324b7d680e5dd93e112738b" kindref="member">vrna_plot_coords_pt()</ref>, <ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle()</ref>, <ref refid="group__plot__layout__utils_1gaeec80faa235f3ca489bc5e50adc41460" kindref="member">vrna_plot_coords_circular_pt()</ref>, <ref refid="group__plot__layout__utils_1ga76788091848e73cfb24b31536e22b7dd" kindref="member">vrna_plot_coords_simple_pt()</ref>, <ref refid="group__plot__layout__utils_1gab50a90dd6000a1920d741537af7e0b24" kindref="member">vrna_plot_coords_puzzler_pt()</ref>, vrna_plot_coords_naview_pt()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair table that holds the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of X coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of Y coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">arc_coords</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer that will hold arc coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the structure on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/RNApuzzler/RNAturtle.h" line="79" column="1" declfile="ViennaRNA/plotting/RNApuzzler/RNAturtle.h" declline="79" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the RNAturtle RNA secondary structure layout algorithm <verbatim>embed:rst:inline :cite:p:`wiegreffe:2018` </verbatim>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>RNATURTLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RNATURTLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*structure,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**x,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**y,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>**arc_coords);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group__plot__layout__utils_1ga3d3531ebbca9054240c73bff115c4dcf" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga3d3531ebbca9054240c73bff115c4dcf" kindref="member">vrna_plot_coords_turtle_pt</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pair_table,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**x,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**y,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**arc_coords);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/plotting/RNApuzzler/RNAturtle.h"/>
  </compounddef>
</doxygen>
