<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="heat__capacity_8h" kind="file" language="C++">
    <compoundname>heat_capacity.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="datastructures_2basic_8h" local="no">ViennaRNA/datastructures/basic.h</includes>
    <incdepgraph>
      <node id="6">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ViennaRNA/params/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ViennaRNA/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="14">
        <label>stdlib.h</label>
      </node>
      <node id="18">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/heat_capacity.h</label>
        <link refid="heat__capacity_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>limits.h</label>
      </node>
      <node id="9">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ViennaRNA/zscore.h</label>
        <link refid="zscore_8h_source"/>
      </node>
      <node id="16">
        <label>ViennaRNA/structured_domains.h</label>
        <link refid="structured__domains_8h"/>
      </node>
      <node id="11">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structvrna__heat__capacity__s" prot="public">vrna_heat_capacity_s</innerclass>
      <sectiondef kind="user-defined">
      <header>Basic heat capacity function interface</header>
      <memberdef kind="function" id="group__thermodynamics_1gafd95c2350d67d8f4374369c19cf111f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__thermodynamics_1ga99dc703d840310177ecf7aedf72b4409" kindref="member">vrna_heat_capacity_t</ref> *</type>
        <definition>vrna_heat_capacity_t * vrna_heat_capacity</definition>
        <argsstring>(vrna_fold_compound_t *fc, float T_min, float T_max, float T_increment, unsigned int mpoints)</argsstring>
        <name>vrna_heat_capacity</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_max</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_increment</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mpoints</declname>
        </param>
        <briefdescription>
<para>Compute the specific heat for an RNA. </para>
        </briefdescription>
        <detaileddescription>
<para>This function computes an RNAs specific heat in a given temperature range from the partition function by numeric differentiation. The result is returned as a list of pairs of temperature in <deg/>C and specific heat in Kcal/(Mol*K).</para>
<para>Users can specify the temperature range for the computation from <computeroutput>T_min</computeroutput> to <computeroutput>T_max</computeroutput>, as well as the increment step size <computeroutput>T_increment</computeroutput>. The latter also determines how many times the partition function is computed. Finally, the parameter <computeroutput>mpoints</computeroutput> determines how smooth the curve should be. The algorithm itself fits a parabola to <formula id="51">$ 2 \cdot mpoints + 1 $</formula> data points to calculate 2nd derivatives. Increasing this parameter produces a smoother curve.</para>
<para><simplesect kind="see"><para><ref refid="group__thermodynamics_1ga19ef508fcc66ab80833aa2fe402d8927" kindref="member">vrna_heat_capacity_cb()</ref>, <ref refid="group__thermodynamics_1ga99dc703d840310177ecf7aedf72b4409" kindref="member">vrna_heat_capacity_t</ref>, <ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_s</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> with the RNA sequence to analyze </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Lowest temperature in <deg/>C </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Highest temperature in <deg/>C </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_increment</parametername>
</parameternamelist>
<parameterdescription>
<para>Stepsize for temperature incrementation in <deg/>C (a reasonable choice might be 1<deg/>C) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mpoints</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of interpolation points to calculate 2nd derivative (a reasonable choice might be 2, min: 1, max: 100) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of pairs of temperatures and corresponding heat capacity or <emphasis>NULL</emphasis> upon any failure. The last entry of the list is indicated by a <bold>temperature</bold> field set to a value smaller than <computeroutput>T_min</computeroutput> </para>
</simplesect>
<xrefsect id="wrappers_1_wrappers000107"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as overloaded method <computeroutput>heat_capacity()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. If the optional function arguments <computeroutput>T_min</computeroutput>, <computeroutput>T_max</computeroutput>, <computeroutput>T_increment</computeroutput>, and <computeroutput>mpoints</computeroutput> are omitted, they default to 0.0, 100.0, 1.0 and 2, respectively. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.heat_capacity()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/heat_capacity.h" line="113" column="1" declfile="ViennaRNA/heat_capacity.h" declline="113" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__thermodynamics_1ga19ef508fcc66ab80833aa2fe402d8927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_heat_capacity_cb</definition>
        <argsstring>(vrna_fold_compound_t *fc, float T_min, float T_max, float T_increment, unsigned int mpoints, vrna_heat_capacity_f cb, void *data)</argsstring>
        <name>vrna_heat_capacity_cb</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_max</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_increment</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mpoints</declname>
        </param>
        <param>
          <type><ref refid="group__thermodynamics_1gafa73325bee7e6b7c9d1732d70e67d65a" kindref="member">vrna_heat_capacity_f</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Compute the specific heat for an RNA (callback variant) </para>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="group__thermodynamics_1gafd95c2350d67d8f4374369c19cf111f1" kindref="member">vrna_heat_capacity()</ref>, this function computes an RNAs specific heat in a given temperature range from the partition function by numeric differentiation. Instead of returning a list of temperature/specific heat pairs, however, this function returns the individual results through a callback mechanism. The provided function will be called for each result and passed the corresponding temperature and specific heat values along with the arbitrary data as provided through the <computeroutput>data</computeroutput> pointer argument.</para>
<para>Users can specify the temperature range for the computation from <computeroutput>T_min</computeroutput> to <computeroutput>T_max</computeroutput>, as well as the increment step size <computeroutput>T_increment</computeroutput>. The latter also determines how many times the partition function is computed. Finally, the parameter <computeroutput>mpoints</computeroutput> determines how smooth the curve should be. The algorithm itself fits a parabola to <formula id="51">$ 2 \cdot mpoints + 1 $</formula> data points to calculate 2nd derivatives. Increasing this parameter produces a smoother curve.</para>
<para><simplesect kind="see"><para><ref refid="group__thermodynamics_1gafd95c2350d67d8f4374369c19cf111f1" kindref="member">vrna_heat_capacity()</ref>, <ref refid="group__thermodynamics_1gafa73325bee7e6b7c9d1732d70e67d65a" kindref="member">vrna_heat_capacity_f</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> with the RNA sequence to analyze </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Lowest temperature in <deg/>C </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Highest temperature in <deg/>C </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_increment</parametername>
</parameternamelist>
<parameterdescription>
<para>Stepsize for temperature incrementation in <deg/>C (a reasonable choice might be 1<deg/>C) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mpoints</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of interpolation points to calculate 2nd derivative (a reasonable choice might be 2, min: 1, max: 100) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The user-defined callback function that receives the individual results </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>An arbitrary data structure that will be passed to the callback in conjunction with the results </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns 0 upon failure, and non-zero otherwise</para>
</simplesect>
<xrefsect id="wrappers_1_wrappers000108"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>heat_capacity_cb()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.heat_capacity_cb()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/heat_capacity.h" line="150" column="1" declfile="ViennaRNA/heat_capacity.h" declline="150" declcolumn="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Simplified heat capacity computation</header>
      <memberdef kind="function" id="group__thermodynamics_1ga0c2664e15dded704d805a9d2a625ff21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__thermodynamics_1ga99dc703d840310177ecf7aedf72b4409" kindref="member">vrna_heat_capacity_t</ref> *</type>
        <definition>vrna_heat_capacity_t * vrna_heat_capacity_simple</definition>
        <argsstring>(const char *sequence, float T_min, float T_max, float T_increment, unsigned int mpoints)</argsstring>
        <name>vrna_heat_capacity_simple</name>
        <param>
          <type>const char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_max</declname>
        </param>
        <param>
          <type>float</type>
          <declname>T_increment</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>mpoints</declname>
        </param>
        <briefdescription>
<para>Compute the specific heat for an RNA (simplified variant) </para>
        </briefdescription>
        <detaileddescription>
<para>Similar to <ref refid="group__thermodynamics_1gafd95c2350d67d8f4374369c19cf111f1" kindref="member">vrna_heat_capacity()</ref>, this function computes an RNAs specific heat in a given temperature range from the partition function by numeric differentiation. This simplified version, however, only requires the RNA sequence as input instead of a vrna_fold_compound_t data structure. The result is returned as a list of pairs of temperature in <deg/>C and specific heat in Kcal/(Mol*K).</para>
<para>Users can specify the temperature range for the computation from <computeroutput>T_min</computeroutput> to <computeroutput>T_max</computeroutput>, as well as the increment step size <computeroutput>T_increment</computeroutput>. The latter also determines how many times the partition function is computed. Finally, the parameter <computeroutput>mpoints</computeroutput> determines how smooth the curve should be. The algorithm itself fits a parabola to <formula id="51">$ 2 \cdot mpoints + 1 $</formula> data points to calculate 2nd derivatives. Increasing this parameter produces a smoother curve.</para>
<para><simplesect kind="see"><para><ref refid="group__thermodynamics_1gafd95c2350d67d8f4374369c19cf111f1" kindref="member">vrna_heat_capacity()</ref>, <ref refid="group__thermodynamics_1ga19ef508fcc66ab80833aa2fe402d8927" kindref="member">vrna_heat_capacity_cb()</ref>, <ref refid="group__thermodynamics_1ga99dc703d840310177ecf7aedf72b4409" kindref="member">vrna_heat_capacity_t</ref>, <ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_s</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>The RNA sequence input (must be uppercase) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Lowest temperature in <deg/>C </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Highest temperature in <deg/>C </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_increment</parametername>
</parameternamelist>
<parameterdescription>
<para>Stepsize for temperature incrementation in <deg/>C (a reasonable choice might be 1<deg/>C) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mpoints</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of interpolation points to calculate 2nd derivative (a reasonable choice might be 2, min: 1, max: 100) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of pairs of temperatures and corresponding heat capacity or <emphasis>NULL</emphasis> upon any failure. The last entry of the list is indicated by a <bold>temperature</bold> field set to a value smaller than <computeroutput>T_min</computeroutput> </para>
</simplesect>
<xrefsect id="wrappers_1_wrappers000109"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is available as overloaded function <computeroutput>heat_capacity()</computeroutput>. If the optional function arguments <computeroutput>T_min</computeroutput>, <computeroutput>T_max</computeroutput>, <computeroutput>T_increment</computeroutput>, and <computeroutput>mpoints</computeroutput> are omitted, they default to 0.0, 100.0, 1.0 and 2, respectively. See, e.g.  <verbatim>embed:rst:inline:py:func:`RNA.head_capacity()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/heat_capacity.h" line="194" column="1" declfile="ViennaRNA/heat_capacity.h" declline="194" declcolumn="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="heat__capacity_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/heat_capacity.h" line="20" column="11" bodyfile="ViennaRNA/heat_capacity.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__thermodynamics_1gafa73325bee7e6b7c9d1732d70e67d65a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* vrna_heat_capacity_f) (float temp, float heat_capacity, void *data)</definition>
        <argsstring>)(float temp, float heat_capacity, void *data)</argsstring>
        <name>vrna_heat_capacity_f</name>
        <briefdescription>
<para>The callback for heat capacity predictions. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="callbacks_1_callbacks000004"><xreftitle>Notes on Callback Functions</xreftitle><xrefdescription><para><parblock><para>This function will be called for each evaluated temperature in the heat capacity prediction. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__thermodynamics_1ga19ef508fcc66ab80833aa2fe402d8927" kindref="member">vrna_heat_capacity_cb()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temp</parametername>
</parameternamelist>
<parameterdescription>
<para>The current temperature this results corresponds to in <deg/>C </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>heat_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The heat capacity in Kcal/(Mol * K) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Some arbitrary data pointer passed through by the function executing the callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/heat_capacity.h" line="54" column="9" bodyfile="ViennaRNA/heat_capacity.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__thermodynamics_1ga18316e4657502e9203931f924d93732f" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() vrna_heat_capacity_callback(float temp, float heat_capacity, void *data)</definition>
        <argsstring>(float temp, float heat_capacity, void *data)</argsstring>
        <name>vrna_heat_capacity_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/heat_capacity.h" line="61" column="10" bodyfile="ViennaRNA/heat_capacity.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__thermodynamics_1ga99dc703d840310177ecf7aedf72b4409" prot="public" static="no">
        <type>struct <ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_s</ref></type>
        <definition>typedef struct vrna_heat_capacity_s vrna_heat_capacity_t</definition>
        <argsstring></argsstring>
        <name>vrna_heat_capacity_t</name>
        <briefdescription>
<para>A single result from heat capacity computations. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a convenience typedef for <ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_s</ref>, i.e. results as obtained from <ref refid="group__thermodynamics_1gafd95c2350d67d8f4374369c19cf111f1" kindref="member">vrna_heat_capacity()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/heat_capacity.h" line="61" column="10" bodyfile="ViennaRNA/heat_capacity.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Compute heat capacity for an RNA. </para>
    </briefdescription>
    <detaileddescription>
<para>This file includes the interface to all functions related to predicting the heat capacity for an RNA. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_MELTING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_MELTING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="datastructures_2basic_8h" kindref="compound">ViennaRNA/datastructures/basic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>undef<sp/>DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__thermodynamics_1gafa73325bee7e6b7c9d1732d70e67d65a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__thermodynamics_1gafa73325bee7e6b7c9d1732d70e67d65a" kindref="member">vrna_heat_capacity_f</ref>)(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>temp,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>heat_capacity,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">DEPRECATED(</highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(vrna_heat_capacity_callback)(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>temp,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>heat_capacity,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>*data),</highlight></codeline>
<codeline lineno="61" refid="group__thermodynamics_1ga99dc703d840310177ecf7aedf72b4409" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_heat_capacity_f<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_s</ref><sp/><ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_t</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structvrna__heat__capacity__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_s</ref><sp/>{</highlight></codeline>
<codeline lineno="78" refid="structvrna__heat__capacity__s_1a62ed3466ce614f4f1e729463fac41d72" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structvrna__heat__capacity__s_1a62ed3466ce614f4f1e729463fac41d72" kindref="member">temperature</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="structvrna__heat__capacity__s_1a2987d5e5ef974d14a108ec1c7062562f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structvrna__heat__capacity__s_1a2987d5e5ef974d14a108ec1c7062562f" kindref="member">heat_capacity</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_t</ref><sp/>*</highlight></codeline>
<codeline lineno="113" refid="group__thermodynamics_1gafd95c2350d67d8f4374369c19cf111f1" refkind="member"><highlight class="normal"><ref refid="group__thermodynamics_1gafd95c2350d67d8f4374369c19cf111f1" kindref="member">vrna_heat_capacity</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_min,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_max,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_increment,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpoints);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="group__thermodynamics_1ga19ef508fcc66ab80833aa2fe402d8927" refkind="member"><highlight class="normal"><ref refid="group__thermodynamics_1ga19ef508fcc66ab80833aa2fe402d8927" kindref="member">vrna_heat_capacity_cb</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_min,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_max,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_increment,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpoints,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__thermodynamics_1gafa73325bee7e6b7c9d1732d70e67d65a" kindref="member">vrna_heat_capacity_f</ref><sp/>cb,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>basic<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="structvrna__heat__capacity__s" kindref="compound">vrna_heat_capacity_t</ref><sp/>*</highlight></codeline>
<codeline lineno="194" refid="group__thermodynamics_1ga0c2664e15dded704d805a9d2a625ff21" refkind="member"><highlight class="normal"><ref refid="group__thermodynamics_1ga0c2664e15dded704d805a9d2a625ff21" kindref="member">vrna_heat_capacity_simple</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*sequence,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_min,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_max,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_increment,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>mpoints);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>basic<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>thermodynamics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/heat_capacity.h"/>
  </compounddef>
</doxygen>
