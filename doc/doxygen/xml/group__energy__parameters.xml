<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__energy__parameters" kind="group">
    <compoundname>energy_parameters</compoundname>
    <title>Energy Parameters</title>
    <innerfile refid="params_2basic_8h">basic.h</innerfile>
    <innerfile refid="constants_8h">constants.h</innerfile>
    <innerfile refid="convert_8h">convert.h</innerfile>
    <innerfile refid="io_8h">io.h</innerfile>
    <innerclass refid="structvrna__param__s" prot="public">vrna_param_s</innerclass>
    <innerclass refid="structvrna__exp__param__s" prot="public">vrna_exp_param_s</innerclass>
    <innergroup refid="group__energy__parameters__rw">Reading/Writing Energy Parameter Sets from/to File</innergroup>
    <innergroup refid="group__energy__parameters__salt">Salt corrections for energy parameters</innergroup>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" prot="public" static="no">
        <type>struct <ref refid="structvrna__param__s" kindref="compound">vrna_param_s</ref></type>
        <definition>typedef struct vrna_param_s vrna_param_t</definition>
        <argsstring></argsstring>
        <name>vrna_param_t</name>
        <briefdescription>
<para>Typename for the free energy parameter data structure <ref refid="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" kindref="member">vrna_params</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="1" column="0" bodyfile="ViennaRNA/params/basic.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" prot="public" static="no">
        <type>struct <ref refid="structvrna__exp__param__s" kindref="compound">vrna_exp_param_s</ref></type>
        <definition>typedef struct vrna_exp_param_s vrna_exp_param_t</definition>
        <argsstring></argsstring>
        <name>vrna_exp_param_t</name>
        <briefdescription>
<para>Typename for the Boltzmann factor data structure <ref refid="group__energy__parameters_1gab1f3016f96aa96bff020cdd904605afa" kindref="member">vrna_exp_params</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="1" column="0" bodyfile="ViennaRNA/params/basic.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__energy__parameters_1ga857dde86357d306cc902f0d8b2797659" prot="public" static="no">
        <type>struct <ref refid="structvrna__param__s" kindref="compound">vrna_param_s</ref></type>
        <definition>typedef struct vrna_param_s paramT</definition>
        <argsstring></argsstring>
        <name>paramT</name>
        <briefdescription>
<para>Old typename of <ref refid="structvrna__param__s" kindref="compound">vrna_param_s</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000144"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="376" column="1" bodyfile="ViennaRNA/params/basic.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__energy__parameters_1ga8bffe1828e2cbec101769f5cc0b1535b" prot="public" static="no">
        <type>struct <ref refid="structvrna__exp__param__s" kindref="compound">vrna_exp_param_s</ref></type>
        <definition>typedef struct vrna_exp_param_s pf_paramT</definition>
        <argsstring></argsstring>
        <name>pf_paramT</name>
        <briefdescription>
<para>Old typename of <ref refid="structvrna__exp__param__s" kindref="compound">vrna_exp_param_s</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000145"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="376" column="1" bodyfile="ViennaRNA/params/basic.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
        <definition>vrna_param_t* vrna_params</definition>
        <argsstring>(vrna_md_t *md)</argsstring>
        <name>vrna_params</name>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Get a data structure containing prescaled free energy parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>If a NULL pointer is passed for the model details parameter, the default model parameters are stored within the requested <ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> structure.</para>
<para><simplesect kind="see"><para><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref>, <ref refid="group__model__details_1ga8ac6ff84936282436f822644bf841f66" kindref="member">vrna_md_set_default()</ref>, <ref refid="group__energy__parameters_1gab1f3016f96aa96bff020cdd904605afa" kindref="member">vrna_exp_params()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the model details to store inside the structure (Maybe NULL) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the memory location where the requested parameters are stored </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="178" column="1" declfile="ViennaRNA/params/basic.h" declline="178" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga4bffa39f26e7746148444dd8a8426eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
        <definition>vrna_param_t* vrna_params_copy</definition>
        <argsstring>(vrna_param_t *par)</argsstring>
        <name>vrna_params_copy</name>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Get a copy of the provided free energy parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>If NULL is passed as parameter, a default set of energy parameters is created and returned.</para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" kindref="member">vrna_params()</ref>, <ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The free energy parameters that are to be copied (Maybe NULL) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy or a default set of the (provided) parameters </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="193" column="1" declfile="ViennaRNA/params/basic.h" declline="193" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1gab1f3016f96aa96bff020cdd904605afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* vrna_exp_params</definition>
        <argsstring>(vrna_md_t *md)</argsstring>
        <name>vrna_exp_params</name>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Get a data structure containing prescaled free energy parameters already transformed to Boltzmann factors. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns a data structure that contains all necessary precomputed energy contributions for each type of loop.</para>
<para>In contrast to <ref refid="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" kindref="member">vrna_params()</ref>, the free energies within this data structure are stored as their Boltzmann factors, i.e.</para>
<para><formula id="79">$ exp(-E / kT) $</formula></para>
<para>where <formula id="80">$ E $</formula> is the free energy.</para>
<para>If a NULL pointer is passed for the model details parameter, the default model parameters are stored within the requested <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> structure.</para>
<para><simplesect kind="see"><para><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref>, <ref refid="group__model__details_1ga8ac6ff84936282436f822644bf841f66" kindref="member">vrna_md_set_default()</ref>, <ref refid="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" kindref="member">vrna_params()</ref>, vrna_rescale_pf_params()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the model details to store inside the structure (Maybe NULL) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the memory location where the requested parameters are stored </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="219" column="1" declfile="ViennaRNA/params/basic.h" declline="219" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1gaf78c09e685e6eef4100b1a41d4042550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* vrna_exp_params_comparative</definition>
        <argsstring>(unsigned int n_seq, vrna_md_t *md)</argsstring>
        <name>vrna_exp_params_comparative</name>
        <param>
          <type>unsigned int</type>
          <declname>n_seq</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Get a data structure containing prescaled free energy parameters already transformed to Boltzmann factors (alifold version) </para>
        </briefdescription>
        <detaileddescription>
<para>If a NULL pointer is passed for the model details parameter, the default model parameters are stored within the requested <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> structure.</para>
<para><simplesect kind="see"><para><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref>, <ref refid="group__model__details_1ga8ac6ff84936282436f822644bf841f66" kindref="member">vrna_md_set_default()</ref>, <ref refid="group__energy__parameters_1gab1f3016f96aa96bff020cdd904605afa" kindref="member">vrna_exp_params()</ref>, <ref refid="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" kindref="member">vrna_params()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n_seq</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of sequences in the alignment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the model details to store inside the structure (Maybe NULL) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the memory location where the requested parameters are stored </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="236" column="1" declfile="ViennaRNA/params/basic.h" declline="236" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga70bc46be7cfa5434a71efe241c4f0609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* vrna_exp_params_copy</definition>
        <argsstring>(vrna_exp_param_t *par)</argsstring>
        <name>vrna_exp_params_copy</name>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Get a copy of the provided free energy parameters (provided as Boltzmann factors) </para>
        </briefdescription>
        <detaileddescription>
<para>If NULL is passed as parameter, a default set of energy parameters is created and returned.</para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1gab1f3016f96aa96bff020cdd904605afa" kindref="member">vrna_exp_params()</ref>, <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The free energy parameters that are to be copied (Maybe NULL) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy or a default set of the (provided) parameters </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="252" column="1" declfile="ViennaRNA/params/basic.h" declline="252" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga9202b803da6f5364f91db89ab3d8b048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_params_subst</definition>
        <argsstring>(vrna_fold_compound_t *fc, vrna_param_t *par)</argsstring>
        <name>vrna_params_subst</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Update/Reset energy parameters data structure within a <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Passing NULL as second argument leads to a reset of the energy parameters within fc to their default values. Otherwise, the energy parameters provided will be copied over into fc.</para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1ga033fea3322aeac71a260241e8ba6e773" kindref="member">vrna_params_reset()</ref>, <ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref>, <ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref>, <ref refid="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" kindref="member">vrna_params()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> that is about to receive updated energy parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>par</parametername>
</parameternamelist>
<parameterdescription>
<para>The energy parameters used to substitute those within fc (Maybe NULL)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000130"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached to <ref refid="structvrna__fc__s" kindref="compound">vrna_fc_s</ref> objects as overloaded <computeroutput>params_subst()</computeroutput> method.</para>
<para>When no parameter is passed, the resulting action is the same as passing <computeroutput>NULL</computeroutput> as second parameter to <ref refid="group__energy__parameters_1ga9202b803da6f5364f91db89ab3d8b048" kindref="member">vrna_params_subst()</ref>, i.e. resetting the parameters to the global defaults. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.params_subst()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="268" column="1" declfile="ViennaRNA/params/basic.h" declline="268" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga4abbca93defd54fa0dc797ceca36d2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_exp_params_subst</definition>
        <argsstring>(vrna_fold_compound_t *fc, vrna_exp_param_t *params)</argsstring>
        <name>vrna_exp_params_subst</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Update the energy parameters for subsequent partition function computations. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to properly assign new energy parameters for partition function computations to a <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref>. For this purpose, the data of the provided pointer <computeroutput>params</computeroutput> will be copied into <computeroutput>fc</computeroutput> and a recomputation of the partition function scaling factor is issued, if the <computeroutput>pf_scale</computeroutput> attribute of <computeroutput>params</computeroutput> is less than <computeroutput>1.0</computeroutput>.</para>
<para>Passing NULL as second argument leads to a reset of the energy parameters within fc to their default values</para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1ga8d7b65661accc3030bd3d7c2b014512b" kindref="member">vrna_exp_params_reset()</ref>, <ref refid="group__energy__parameters_1gac377cdd18c3a6da4e04683742fda3b7a" kindref="member">vrna_exp_params_rescale()</ref>, <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref>, <ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref>, <ref refid="group__energy__parameters_1gab1f3016f96aa96bff020cdd904605afa" kindref="member">vrna_exp_params()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The fold compound data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the new energy parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000131"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached to <ref refid="structvrna__fc__s" kindref="compound">vrna_fc_s</ref> objects as overloaded <computeroutput>exp_params_subst()</computeroutput> method.</para>
<para>When no parameter is passed, the resulting action is the same as passing <computeroutput>NULL</computeroutput> as second parameter to <ref refid="group__energy__parameters_1ga4abbca93defd54fa0dc797ceca36d2f0" kindref="member">vrna_exp_params_subst()</ref>, i.e. resetting the parameters to the global defaults. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.exp_params_subst()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="290" column="1" declfile="ViennaRNA/params/basic.h" declline="290" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1gac377cdd18c3a6da4e04683742fda3b7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_exp_params_rescale</definition>
        <argsstring>(vrna_fold_compound_t *fc, double *mfe)</argsstring>
        <name>vrna_exp_params_rescale</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mfe</declname>
        </param>
        <briefdescription>
<para>Rescale Boltzmann factors for partition function computations. </para>
        </briefdescription>
        <detaileddescription>
<para>This function may be used to (automatically) rescale the Boltzmann factors used in partition function computations. Since partition functions over subsequences can easily become extremely large, the RNAlib internally rescales them to avoid numerical over- and/or underflow. Therefore, a proper scaling factor <formula id="25">$s$</formula> needs to be chosen that in turn is then used to normalize the corresponding partition functions <formula id="81">$\hat{q}[i,j] = q[i,j] / s^{(j-i+1)}$</formula>.</para>
<para>This function provides two ways to automatically adjust the scaling factor.<orderedlist>
<listitem><para>Automatic guess</para>
</listitem><listitem><para>Automatic adjustment according to MFE</para>
</listitem></orderedlist>
</para>
<para>Passing <computeroutput>NULL</computeroutput> as second parameter activates the <emphasis>automatic guess mode</emphasis>. Here, the scaling factor is recomputed according to a mean free energy of <computeroutput>184.3*length</computeroutput> cal for random sequences. <simplesect kind="note"><para>This recomputation only takes place if the <computeroutput>pf_scale</computeroutput> attribute of the <computeroutput>exp_params</computeroutput> data structure contained in <computeroutput>fc</computeroutput> has a value below <computeroutput>1.0</computeroutput>.</para>
</simplesect>
On the other hand, if the MFE for a sequence is known, it can be used to recompute a more robust scaling factor, since it represents the lowest free energy of the entire ensemble of structures, i.e. the highest Boltzmann factor. To activate this second mode of <emphasis>automatic adjustment according to MFE</emphasis>, a pointer to the MFE value needs to be passed as second argument. This value is then taken to compute the scaling factor as <formula id="82">$ s = exp((sfact * MFE) / kT / length )$</formula>, where sfact is an additional scaling weight located in the vrna_md_t data structure of <computeroutput>exp_params</computeroutput> in <computeroutput>fc</computeroutput>.</para>
<para>The computed scaling factor <formula id="25">$s$</formula> will be stored as <computeroutput>pf_scale</computeroutput> attribute of the <computeroutput>exp_params</computeroutput> data structure in <computeroutput>fc</computeroutput>.</para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1ga4abbca93defd54fa0dc797ceca36d2f0" kindref="member">vrna_exp_params_subst()</ref>, <ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref>, <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref>, <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The fold compound data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mfe</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the MFE (in kcal/mol) or NULL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000132"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached to <ref refid="structvrna__fc__s" kindref="compound">vrna_fc_s</ref> objects as overloaded <computeroutput>exp_params_rescale()</computeroutput> method.</para>
<para>When no parameter is passed to this method, the resulting action is the same as passing <computeroutput>NULL</computeroutput> as second parameter to <ref refid="group__energy__parameters_1gac377cdd18c3a6da4e04683742fda3b7a" kindref="member">vrna_exp_params_rescale()</ref>, i.e. default scaling of the partition function. Passing an energy in kcal/mol, e.g. as retrieved by a previous call to the <computeroutput>mfe()</computeroutput> method, instructs all subsequent calls to scale the partition function accordingly. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.exp_params_rescale()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="332" column="1" declfile="ViennaRNA/params/basic.h" declline="332" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga033fea3322aeac71a260241e8ba6e773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_params_reset</definition>
        <argsstring>(vrna_fold_compound_t *fc, vrna_md_t *md)</argsstring>
        <name>vrna_params_reset</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Reset free energy parameters within a <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> according to provided, or default model details. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allows one to rescale free energy parameters for subsequent structure prediction or evaluation according to a set of model details, e.g. temperature values. To do so, the caller provides either a pointer to a set of model details to be used for rescaling, or NULL if global default setting should be used.</para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1ga8d7b65661accc3030bd3d7c2b014512b" kindref="member">vrna_exp_params_reset()</ref>, vrna_params_subs()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The fold compound data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the new model details (or NULL for reset to defaults)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000133"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached to <ref refid="structvrna__fc__s" kindref="compound">vrna_fc_s</ref> objects as overloaded <computeroutput>params_reset()</computeroutput> method.</para>
<para>When no parameter is passed to this method, the resulting action is the same as passing <computeroutput>NULL</computeroutput> as second parameter to <ref refid="group__energy__parameters_1ga033fea3322aeac71a260241e8ba6e773" kindref="member">vrna_params_reset()</ref>, i.e. global default model settings are used. Passing an object of type <ref refid="structvrna__md__s" kindref="compound">vrna_md_s</ref> resets the fold compound according to the specifications stored within the <ref refid="structvrna__md__s" kindref="compound">vrna_md_s</ref> object. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.params_reset()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="351" column="1" declfile="ViennaRNA/params/basic.h" declline="351" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga8d7b65661accc3030bd3d7c2b014512b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>vrna_exp_params_reset</definition>
        <argsstring>(vrna_fold_compound_t *fc, vrna_md_t *md)</argsstring>
        <name>vrna_exp_params_reset</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Reset Boltzmann factors for partition function computations within a <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> according to provided, or default model details. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allows one to rescale Boltzmann factors for subsequent partition function computations according to a set of model details, e.g. temperature values. To do so, the caller provides either a pointer to a set of model details to be used for rescaling, or NULL if global default setting should be used.</para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1ga033fea3322aeac71a260241e8ba6e773" kindref="member">vrna_params_reset()</ref>, <ref refid="group__energy__parameters_1ga4abbca93defd54fa0dc797ceca36d2f0" kindref="member">vrna_exp_params_subst()</ref>, <ref refid="group__energy__parameters_1gac377cdd18c3a6da4e04683742fda3b7a" kindref="member">vrna_exp_params_rescale()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The fold compound data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the new model details (or NULL for reset to defaults)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="wrappers_1_wrappers000134"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached to <ref refid="structvrna__fc__s" kindref="compound">vrna_fc_s</ref> objects as overloaded <computeroutput>exp_params_reset()</computeroutput> method.</para>
<para>When no parameter is passed to this method, the resulting action is the same as passing <computeroutput>NULL</computeroutput> as second parameter to <ref refid="group__energy__parameters_1ga8d7b65661accc3030bd3d7c2b014512b" kindref="member">vrna_exp_params_reset()</ref>, i.e. global default model settings are used. Passing an object of type <ref refid="structvrna__md__s" kindref="compound">vrna_md_s</ref> resets the fold compound according to the specifications stored within the <ref refid="structvrna__md__s" kindref="compound">vrna_md_s</ref> object. See, e.g.  <verbatim>embed:rst:inline:py:meth:`RNA.fold_compound.exp_params_reset()` in the :doc:`/api_python`</verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="371" column="1" declfile="ViennaRNA/params/basic.h" declline="371" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga06befb1f7beed0b4014cc07628636bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_params_prepare</definition>
        <argsstring>(vrna_fold_compound_t *fc, unsigned int options)</argsstring>
        <name>vrna_params_prepare</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="376" column="1" declfile="ViennaRNA/params/basic.h" declline="376" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga1c252a1ef78410efcdcc1998f3c415cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
        <definition>vrna_param_t* get_parameter_copy</definition>
        <argsstring>(vrna_param_t *par)</argsstring>
        <name>get_parameter_copy</name>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="395" column="15" declfile="ViennaRNA/params/basic.h" declline="395" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1gabf3b9271c41dd3fac02d56e0b02b3344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* get_scaled_pf_parameters</definition>
        <argsstring>(void)</argsstring>
        <name>get_scaled_pf_parameters</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get a data structure of type <ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> which contains the Boltzmann weights of several energy parameters scaled according to the current temperature</para>
<para><xrefsect id="deprecated_1_deprecated000146"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1gab1f3016f96aa96bff020cdd904605afa" kindref="member">vrna_exp_params()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>The data structure containing Boltzmann weights for use in partition function calculations </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="407" column="19" declfile="ViennaRNA/params/basic.h" declline="407" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1gaef2b931c7e9d4ffb0a5c33df50ec2068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* get_boltzmann_factors</definition>
        <argsstring>(double temperature, double betaScale, vrna_md_t md, double pf_scale)</argsstring>
        <name>get_boltzmann_factors</name>
        <param>
          <type>double</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaScale</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref></type>
          <declname>md</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pf_scale</declname>
        </param>
        <briefdescription>
<para>Get precomputed Boltzmann factors of the loop type dependent energy contributions with independent thermodynamic temperature. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns a data structure that contains all necessary precalculated Boltzmann factors for each loop type contribution.<linebreak/>
 In contrast to <ref refid="group__energy__parameters_1gabf3b9271c41dd3fac02d56e0b02b3344" kindref="member">get_scaled_pf_parameters()</ref>, this function enables setting of independent temperatures for both, the individual energy contributions as well as the thermodynamic temperature used in <formula id="83">$ exp(-\Delta G / kT) $</formula></para>
<para><xrefsect id="deprecated_1_deprecated000147"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1gab1f3016f96aa96bff020cdd904605afa" kindref="member">vrna_exp_params()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1gabf3b9271c41dd3fac02d56e0b02b3344" kindref="member">get_scaled_pf_parameters()</ref>, <ref refid="group__energy__parameters_1ga665a446ba8ff211e551297a8fa36ec27" kindref="member">get_boltzmann_factor_copy()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>The temperature in degrees Celcius used for (re-)scaling the energy contributions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>betaScale</parametername>
</parameternamelist>
<parameterdescription>
<para>A scaling value that is used as a multiplication factor for the absolute temperature of the system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>The model details to be used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pf_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scaling factor for the Boltzmann factors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A set of precomputed Boltzmann factors </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="438" column="19" declfile="ViennaRNA/params/basic.h" declline="438" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga665a446ba8ff211e551297a8fa36ec27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* get_boltzmann_factor_copy</definition>
        <argsstring>(vrna_exp_param_t *parameters)</argsstring>
        <name>get_boltzmann_factor_copy</name>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Get a copy of already precomputed Boltzmann factors. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000148"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1ga70bc46be7cfa5434a71efe241c4f0609" kindref="member">vrna_exp_params_copy()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1gaef2b931c7e9d4ffb0a5c33df50ec2068" kindref="member">get_boltzmann_factors()</ref>, <ref refid="group__energy__parameters_1gabf3b9271c41dd3fac02d56e0b02b3344" kindref="member">get_scaled_pf_parameters()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The input data structure that shall be copied </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the provided Boltzmann factor data set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="451" column="19" declfile="ViennaRNA/params/basic.h" declline="451" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga0ccf4e1be085a573533fd6b9da2d8cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* get_scaled_alipf_parameters</definition>
        <argsstring>(unsigned int n_seq)</argsstring>
        <name>get_scaled_alipf_parameters</name>
        <param>
          <type>unsigned int</type>
          <declname>n_seq</declname>
        </param>
        <briefdescription>
<para>Get precomputed Boltzmann factors of the loop type dependent energy contributions (alifold variant) </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000149"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1gaf78c09e685e6eef4100b1a41d4042550" kindref="member">vrna_exp_params_comparative()</ref> instead!</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="461" column="19" declfile="ViennaRNA/params/basic.h" declline="461" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga2aa1d87c97f35d2e4121634a17556829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* get_boltzmann_factors_ali</definition>
        <argsstring>(unsigned int n_seq, double temperature, double betaScale, vrna_md_t md, double pf_scale)</argsstring>
        <name>get_boltzmann_factors_ali</name>
        <param>
          <type>unsigned int</type>
          <declname>n_seq</declname>
        </param>
        <param>
          <type>double</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaScale</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref></type>
          <declname>md</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pf_scale</declname>
        </param>
        <briefdescription>
<para>Get precomputed Boltzmann factors of the loop type dependent energy contributions (alifold variant) with independent thermodynamic temperature. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000150"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1gaf78c09e685e6eef4100b1a41d4042550" kindref="member">vrna_exp_params_comparative()</ref> instead!</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="476" column="19" declfile="ViennaRNA/params/basic.h" declline="476" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga541f2cf7436e9bc939b0a49b24baf987" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
        <definition>vrna_param_t* scale_parameters</definition>
        <argsstring>(void)</argsstring>
        <name>scale_parameters</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get precomputed energy contributions for all the known loop types. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>OpenMP: This function relies on several global model settings variables and thus is not to be considered threadsafe. See <ref refid="group__energy__parameters_1ga7fa6a000d7c16feab939f2c4ee626197" kindref="member">get_scaled_parameters()</ref> for a completely threadsafe implementation.</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000151"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" kindref="member">vrna_params()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>A set of precomputed energy contributions </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="490" column="15" declfile="ViennaRNA/params/basic.h" declline="490" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga7fa6a000d7c16feab939f2c4ee626197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
        <definition>vrna_param_t* get_scaled_parameters</definition>
        <argsstring>(double temperature, vrna_md_t md)</argsstring>
        <name>get_scaled_parameters</name>
        <param>
          <type>double</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref></type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Get precomputed energy contributions for all the known loop types. </para>
        </briefdescription>
        <detaileddescription>
<para>Call this function to retrieve precomputed energy contributions, i.e. scaled according to the temperature passed. Furthermore, this function assumes a data structure that contains the model details as well, such that subsequent folding recursions are able to retrieve the correct model settings</para>
<para><xrefsect id="deprecated_1_deprecated000152"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1gad0e3e7e74bdc50d1709d40c92993185e" kindref="member">vrna_params()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__model__details_1ga1f8a10e12a0a1915f2a4eff0b28ea17c" kindref="member">vrna_md_t</ref>, <ref refid="group__model__details_1gabad896c3650d420f3f3ddefc69e2bceb" kindref="member">set_model_details()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>The temperature in degrees Celcius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>The model details </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>precomputed energy contributions and model settings </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="510" column="15" declfile="ViennaRNA/params/basic.h" declline="510" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1gac2f6521f9db04ede2f23fc56cc9fa7e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
        <definition>vrna_param_t* copy_parameters</definition>
        <argsstring>(void)</argsstring>
        <name>copy_parameters</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="512" column="15" declfile="ViennaRNA/params/basic.h" declline="512" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1gac5889dd7be0201c76ebdd1c501cdff54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
        <definition>vrna_param_t* set_parameters</definition>
        <argsstring>(vrna_param_t *dest)</argsstring>
        <name>set_parameters</name>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="513" column="15" declfile="ViennaRNA/params/basic.h" declline="513" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga32414ddbb3ff0aa35d18ad8e002aad5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* scale_pf_parameters</definition>
        <argsstring>(void)</argsstring>
        <name>scale_pf_parameters</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="514" column="19" declfile="ViennaRNA/params/basic.h" declline="514" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga00bcbd1e68465def3dabc12c213372cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* copy_pf_param</definition>
        <argsstring>(void)</argsstring>
        <name>copy_pf_param</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="515" column="19" declfile="ViennaRNA/params/basic.h" declline="515" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__energy__parameters_1ga106a2beb5026a25bfa90fd59b8b1d5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
        <definition>vrna_exp_param_t* set_pf_param</definition>
        <argsstring>(vrna_param_t *dest)</argsstring>
        <name>set_pf_param</name>
        <param>
          <type><ref refid="group__energy__parameters_1ga8a69ca7d787e4fd6079914f5343a1f35" kindref="member">vrna_param_t</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="517" column="19" declfile="ViennaRNA/params/basic.h" declline="517" declcolumn="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__energy__parameters_1gab7b5159125a90babbd3b81319305f35f" prot="public" static="no">
        <name>VRNA_GQUAD_MAX_STACK_SIZE</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="37" column="11" bodyfile="ViennaRNA/params/basic.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__energy__parameters_1gae24794ad38d2bf86d4c1e2f24cf35230" prot="public" static="no">
        <name>VRNA_GQUAD_MIN_STACK_SIZE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="38" column="11" bodyfile="ViennaRNA/params/basic.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__energy__parameters_1gaabc251a60f6dbe927dd3a3881a161fb7" prot="public" static="no">
        <name>VRNA_GQUAD_MAX_LINKER_LENGTH</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="39" column="11" bodyfile="ViennaRNA/params/basic.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__energy__parameters_1gab0e3cb58bc3a7e3fb08cc05f8e58ddab" prot="public" static="no">
        <name>VRNA_GQUAD_MIN_LINKER_LENGTH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="40" column="11" bodyfile="ViennaRNA/params/basic.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__energy__parameters_1gad7bdd880afca461f97763d79ee57a347" prot="public" static="no">
        <name>VRNA_GQUAD_MIN_BOX_SIZE</name>
        <initializer>                                         ((4 * VRNA_GQUAD_MIN_STACK_SIZE) + \
                                         (3 * VRNA_GQUAD_MIN_LINKER_LENGTH))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="41" column="11" bodyfile="ViennaRNA/params/basic.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__energy__parameters_1ga56cafabad2f8a7db83f2d5d3b0e8d313" prot="public" static="no">
        <name>VRNA_GQUAD_MAX_BOX_SIZE</name>
        <initializer>                                         ((4 * VRNA_GQUAD_MAX_STACK_SIZE) + \
                                         (3 * VRNA_GQUAD_MAX_LINKER_LENGTH))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/params/basic.h" line="43" column="11" bodyfile="ViennaRNA/params/basic.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
