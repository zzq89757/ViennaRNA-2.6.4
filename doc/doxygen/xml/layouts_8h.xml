<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="layouts_8h" kind="file" language="C++">
    <compoundname>layouts.h</compoundname>
    <includes refid="datastructures_2basic_8h" local="no">ViennaRNA/datastructures/basic.h</includes>
    <includes refid="RNAturtle_8h" local="yes">ViennaRNA/plotting/RNApuzzler/RNAturtle.h</includes>
    <includes refid="RNApuzzler_8h" local="yes">ViennaRNA/plotting/RNApuzzler/RNApuzzler.h</includes>
    <includedby refid="plot__layouts_8h" local="no">ViennaRNA/plot_layouts.h</includedby>
    <includedby refid="PS__dot_8h" local="no">ViennaRNA/PS_dot.h</includedby>
    <includedby refid="plotting_2structures_8h" local="no">ViennaRNA/plotting/structures.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ViennaRNA/params/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/plotting/layouts.h</label>
        <link refid="layouts_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ViennaRNA/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ViennaRNA/plotting/RNApuzzler/RNAturtle.h</label>
        <link refid="RNAturtle_8h"/>
      </node>
      <node id="4">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ViennaRNA/plotting/RNApuzzler/RNApuzzler.h</label>
        <link refid="RNApuzzler_8h"/>
      </node>
      <node id="2">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ViennaRNA/zscore.h</label>
        <link refid="zscore_8h_source"/>
      </node>
      <node id="15">
        <label>ViennaRNA/structured_domains.h</label>
        <link refid="structured__domains_8h"/>
      </node>
      <node id="10">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>ViennaRNA/plot_structure.h</label>
        <link refid="plot__structure_8h"/>
      </node>
      <node id="3">
        <label>ViennaRNA/PS_dot.h</label>
        <link refid="PS__dot_8h"/>
      </node>
      <node id="1">
        <label>ViennaRNA/plotting/layouts.h</label>
        <link refid="layouts_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ViennaRNA/plotting/structures.h</label>
        <link refid="plotting_2structures_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ViennaRNA/plot_layouts.h</label>
        <link refid="plot__layouts_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structvrna__plot__layout__s" prot="public">vrna_plot_layout_s</innerclass>
    <innerclass refid="structCOORDINATE" prot="public">COORDINATE</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="layouts_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="13" column="11" bodyfile="ViennaRNA/plotting/layouts.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__plot__layout__utils_1gae6d17b9f0a53cf5205a9181e0f8422e9" prot="public" static="no">
        <name>VRNA_PLOT_TYPE_SIMPLE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Definition of Plot type <emphasis>simple</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>This is the plot type definition for several RNA structure plotting functions telling them to use <bold>Simple</bold> plotting algorithm</para>
<para><simplesect kind="see"><para><ref refid="group__plotting__utils__deprecated_1ga5964c4581431b098b80027d6e14dcdd4" kindref="member">rna_plot_type</ref>, <ref refid="group__plotting__utils_1ga139a31dd0ba9fc6612431f67de901c31" kindref="member">vrna_file_PS_rnaplot_a()</ref>, <ref refid="group__plotting__utils_1gabdc8f6548ba4a3bc3cd868ccbcfdb86a" kindref="member">vrna_file_PS_rnaplot()</ref>, <ref refid="group__plotting__utils_1gae7853539b5df98f294b4af434e979304" kindref="member">svg_rna_plot()</ref>, <ref refid="group__plotting__utils_1ga70834bc8c0aad4fe6824ff76ccb8f329" kindref="member">gmlRNA()</ref>, <ref refid="group__plotting__utils_1gadd368528755f9a830727b680243541df" kindref="member">ssv_rna_plot()</ref>, <ref refid="group__plotting__utils_1ga2f6d5953e6a323df898896b8d6614483" kindref="member">xrna_plot()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="56" column="9" bodyfile="ViennaRNA/plotting/layouts.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__plot__layout__utils_1ga94d4c863ecac2f220f76658afb92f964" prot="public" static="no">
        <name>VRNA_PLOT_TYPE_NAVIEW</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Definition of Plot type <emphasis>Naview</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>This is the plot type definition for several RNA structure plotting functions telling them to use <bold>Naview</bold> plotting algorithm <verbatim>embed:rst:inline :cite:p:`bruccoleri:1988` </verbatim>.</para>
<para><simplesect kind="see"><para><ref refid="group__plotting__utils__deprecated_1ga5964c4581431b098b80027d6e14dcdd4" kindref="member">rna_plot_type</ref>, <ref refid="group__plotting__utils_1ga139a31dd0ba9fc6612431f67de901c31" kindref="member">vrna_file_PS_rnaplot_a()</ref>, <ref refid="group__plotting__utils_1gabdc8f6548ba4a3bc3cd868ccbcfdb86a" kindref="member">vrna_file_PS_rnaplot()</ref>, <ref refid="group__plotting__utils_1gae7853539b5df98f294b4af434e979304" kindref="member">svg_rna_plot()</ref>, <ref refid="group__plotting__utils_1ga70834bc8c0aad4fe6824ff76ccb8f329" kindref="member">gmlRNA()</ref>, <ref refid="group__plotting__utils_1gadd368528755f9a830727b680243541df" kindref="member">ssv_rna_plot()</ref>, <ref refid="group__plotting__utils_1ga2f6d5953e6a323df898896b8d6614483" kindref="member">xrna_plot()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="66" column="9" bodyfile="ViennaRNA/plotting/layouts.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__plot__layout__utils_1ga8c9eac631348da92136c8363ecdd9fb9" prot="public" static="no">
        <name>VRNA_PLOT_TYPE_CIRCULAR</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Definition of Plot type <emphasis>Circular</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>This is the plot type definition for several RNA structure plotting functions telling them to produce a <bold>Circular plot</bold></para>
<para><simplesect kind="see"><para><ref refid="group__plotting__utils__deprecated_1ga5964c4581431b098b80027d6e14dcdd4" kindref="member">rna_plot_type</ref>, <ref refid="group__plotting__utils_1ga139a31dd0ba9fc6612431f67de901c31" kindref="member">vrna_file_PS_rnaplot_a()</ref>, <ref refid="group__plotting__utils_1gabdc8f6548ba4a3bc3cd868ccbcfdb86a" kindref="member">vrna_file_PS_rnaplot()</ref>, <ref refid="group__plotting__utils_1gae7853539b5df98f294b4af434e979304" kindref="member">svg_rna_plot()</ref>, <ref refid="group__plotting__utils_1ga70834bc8c0aad4fe6824ff76ccb8f329" kindref="member">gmlRNA()</ref>, <ref refid="group__plotting__utils_1gadd368528755f9a830727b680243541df" kindref="member">ssv_rna_plot()</ref>, <ref refid="group__plotting__utils_1ga2f6d5953e6a323df898896b8d6614483" kindref="member">xrna_plot()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="76" column="9" bodyfile="ViennaRNA/plotting/layouts.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__plot__layout__utils_1ga382c1c5c0b1943500aa4bb55b7658a33" prot="public" static="no">
        <name>VRNA_PLOT_TYPE_TURTLE</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Definition of Plot type <emphasis>Turtle</emphasis> <verbatim>embed:rst:inline :cite:p:`wiegreffe:2018` </verbatim>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="82" column="9" bodyfile="ViennaRNA/plotting/layouts.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__plot__layout__utils_1ga64ec68055e241d11f659edb50f27ecae" prot="public" static="no">
        <name>VRNA_PLOT_TYPE_PUZZLER</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Definition of Plot type <emphasis>RNApuzzler</emphasis> <verbatim>embed:rst:inline :cite:p:`wiegreffe:2018` </verbatim>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="88" column="9" bodyfile="ViennaRNA/plotting/layouts.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__plot__layout__utils_1ga519e6a330060a3de11640f030ab34424" prot="public" static="no">
        <name>VRNA_PLOT_TYPE_DEFAULT</name>
        <initializer><ref refid="group__plot__layout__utils_1ga64ec68055e241d11f659edb50f27ecae" kindref="member">VRNA_PLOT_TYPE_PUZZLER</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="93" column="11" bodyfile="ViennaRNA/plotting/layouts.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" prot="public" static="no">
        <type>struct <ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_s</ref></type>
        <definition>typedef struct vrna_plot_layout_s vrna_plot_layout_t</definition>
        <argsstring></argsstring>
        <name>vrna_plot_layout_t</name>
        <briefdescription>
<para>RNA secondary structure figure layout. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref>, <ref refid="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" kindref="member">vrna_plot_layout_free()</ref>, <ref refid="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" kindref="member">vrna_plot_layout_simple()</ref>, <ref refid="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" kindref="member">vrna_plot_layout_circular()</ref>, vrna_plot_layout_naview(), <ref refid="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" kindref="member">vrna_plot_layout_turtle()</ref>, <ref refid="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" kindref="member">vrna_plot_layout_puzzler()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="1" column="0" bodyfile="ViennaRNA/plotting/layouts.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__plotting__utils__deprecated_1ga5964c4581431b098b80027d6e14dcdd4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int rna_plot_type</definition>
        <argsstring></argsstring>
        <name>rna_plot_type</name>
        <briefdescription>
<para>Switch for changing the secondary structure layout algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para>Current possibility are 0 for a simple radial drawing or 1 for the modified radial drawing taken from the <emphasis>naview</emphasis> program of <verbatim>embed:rst:inline :cite:t:`bruccoleri:1988` </verbatim>.</para>
<para><simplesect kind="note"><para>To provide thread safety please do not rely on this global variable in future implementations but pass a plot type flag directly to the function that decides which layout algorithm it may use!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1gae6d17b9f0a53cf5205a9181e0f8422e9" kindref="member">VRNA_PLOT_TYPE_SIMPLE</ref>, <ref refid="group__plot__layout__utils_1ga94d4c863ecac2f220f76658afb92f964" kindref="member">VRNA_PLOT_TYPE_NAVIEW</ref>, <ref refid="group__plot__layout__utils_1ga8c9eac631348da92136c8363ecdd9fb9" kindref="member">VRNA_PLOT_TYPE_CIRCULAR</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="479" column="12" declfile="ViennaRNA/plotting/layouts.h" declline="479" declcolumn="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" kindref="member">vrna_plot_layout_t</ref> *</type>
        <definition>vrna_plot_layout_t* vrna_plot_layout</definition>
        <argsstring>(const char *structure, unsigned int plot_type)</argsstring>
        <name>vrna_plot_layout</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>plot_type</declname>
        </param>
        <briefdescription>
<para>Create a layout (coordinates, etc.) for a secondary structure plot. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to create a secondary structure nucleotide layout that is then further processed by an actual plotting function. The layout algorithm can be specified using the <computeroutput>plot_type</computeroutput> parameter, and the following algorithms are currently supported:<itemizedlist>
<listitem><para><ref refid="group__plot__layout__utils_1gae6d17b9f0a53cf5205a9181e0f8422e9" kindref="member">VRNA_PLOT_TYPE_SIMPLE</ref></para>
</listitem><listitem><para><ref refid="group__plot__layout__utils_1ga94d4c863ecac2f220f76658afb92f964" kindref="member">VRNA_PLOT_TYPE_NAVIEW</ref></para>
</listitem><listitem><para><ref refid="group__plot__layout__utils_1ga8c9eac631348da92136c8363ecdd9fb9" kindref="member">VRNA_PLOT_TYPE_CIRCULAR</ref></para>
</listitem><listitem><para><ref refid="group__plot__layout__utils_1ga382c1c5c0b1943500aa4bb55b7658a33" kindref="member">VRNA_PLOT_TYPE_TURTLE</ref></para>
</listitem><listitem><para><ref refid="group__plot__layout__utils_1ga64ec68055e241d11f659edb50f27ecae" kindref="member">VRNA_PLOT_TYPE_PUZZLER</ref></para>
</listitem></itemizedlist>
</para>
<para>Passing an unsupported selection leads to the default algorithm <ref refid="group__plot__layout__utils_1ga94d4c863ecac2f220f76658afb92f964" kindref="member">VRNA_PLOT_TYPE_NAVIEW</ref></para>
<para><simplesect kind="note"><para>If only X-Y coordinates of the corresponding structure layout are required, consider using <ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref> instead!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" kindref="member">vrna_plot_layout_free()</ref>, <ref refid="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" kindref="member">vrna_plot_layout_simple()</ref>, vrna_plot_layout_naview(), <ref refid="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" kindref="member">vrna_plot_layout_circular()</ref>, <ref refid="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" kindref="member">vrna_plot_layout_turtle()</ref>, <ref refid="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" kindref="member">vrna_plot_layout_puzzler()</ref>, <ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref>, vrna_file_PS_rnaplot_layout()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plot_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout algorithm to be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The layout data structure for the provided secondary structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="133" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="133" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" kindref="member">vrna_plot_layout_t</ref> *</type>
        <definition>vrna_plot_layout_t* vrna_plot_layout_simple</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>vrna_plot_layout_simple</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Create a layout (coordinates, etc.) for a <emphasis>simple</emphasis> secondary structure plot. </para>
        </briefdescription>
        <detaileddescription>
<para>This function basically is a wrapper to <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref> that passes the <computeroutput>plot_type</computeroutput> <ref refid="group__plot__layout__utils_1gae6d17b9f0a53cf5205a9181e0f8422e9" kindref="member">VRNA_PLOT_TYPE_SIMPLE</ref>.</para>
<para><simplesect kind="note"><para>If only X-Y coordinates of the corresponding structure layout are required, consider using <ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple()</ref> instead!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" kindref="member">vrna_plot_layout_free()</ref>, <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref>, vrna_plot_layout_naview(), <ref refid="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" kindref="member">vrna_plot_layout_circular()</ref>, <ref refid="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" kindref="member">vrna_plot_layout_turtle()</ref>, <ref refid="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" kindref="member">vrna_plot_layout_puzzler()</ref>, <ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple()</ref>, vrna_file_PS_rnaplot_layout()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The layout data structure for the provided secondary structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="153" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="153" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" kindref="member">vrna_plot_layout_t</ref> *</type>
        <definition>vrna_plot_layout_t* vrna_plot_layout_circular</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>vrna_plot_layout_circular</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Create a layout (coordinates, etc.) for a <emphasis>circular</emphasis> secondary structure plot. </para>
        </briefdescription>
        <detaileddescription>
<para>This function basically is a wrapper to <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref> that passes the <computeroutput>plot_type</computeroutput> <ref refid="group__plot__layout__utils_1ga8c9eac631348da92136c8363ecdd9fb9" kindref="member">VRNA_PLOT_TYPE_CIRCULAR</ref>.</para>
<para><simplesect kind="note"><para>If only X-Y coordinates of the corresponding structure layout are required, consider using <ref refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" kindref="member">vrna_plot_coords_circular()</ref> instead!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" kindref="member">vrna_plot_layout_free()</ref>, <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref>, vrna_plot_layout_naview(), <ref refid="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" kindref="member">vrna_plot_layout_simple()</ref>, <ref refid="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" kindref="member">vrna_plot_layout_turtle()</ref>, <ref refid="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" kindref="member">vrna_plot_layout_puzzler()</ref>, <ref refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" kindref="member">vrna_plot_coords_circular()</ref>, vrna_file_PS_rnaplot_layout()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The layout data structure for the provided secondary structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="192" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="192" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" kindref="member">vrna_plot_layout_t</ref> *</type>
        <definition>vrna_plot_layout_t* vrna_plot_layout_turtle</definition>
        <argsstring>(const char *structure)</argsstring>
        <name>vrna_plot_layout_turtle</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Create a layout (coordinates, etc.) for a secondary structure plot using the <emphasis>Turtle Algorithm</emphasis> <verbatim>embed:rst:inline :cite:p:`wiegreffe:2018` </verbatim>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function basically is a wrapper to <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref> that passes the <computeroutput>plot_type</computeroutput> <ref refid="group__plot__layout__utils_1ga382c1c5c0b1943500aa4bb55b7658a33" kindref="member">VRNA_PLOT_TYPE_TURTLE</ref>.</para>
<para><simplesect kind="note"><para>If only X-Y coordinates of the corresponding structure layout are required, consider using <ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle()</ref> instead!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" kindref="member">vrna_plot_layout_free()</ref>, <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref>, <ref refid="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" kindref="member">vrna_plot_layout_simple()</ref>, <ref refid="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" kindref="member">vrna_plot_layout_circular()</ref>, vrna_plot_layout_naview(), <ref refid="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" kindref="member">vrna_plot_layout_puzzler()</ref>, <ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle()</ref>, vrna_file_PS_rnaplot_layout()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The layout data structure for the provided secondary structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="211" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="211" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" kindref="member">vrna_plot_layout_t</ref> *</type>
        <definition>vrna_plot_layout_t* vrna_plot_layout_puzzler</definition>
        <argsstring>(const char *structure, vrna_plot_options_puzzler_t *options)</argsstring>
        <name>vrna_plot_layout_puzzler</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type><ref refid="structvrna__plot__options__puzzler__t" kindref="compound">vrna_plot_options_puzzler_t</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Create a layout (coordinates, etc.) for a secondary structure plot using the <emphasis>RNApuzzler Algorithm</emphasis> <verbatim>embed:rst:inline :cite:p:`wiegreffe:2018` </verbatim>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function basically is a wrapper to <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref> that passes the <computeroutput>plot_type</computeroutput> <ref refid="group__plot__layout__utils_1ga64ec68055e241d11f659edb50f27ecae" kindref="member">VRNA_PLOT_TYPE_PUZZLER</ref>.</para>
<para><simplesect kind="note"><para>If only X-Y coordinates of the corresponding structure layout are required, consider using <ref refid="group__plot__layout__utils_1gafd49896df8780c9669125429bc0da9b3" kindref="member">vrna_plot_coords_puzzler()</ref> instead!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" kindref="member">vrna_plot_layout_free()</ref>, <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref>, <ref refid="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" kindref="member">vrna_plot_layout_simple()</ref>, <ref refid="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" kindref="member">vrna_plot_layout_circular()</ref>, vrna_plot_layout_naview(), <ref refid="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" kindref="member">vrna_plot_layout_turtle()</ref>, <ref refid="group__plot__layout__utils_1gafd49896df8780c9669125429bc0da9b3" kindref="member">vrna_plot_coords_puzzler()</ref>, vrna_file_PS_rnaplot_layout()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The layout data structure for the provided secondary structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="230" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="230" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_plot_layout_free</definition>
        <argsstring>(vrna_plot_layout_t *layout)</argsstring>
        <name>vrna_plot_layout_free</name>
        <param>
          <type><ref refid="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" kindref="member">vrna_plot_layout_t</ref> *</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
<para>Free memory occupied by a figure layout data structure. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" kindref="member">vrna_plot_layout_t</ref>, <ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout()</ref>, <ref refid="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" kindref="member">vrna_plot_layout_simple()</ref>, <ref refid="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" kindref="member">vrna_plot_layout_circular()</ref>, vrna_plot_layout_naview(), <ref refid="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" kindref="member">vrna_plot_layout_turtle()</ref>, <ref refid="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" kindref="member">vrna_plot_layout_puzzler()</ref>, vrna_file_PS_rnaplot_layout()</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout data structure to free </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="244" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="244" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_plot_coords</definition>
        <argsstring>(const char *structure, float **x, float **y, int plot_type)</argsstring>
        <name>vrna_plot_coords</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>plot_type</declname>
        </param>
        <briefdescription>
<para>Compute nucleotide coordinates for secondary structure plot. </para>
        </briefdescription>
        <detaileddescription>
<para>This function takes a secondary structure and computes X-Y coordinates for each nucleotide that then can be used to create a structure plot. The parameter <computeroutput>plot_type</computeroutput> is used to select the underlying layout algorithm. Currently, the following selections are provided:<itemizedlist>
<listitem><para><ref refid="group__plot__layout__utils_1gae6d17b9f0a53cf5205a9181e0f8422e9" kindref="member">VRNA_PLOT_TYPE_SIMPLE</ref></para>
</listitem><listitem><para><ref refid="group__plot__layout__utils_1ga94d4c863ecac2f220f76658afb92f964" kindref="member">VRNA_PLOT_TYPE_NAVIEW</ref></para>
</listitem><listitem><para><ref refid="group__plot__layout__utils_1ga8c9eac631348da92136c8363ecdd9fb9" kindref="member">VRNA_PLOT_TYPE_CIRCULAR</ref></para>
</listitem><listitem><para><ref refid="group__plot__layout__utils_1ga382c1c5c0b1943500aa4bb55b7658a33" kindref="member">VRNA_PLOT_TYPE_TURTLE</ref></para>
</listitem><listitem><para><ref refid="group__plot__layout__utils_1ga64ec68055e241d11f659edb50f27ecae" kindref="member">VRNA_PLOT_TYPE_PUZZLER</ref></para>
</listitem></itemizedlist>
</para>
<para>Passing an unsupported selection leads to the default algorithm <ref refid="group__plot__layout__utils_1ga94d4c863ecac2f220f76658afb92f964" kindref="member">VRNA_PLOT_TYPE_NAVIEW</ref></para>
<para>Here is a simple example how to use this function, assuming variable <computeroutput>structure</computeroutput> contains a valid dot-bracket string: <programlisting filename=".c"><codeline><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,<sp/>*y;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords</ref>(structure,<sp/>&amp;x,<sp/>&amp;y))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;all<sp/>fine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;some<sp/>failure<sp/>occured!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">free(x);</highlight></codeline>
<codeline><highlight class="normal">free(y);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="note"><para>On success, this function allocates memory for X and Y coordinates and assigns the pointers at addressess <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> to the corresponding memory locations. It&apos;s the users responsibility to cleanup this memory after usage!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1gaccd6a87cb324b7d680e5dd93e112738b" kindref="member">vrna_plot_coords_pt()</ref>, <ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple()</ref>, vrna_plot_coords_naview() <ref refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" kindref="member">vrna_plot_coords_circular()</ref>, <ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle()</ref>, <ref refid="group__plot__layout__utils_1gafd49896df8780c9669125429bc0da9b3" kindref="member">vrna_plot_coords_puzzler()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of X coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of Y coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plot_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout algorithm to be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the structure on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="291" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="291" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1gaccd6a87cb324b7d680e5dd93e112738b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_plot_coords_pt</definition>
        <argsstring>(const short *pt, float **x, float **y, int plot_type)</argsstring>
        <name>vrna_plot_coords_pt</name>
        <param>
          <type>const short *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>plot_type</declname>
        </param>
        <briefdescription>
<para>Compute nucleotide coordinates for secondary structure plot. </para>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref> but takes a pair table with the structure information as input.</para>
<para><simplesect kind="note"><para>On success, this function allocates memory for X and Y coordinates and assigns the pointers at addressess <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> to the corresponding memory locations. It&apos;s the users responsibility to cleanup this memory after usage!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref>, <ref refid="group__plot__layout__utils_1ga76788091848e73cfb24b31536e22b7dd" kindref="member">vrna_plot_coords_simple_pt()</ref>, vrna_plot_coords_naview_pt() <ref refid="group__plot__layout__utils_1gaeec80faa235f3ca489bc5e50adc41460" kindref="member">vrna_plot_coords_circular_pt()</ref>, <ref refid="group__plot__layout__utils_1ga3d3531ebbca9054240c73bff115c4dcf" kindref="member">vrna_plot_coords_turtle_pt()</ref>, <ref refid="group__plot__layout__utils_1gab50a90dd6000a1920d741537af7e0b24" kindref="member">vrna_plot_coords_puzzler_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair table that holds the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of X coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of Y coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plot_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout algorithm to be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the structure on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="317" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="317" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_plot_coords_simple</definition>
        <argsstring>(const char *structure, float **x, float **y)</argsstring>
        <name>vrna_plot_coords_simple</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Compute nucleotide coordinates for secondary structure plot the <emphasis>Simple way</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>This function basically is a wrapper to <ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref> that passes the <computeroutput>plot_type</computeroutput> <ref refid="group__plot__layout__utils_1gae6d17b9f0a53cf5205a9181e0f8422e9" kindref="member">VRNA_PLOT_TYPE_SIMPLE</ref>.</para>
<para>Here is a simple example how to use this function, assuming variable <computeroutput>structure</computeroutput> contains a valid dot-bracket string: <programlisting filename=".c"><codeline><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,<sp/>*y;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple</ref>(structure,<sp/>&amp;x,<sp/>&amp;y))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;all<sp/>fine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;some<sp/>failure<sp/>occured!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">free(x);</highlight></codeline>
<codeline><highlight class="normal">free(y);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="note"><para>On success, this function allocates memory for X and Y coordinates and assigns the pointers at addressess <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> to the corresponding memory locations. It&apos;s the users responsibility to cleanup this memory after usage!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref>, <ref refid="group__plot__layout__utils_1ga76788091848e73cfb24b31536e22b7dd" kindref="member">vrna_plot_coords_simple_pt()</ref>, <ref refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" kindref="member">vrna_plot_coords_circular()</ref>, vrna_plot_coords_naview(), <ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle()</ref>, <ref refid="group__plot__layout__utils_1gafd49896df8780c9669125429bc0da9b3" kindref="member">vrna_plot_coords_puzzler()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of X coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of Y coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the structure on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="356" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="356" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga76788091848e73cfb24b31536e22b7dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_plot_coords_simple_pt</definition>
        <argsstring>(const short *pt, float **x, float **y)</argsstring>
        <name>vrna_plot_coords_simple_pt</name>
        <param>
          <type>const short *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Compute nucleotide coordinates for secondary structure plot the <emphasis>Simple way</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple()</ref> but takes a pair table with the structure information as input.</para>
<para><simplesect kind="note"><para>On success, this function allocates memory for X and Y coordinates and assigns the pointers at addressess <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> to the corresponding memory locations. It&apos;s the users responsibility to cleanup this memory after usage!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1gaccd6a87cb324b7d680e5dd93e112738b" kindref="member">vrna_plot_coords_pt()</ref>, <ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple()</ref>, <ref refid="group__plot__layout__utils_1gaeec80faa235f3ca489bc5e50adc41460" kindref="member">vrna_plot_coords_circular_pt()</ref>, vrna_plot_coords_naview_pt(), <ref refid="group__plot__layout__utils_1ga3d3531ebbca9054240c73bff115c4dcf" kindref="member">vrna_plot_coords_turtle_pt()</ref>, <ref refid="group__plot__layout__utils_1gab50a90dd6000a1920d741537af7e0b24" kindref="member">vrna_plot_coords_puzzler_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair table that holds the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of X coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of Y coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the structure on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="380" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="380" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_plot_coords_circular</definition>
        <argsstring>(const char *structure, float **x, float **y)</argsstring>
        <name>vrna_plot_coords_circular</name>
        <param>
          <type>const char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Compute coordinates of nucleotides mapped in equal distancies onto a unit circle. </para>
        </briefdescription>
        <detaileddescription>
<para>This function basically is a wrapper to <ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref> that passes the <computeroutput>plot_type</computeroutput> <ref refid="group__plot__layout__utils_1ga8c9eac631348da92136c8363ecdd9fb9" kindref="member">VRNA_PLOT_TYPE_CIRCULAR</ref>.</para>
<para>In order to draw nice arcs using quadratic bezier curves that connect base pairs one may calculate a second tangential point <formula id="128">$P^t$</formula> in addition to the actual R<superscript>2</superscript> coordinates. the simplest way to do so may be to compute a radius scaling factor <formula id="129">$rs$</formula> in the interval <formula id="130">$[0,1]$</formula> that weights the proportion of base pair span to the actual length of the sequence. This scaling factor can then be used to calculate the coordinates for <formula id="128">$P^t$</formula>, i.e.</para>
<para><formula id="131">\[ P^{t}_x[i] = X[i] * rs \]</formula></para>
<para>and</para>
<para><formula id="132">\[ P^{t}_y[i] = Y[i] * rs \]</formula>.</para>
<para><simplesect kind="note"><para>On success, this function allocates memory for X and Y coordinates and assigns the pointers at addressess <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> to the corresponding memory locations. It&apos;s the users responsibility to cleanup this memory after usage!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords()</ref>, <ref refid="group__plot__layout__utils_1gaeec80faa235f3ca489bc5e50adc41460" kindref="member">vrna_plot_coords_circular_pt()</ref>, <ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple()</ref>, vrna_plot_coords_naview(), <ref refid="group__plot__layout__utils_1ga195139110e2877b92c7f82d05b6dad19" kindref="member">vrna_plot_coords_turtle()</ref>, <ref refid="group__plot__layout__utils_1gafd49896df8780c9669125429bc0da9b3" kindref="member">vrna_plot_coords_puzzler()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>The secondary structure in dot-bracket notation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of X coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of Y coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the structure on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="415" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="415" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plot__layout__utils_1gaeec80faa235f3ca489bc5e50adc41460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_plot_coords_circular_pt</definition>
        <argsstring>(const short *pt, float **x, float **y)</argsstring>
        <name>vrna_plot_coords_circular_pt</name>
        <param>
          <type>const short *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Compute nucleotide coordinates for a <emphasis>Circular Plot</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" kindref="member">vrna_plot_coords_circular()</ref> but takes a pair table with the structure information as input.</para>
<para><simplesect kind="note"><para>On success, this function allocates memory for X and Y coordinates and assigns the pointers at addressess <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> to the corresponding memory locations. It&apos;s the users responsibility to cleanup this memory after usage!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__plot__layout__utils_1gaccd6a87cb324b7d680e5dd93e112738b" kindref="member">vrna_plot_coords_pt()</ref>, <ref refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" kindref="member">vrna_plot_coords_circular()</ref>, <ref refid="group__plot__layout__utils_1ga76788091848e73cfb24b31536e22b7dd" kindref="member">vrna_plot_coords_simple_pt()</ref>, vrna_plot_coords_naview_pt(), <ref refid="group__plot__layout__utils_1ga3d3531ebbca9054240c73bff115c4dcf" kindref="member">vrna_plot_coords_turtle_pt()</ref>, <ref refid="group__plot__layout__utils_1gab50a90dd6000a1920d741537af7e0b24" kindref="member">vrna_plot_coords_puzzler_pt()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair table that holds the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of X coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">y</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer of Y coordinates (pointer will point to memory, or NULL on failure) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the structure on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="439" column="1" declfile="ViennaRNA/plotting/layouts.h" declline="439" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__plotting__utils__deprecated_1gaf4b9173e7d3fd361c3c85e6def194123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int simple_xy_coordinates</definition>
        <argsstring>(short *pair_table, float *X, float *Y)</argsstring>
        <name>simple_xy_coordinates</name>
        <param>
          <type>short *</type>
          <declname>pair_table</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>X</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Calculate nucleotide coordinates for secondary structure plot the <emphasis>Simple way</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__struct__utils__deprecated_1ga89c32307ee50a0026f4a3131fac0845a" kindref="member">make_pair_table()</ref>, <ref refid="group__plotting__utils__deprecated_1ga5964c4581431b098b80027d6e14dcdd4" kindref="member">rna_plot_type</ref>, <ref refid="group__plotting__utils__deprecated_1gac4ea13d35308f09940178d2b05a248c2" kindref="member">simple_circplot_coordinates()</ref>, naview_xy_coordinates(), <ref refid="group__plotting__utils_1ga139a31dd0ba9fc6612431f67de901c31" kindref="member">vrna_file_PS_rnaplot_a()</ref>, <ref refid="group__plotting__utils_1gabdc8f6548ba4a3bc3cd868ccbcfdb86a" kindref="member">vrna_file_PS_rnaplot</ref>, <ref refid="group__plotting__utils_1gae7853539b5df98f294b4af434e979304" kindref="member">svg_rna_plot()</ref></para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000175"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Consider switching to <ref refid="group__plot__layout__utils_1ga76788091848e73cfb24b31536e22b7dd" kindref="member">vrna_plot_coords_simple_pt()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pair_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair table of the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to an array with enough allocated space to hold the x coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to an array with enough allocated space to hold the y coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of sequence on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="499" column="17" declfile="ViennaRNA/plotting/layouts.h" declline="499" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__plotting__utils__deprecated_1gac4ea13d35308f09940178d2b05a248c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int simple_circplot_coordinates</definition>
        <argsstring>(short *pair_table, float *x, float *y)</argsstring>
        <name>simple_circplot_coordinates</name>
        <param>
          <type>short *</type>
          <declname>pair_table</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Calculate nucleotide coordinates for <emphasis>Circular Plot</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the coordinates of nucleotides mapped in equal distancies onto a unit circle.</para>
<para><simplesect kind="note"><para>In order to draw nice arcs using quadratic bezier curves that connect base pairs one may calculate a second tangential point <formula id="128">$P^t$</formula> in addition to the actual R<superscript>2</superscript> coordinates. the simplest way to do so may be to compute a radius scaling factor <formula id="129">$rs$</formula> in the interval <formula id="130">$[0,1]$</formula> that weights the proportion of base pair span to the actual length of the sequence. This scaling factor can then be used to calculate the coordinates for <formula id="128">$P^t$</formula>, i.e. <formula id="133">$ P^{t}_x[i] = X[i] * rs$</formula> and <formula id="134">$P^{t}_y[i] = Y[i] * rs$</formula>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__struct__utils__deprecated_1ga89c32307ee50a0026f4a3131fac0845a" kindref="member">make_pair_table()</ref>, <ref refid="group__plotting__utils__deprecated_1ga5964c4581431b098b80027d6e14dcdd4" kindref="member">rna_plot_type</ref>, <ref refid="group__plotting__utils__deprecated_1gaf4b9173e7d3fd361c3c85e6def194123" kindref="member">simple_xy_coordinates()</ref>, naview_xy_coordinates(), <ref refid="group__plotting__utils_1ga139a31dd0ba9fc6612431f67de901c31" kindref="member">vrna_file_PS_rnaplot_a()</ref>, <ref refid="group__plotting__utils_1gabdc8f6548ba4a3bc3cd868ccbcfdb86a" kindref="member">vrna_file_PS_rnaplot</ref>, <ref refid="group__plotting__utils_1gae7853539b5df98f294b4af434e979304" kindref="member">svg_rna_plot()</ref></para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000176"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Consider switching to <ref refid="group__plot__layout__utils_1gaeec80faa235f3ca489bc5e50adc41460" kindref="member">vrna_plot_coords_circular_pt()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pair_table</parametername>
</parameternamelist>
<parameterdescription>
<para>The pair table of the secondary structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to an array with enough allocated space to hold the x coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to an array with enough allocated space to hold the y coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of sequence on success, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/plotting/layouts.h" line="528" column="17" declfile="ViennaRNA/plotting/layouts.h" declline="528" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Secondary structure plot layout algorithms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="group__plot__layout__utils_1gac986fe092abc2a6a93ceb5141e4dd28b" refkind="member"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_PLOT_LAYOUTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_PLOT_LAYOUTS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_s</ref><sp/><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_t</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="datastructures_2basic_8h" kindref="compound">ViennaRNA/datastructures/basic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WITH_NAVIEW_LAYOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ViennaRNA/plotting/naview/naview.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="RNAturtle_8h" kindref="compound">ViennaRNA/plotting/RNApuzzler/RNAturtle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="RNApuzzler_8h" kindref="compound">ViennaRNA/plotting/RNApuzzler/RNApuzzler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__plot__layout__utils_1gae6d17b9f0a53cf5205a9181e0f8422e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_PLOT_TYPE_SIMPLE<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__plot__layout__utils_1ga94d4c863ecac2f220f76658afb92f964" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_PLOT_TYPE_NAVIEW<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__plot__layout__utils_1ga8c9eac631348da92136c8363ecdd9fb9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_PLOT_TYPE_CIRCULAR<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__plot__layout__utils_1ga382c1c5c0b1943500aa4bb55b7658a33" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_PLOT_TYPE_TURTLE<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__plot__layout__utils_1ga64ec68055e241d11f659edb50f27ecae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_PLOT_TYPE_PUZZLER<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WITH_NAVIEW_LAYOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>VRNA_PLOT_TYPE_DEFAULT<sp/><sp/>VRNA_PLOT_TYPE_NAVIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>VRNA_PLOT_TYPE_DEFAULT<sp/><sp/>VRNA_PLOT_TYPE_PUZZLER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="structvrna__plot__layout__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_s</ref><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>length;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arcs;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox[4];</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_t</ref><sp/>*</highlight></codeline>
<codeline lineno="133" refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga7953b759eada86c61b0a4aebe0dc67d1" kindref="member">vrna_plot_layout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*structure,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>plot_type);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_t</ref><sp/>*</highlight></codeline>
<codeline lineno="153" refid="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga8b09019a429c7c2447be94901c7ed658" kindref="member">vrna_plot_layout_simple</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WITH_NAVIEW_LAYOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_t</ref><sp/>*</highlight></codeline>
<codeline lineno="173"><highlight class="normal">vrna_plot_layout_naview(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_t</ref><sp/>*</highlight></codeline>
<codeline lineno="192" refid="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga41d94adbd42e1a570d840756e6dd6909" kindref="member">vrna_plot_layout_circular</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_t</ref><sp/>*</highlight></codeline>
<codeline lineno="211" refid="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga4ecd3401e22933a44bf31d14320e59b1" kindref="member">vrna_plot_layout_turtle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_t</ref><sp/>*</highlight></codeline>
<codeline lineno="230" refid="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga57f815d56c8c083c016381213f581f1e" kindref="member">vrna_plot_layout_puzzler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*structure,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__plot__options__puzzler__t" kindref="compound">vrna_plot_options_puzzler_t</ref><sp/><sp/>*options);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga996128730020a2d7a7368b4248195931" kindref="member">vrna_plot_layout_free</ref>(<ref refid="structvrna__plot__layout__s" kindref="compound">vrna_plot_layout_t</ref><sp/>*layout);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga2e2adbef0283a8ff2dfe5284eb1f4a6a" kindref="member">vrna_plot_coords</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*structure,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>**x,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>**y,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plot_type);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group__plot__layout__utils_1gaccd6a87cb324b7d680e5dd93e112738b" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1gaccd6a87cb324b7d680e5dd93e112738b" kindref="member">vrna_plot_coords_pt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*pt,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**x,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**y,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plot_type);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1gaea0dada4d0113d16d4890bc0937292e6" kindref="member">vrna_plot_coords_simple</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*structure,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**x,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**y);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="group__plot__layout__utils_1ga76788091848e73cfb24b31536e22b7dd" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga76788091848e73cfb24b31536e22b7dd" kindref="member">vrna_plot_coords_simple_pt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>*pt,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**x,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**y);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1ga47ff1fd92e9658361a758fdb03122911" kindref="member">vrna_plot_coords_circular</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*structure,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**x,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**y);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="group__plot__layout__utils_1gaeec80faa235f3ca489bc5e50adc41460" refkind="member"><highlight class="normal"><ref refid="group__plot__layout__utils_1gaeec80faa235f3ca489bc5e50adc41460" kindref="member">vrna_plot_coords_circular_pt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>*pt,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**x,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**y);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VRNA_DISABLE_BACKWARD_COMPATIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="structCOORDINATE" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>X;<sp/><sp/></highlight><highlight class="comment">/*<sp/>X<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Y;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Y<sp/>coords<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal">}<sp/><ref refid="structCOORDINATE" kindref="compound">COORDINATE</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__plotting__utils__deprecated_1ga5964c4581431b098b80027d6e14dcdd4" kindref="member">rna_plot_type</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plotting__utils__deprecated_1gaf4b9173e7d3fd361c3c85e6def194123" kindref="member">simple_xy_coordinates</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>*pair_table,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>*X,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>*Y),</highlight></codeline>
<codeline lineno="499" refid="group__plotting__utils__deprecated_1gaf4b9173e7d3fd361c3c85e6def194123" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_plot_coords_simple_pt()<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plotting__utils__deprecated_1gac4ea13d35308f09940178d2b05a248c2" kindref="member">simple_circplot_coordinates</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>*pair_table,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>*x,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>*y),</highlight></codeline>
<codeline lineno="528" refid="group__plotting__utils__deprecated_1gac4ea13d35308f09940178d2b05a248c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_plot_coords_circular_pt()<sp/>instead!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/plotting/layouts.h"/>
  </compounddef>
</doxygen>
