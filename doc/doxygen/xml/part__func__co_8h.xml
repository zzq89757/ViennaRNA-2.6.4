<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="part__func__co_8h" kind="file" language="C++">
    <compoundname>part_func_co.h</compoundname>
    <includes refid="datastructures_2basic_8h" local="no">ViennaRNA/datastructures/basic.h</includes>
    <includes refid="params_2basic_8h" local="no">ViennaRNA/params/basic.h</includes>
    <includes refid="part__func_8h" local="no">ViennaRNA/part_func.h</includes>
    <includes refid="equilibrium__probs_8h" local="no">ViennaRNA/equilibrium_probs.h</includes>
    <includes refid="concentrations_8h" local="no">ViennaRNA/concentrations.h</includes>
    <includes refid="utils_2structures_8h" local="no">ViennaRNA/utils/structures.h</includes>
    <incdepgraph>
      <node id="5">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ViennaRNA/equilibrium_probs.h</label>
        <link refid="equilibrium__probs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ViennaRNA/params/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ViennaRNA/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/part_func_co.h</label>
        <link refid="part__func__co_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ViennaRNA/concentrations.h</label>
        <link refid="concentrations_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ViennaRNA/centroid.h</label>
        <link refid="centroid_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ViennaRNA/zscore.h</label>
        <link refid="zscore_8h_source"/>
      </node>
      <node id="20">
        <label>ViennaRNA/part_func.h</label>
        <link refid="part__func_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ViennaRNA/structured_domains.h</label>
        <link refid="structured__domains_8h"/>
      </node>
      <node id="10">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdio.h</label>
      </node>
      <node id="23">
        <label>ViennaRNA/boltzmann_sampling.h</label>
        <link refid="boltzmann__sampling_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="part__func__co_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="13" column="11" bodyfile="ViennaRNA/part_func_co.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__pf__cofold_1gaff27888c4088cc1f60fd59cbd589474c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mirnatog</definition>
        <argsstring></argsstring>
        <name>mirnatog</name>
        <briefdescription>
<para>Toggles no intrabp in 2nd mol. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="37" column="15" declfile="ViennaRNA/part_func_co.h" declline="37" declcolumn="15"/>
      </memberdef>
      <memberdef kind="variable" id="group__pf__cofold_1gac2d1851a710a8561390861155ca988fe" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double F_monomer[2]</definition>
        <argsstring>[2]</argsstring>
        <name>F_monomer</name>
        <briefdescription>
<para>Free energies of the two monomers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="42" column="15" declfile="ViennaRNA/part_func_co.h" declline="42" declcolumn="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__part__func__global__deprecated_1gae5c1e7331718669bdae7a86de2be6184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__pf__cofold_1ga444df1587c9a2ca15b8eb25188f629c3" kindref="member">vrna_dimer_pf_t</ref></type>
        <definition>vrna_dimer_pf_t co_pf_fold</definition>
        <argsstring>(char *sequence, char *structure)</argsstring>
        <name>co_pf_fold</name>
        <param>
          <type>char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>structure</declname>
        </param>
        <briefdescription>
<para>Calculate partition function and base pair probabilities. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the cofold partition function folding. The second molecule starts at the <ref refid="fold__vars_8h_1ab9b2c3a37a5516614c06d0ab54b97cda" kindref="member">cut_point</ref> nucleotide.</para>
<para><simplesect kind="note"><para>OpenMP: Since this function relies on the global parameters <ref refid="group__model__details_1gad512b5dd4dbec60faccfe137bb474489" kindref="member">do_backtrack</ref>, <ref refid="group__model__details_1ga72b511ed1201f7e23ec437e468790d74" kindref="member">dangles</ref>, <ref refid="group__model__details_1gab4b11c8d9c758430960896bc3fe82ead" kindref="member">temperature</ref> and <ref refid="group__model__details_1gad3b22044065acc6dee0af68931b52cfd" kindref="member">pf_scale</ref> it is not threadsafe according to concurrent changes in these variables! Use <ref refid="group__part__func__global__deprecated_1gaabfc6cb6d02b8f08ac4c92f4f5b125d9" kindref="member">co_pf_fold_par()</ref> instead to circumvent this issue.</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000114"><xreftitle>Deprecated</xreftitle><xrefdescription><para>{Use <ref refid="group__part__func__global_1gae796019c176a158f0e9d7741a85c1743" kindref="member">vrna_pf_dimer()</ref> instead!}</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>Concatenated RNA sequences </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>Will hold the structure or constraints </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vrna_dimer_pf_t structure containing a set of energies needed for concentration computations. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="78" column="18" declfile="ViennaRNA/part_func_co.h" declline="78" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__part__func__global__deprecated_1gaabfc6cb6d02b8f08ac4c92f4f5b125d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__pf__cofold_1ga444df1587c9a2ca15b8eb25188f629c3" kindref="member">vrna_dimer_pf_t</ref></type>
        <definition>vrna_dimer_pf_t co_pf_fold_par</definition>
        <argsstring>(char *sequence, char *structure, vrna_exp_param_t *parameters, int calculate_bppm, int is_constrained)</argsstring>
        <name>co_pf_fold_par</name>
        <param>
          <type>char *</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>structure</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>calculate_bppm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_constrained</declname>
        </param>
        <briefdescription>
<para>Calculate partition function and base pair probabilities. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the cofold partition function folding. The second molecule starts at the <ref refid="fold__vars_8h_1ab9b2c3a37a5516614c06d0ab54b97cda" kindref="member">cut_point</ref> nucleotide.</para>
<para><xrefsect id="deprecated_1_deprecated000115"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__part__func__global_1gae796019c176a158f0e9d7741a85c1743" kindref="member">vrna_pf_dimer()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__energy__parameters_1gaef2b931c7e9d4ffb0a5c33df50ec2068" kindref="member">get_boltzmann_factors()</ref>, <ref refid="group__part__func__global__deprecated_1gae5c1e7331718669bdae7a86de2be6184" kindref="member">co_pf_fold()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>Concatenated RNA sequences </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>structure</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure constraint </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Data structure containing the precalculated Boltzmann factors </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>calculate_bppm</parametername>
</parameternamelist>
<parameterdescription>
<para>Switch to turn Base pair probability calculations on/off (0==off) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_constrained</parametername>
</parameternamelist>
<parameterdescription>
<para>Switch to indicate that a structure contraint is passed via the structure argument (0==off) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vrna_dimer_pf_t structure containing a set of energies needed for concentration computations. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="106" column="18" declfile="ViennaRNA/part_func_co.h" declline="106" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="part__func__co_8h_1afb35675f133966dc9f8a8c2c9686e13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__struct__utils__plist_1gab9ac98ab55ded9fb90043b024b915aca" kindref="member">vrna_ep_t</ref> *</type>
        <definition>vrna_ep_t* get_plist</definition>
        <argsstring>(vrna_ep_t *pl, int length, double cut_off)</argsstring>
        <name>get_plist</name>
        <param>
          <type><ref refid="group__struct__utils__plist_1gab9ac98ab55ded9fb90043b024b915aca" kindref="member">vrna_ep_t</ref> *</type>
          <declname>pl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cut_off</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DO NOT USE THIS FUNCTION ANYMORE <xrefsect id="deprecated_1_deprecated000116"><xreftitle>Deprecated</xreftitle><xrefdescription><para>{ This function is deprecated and will be removed soon!} use <ref refid="group__part__func__global__deprecated_1ga1cc05aaa9b0e7df2d3887e98321c2030" kindref="member">assign_plist_from_pr()</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="116" column="12" declfile="ViennaRNA/part_func_co.h" declline="116" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__part__func__global__deprecated_1ga94c19120130e66a667a10a3c8598550c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compute_probabilities</definition>
        <argsstring>(double FAB, double FEA, double FEB, vrna_ep_t *prAB, vrna_ep_t *prA, vrna_ep_t *prB, int Alength)</argsstring>
        <name>compute_probabilities</name>
        <param>
          <type>double</type>
          <declname>FAB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>FEA</declname>
        </param>
        <param>
          <type>double</type>
          <declname>FEB</declname>
        </param>
        <param>
          <type><ref refid="group__struct__utils__plist_1gab9ac98ab55ded9fb90043b024b915aca" kindref="member">vrna_ep_t</ref> *</type>
          <declname>prAB</declname>
        </param>
        <param>
          <type><ref refid="group__struct__utils__plist_1gab9ac98ab55ded9fb90043b024b915aca" kindref="member">vrna_ep_t</ref> *</type>
          <declname>prA</declname>
        </param>
        <param>
          <type><ref refid="group__struct__utils__plist_1gab9ac98ab55ded9fb90043b024b915aca" kindref="member">vrna_ep_t</ref> *</type>
          <declname>prB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Alength</declname>
        </param>
        <briefdescription>
<para>Compute Boltzmann probabilities of dimerization without homodimers. </para>
        </briefdescription>
        <detaileddescription>
<para>Given the pair probabilities and free energies (in the null model) for a dimer AB and the two constituent monomers A and B, compute the conditional pair probabilities given that a dimer AB actually forms. Null model pair probabilities are given as a list as produced by <ref refid="group__part__func__global__deprecated_1ga1cc05aaa9b0e7df2d3887e98321c2030" kindref="member">assign_plist_from_pr()</ref>, the dimer probabilities &apos;prAB&apos; are modified in place.</para>
<para><xrefsect id="deprecated_1_deprecated000117"><xreftitle>Deprecated</xreftitle><xrefdescription><para>{ Use <ref refid="group__thermodynamics_1gaa1e39e73afb51fbaf4ae38f0c066c46b" kindref="member">vrna_pf_dimer_probs()</ref> instead!}</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FAB</parametername>
</parameternamelist>
<parameterdescription>
<para>free energy of dimer AB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FEA</parametername>
</parameternamelist>
<parameterdescription>
<para>free energy of monomer A </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FEB</parametername>
</parameternamelist>
<parameterdescription>
<para>free energy of monomer B </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prAB</parametername>
</parameternamelist>
<parameterdescription>
<para>pair probabilities for dimer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prA</parametername>
</parameternamelist>
<parameterdescription>
<para>pair probabilities monomer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prB</parametername>
</parameternamelist>
<parameterdescription>
<para>pair probabilities monomer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Alength</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of molecule A </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="146" column="7" declfile="ViennaRNA/part_func_co.h" declline="146" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__part__func__global__deprecated_1gaa12dda9dd6179cdd22bcce87c0682c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_co_pf_fold</definition>
        <argsstring>(int length)</argsstring>
        <name>init_co_pf_fold</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DO NOT USE THIS FUNCTION ANYMORE <xrefsect id="deprecated_1_deprecated000118"><xreftitle>Deprecated</xreftitle><xrefdescription><para>{ This function is deprecated and will be removed soon!}</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="154" column="9" declfile="ViennaRNA/part_func_co.h" declline="154" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__part__func__global__deprecated_1gad94c0133157bed6912fe7fe866e0039e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref> *</type>
        <definition>FLT_OR_DBL* export_co_bppm</definition>
        <argsstring>(void)</argsstring>
        <name>export_co_bppm</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a pointer to the base pair probability array. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing the base pair probabilities for a pair (i,j) is achieved by <verbatim>FLT_OR_DBL *pr = export_bppm(); pr_ij = pr[iindx[i]-j]; </verbatim></para>
<para><xrefsect id="deprecated_1_deprecated000119"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated and will be removed soon! The base pair probability array is available through the <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> data structure, and its associated <ref refid="group__dp__matrices_1ga68729ab3fed26bdd1806fa814f172fc1" kindref="member">vrna_mx_pf_t</ref> member.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="see"><para><ref refid="group__utils_1ga70b180e9ea764218a82647a1cd347445" kindref="member">vrna_idx_row_wise()</ref></para>
</simplesect>
<simplesect kind="return"><para>A pointer to the base pair probability array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="173" column="13" declfile="ViennaRNA/part_func_co.h" declline="173" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__part__func__global__deprecated_1gade3ce34ae8214811374b1d28a40dc247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_co_pf_arrays</definition>
        <argsstring>(void)</argsstring>
        <name>free_co_pf_arrays</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Free the memory occupied by <ref refid="group__part__func__global__deprecated_1gae5c1e7331718669bdae7a86de2be6184" kindref="member">co_pf_fold()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000120"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function will be removed for the new API soon! See <ref refid="group__part__func__global_1gae796019c176a158f0e9d7741a85c1743" kindref="member">vrna_pf_dimer()</ref>, <ref refid="group__fold__compound_1ga283cf113a37614a75c1388c4ec6d7b2f" kindref="member">vrna_fold_compound()</ref>, and <ref refid="group__fold__compound_1ga576a077b418a9c3650e06f8e5d296fc2" kindref="member">vrna_fold_compound_free()</ref> for an alternative</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="184" column="7" declfile="ViennaRNA/part_func_co.h" declline="184" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__part__func__global__deprecated_1ga6e0f36c1f9b7d9dd4bfbad914c1119e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_co_pf_params</definition>
        <argsstring>(int length)</argsstring>
        <name>update_co_pf_params</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Recalculate energy parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function recalculates all energy parameters given the current model settings.</para>
<para><xrefsect id="deprecated_1_deprecated000121"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1ga4abbca93defd54fa0dc797ceca36d2f0" kindref="member">vrna_exp_params_subst()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the current RNA sequence </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="199" column="7" declfile="ViennaRNA/part_func_co.h" declline="199" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="group__part__func__global__deprecated_1ga75465d7e8793db68a434d83df9a2e794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_co_pf_params_par</definition>
        <argsstring>(int length, vrna_exp_param_t *parameters)</argsstring>
        <name>update_co_pf_params_par</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="group__energy__parameters_1ga01d8b92fe734df8d79a6169482c7d8d8" kindref="member">vrna_exp_param_t</ref> *</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Recalculate energy parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function recalculates all energy parameters given the current model settings. It&apos;s second argument can either be NULL or a data structure containing the precomputed Boltzmann factors. In the first scenario, the necessary data structure will be created automatically according to the current global model settings, i.e. this mode might not be threadsafe. However, if the provided data structure is not NULL, threadsafety for the model parameters <ref refid="group__model__details_1ga72b511ed1201f7e23ec437e468790d74" kindref="member">dangles</ref>, <ref refid="group__model__details_1gad3b22044065acc6dee0af68931b52cfd" kindref="member">pf_scale</ref> and <ref refid="group__model__details_1gab4b11c8d9c758430960896bc3fe82ead" kindref="member">temperature</ref> is regained, since their values are taken from this data structure during subsequent calculations.</para>
<para><xrefsect id="deprecated_1_deprecated000122"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__energy__parameters_1ga4abbca93defd54fa0dc797ceca36d2f0" kindref="member">vrna_exp_params_subst()</ref> instead!</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the current RNA sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>data structure containing the precomputed Boltzmann factors </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/part_func_co.h" line="224" column="7" declfile="ViennaRNA/part_func_co.h" declline="224" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Partition function for two RNA sequences. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_PART_FUNC_CO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_PART_FUNC_CO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="datastructures_2basic_8h" kindref="compound">ViennaRNA/datastructures/basic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="params_2basic_8h" kindref="compound">ViennaRNA/params/basic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="part__func_8h" kindref="compound">ViennaRNA/part_func.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="equilibrium__probs_8h" kindref="compound">ViennaRNA/equilibrium_probs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="concentrations_8h" kindref="compound">ViennaRNA/concentrations.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="utils_2structures_8h" kindref="compound">ViennaRNA/utils/structures.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pf__cofold_1gaff27888c4088cc1f60fd59cbd589474c" kindref="member">mirnatog</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__pf__cofold_1gac2d1851a710a8561390861155ca988fe" kindref="member">F_monomer</ref>[2];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VRNA_DISABLE_BACKWARD_COMPATIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>#################################################</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>#<sp/>DEPRECATED<sp/>FUNCTIONS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>#################################################</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">DEPRECATED(<ref refid="structvrna__dimer__pf__s" kindref="compound">vrna_dimer_pf_t</ref><sp/><ref refid="group__part__func__global__deprecated_1gae5c1e7331718669bdae7a86de2be6184" kindref="member">co_pf_fold</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*sequence,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*structure),</highlight></codeline>
<codeline lineno="78" refid="group__part__func__global__deprecated_1gae5c1e7331718669bdae7a86de2be6184" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_pf_co_fold()<sp/>or<sp/>vrna_pf_dimer()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">DEPRECATED(<ref refid="structvrna__dimer__pf__s" kindref="compound">vrna_dimer_pf_t</ref><sp/><ref refid="group__part__func__global__deprecated_1gaabfc6cb6d02b8f08ac4c92f4f5b125d9" kindref="member">co_pf_fold_par</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sequence,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*structure,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__exp__param__s" kindref="compound">vrna_exp_param_t</ref><sp/><sp/>*parameters,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculate_bppm,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_constrained),</highlight></codeline>
<codeline lineno="106" refid="group__part__func__global__deprecated_1gaabfc6cb6d02b8f08ac4c92f4f5b125d9" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>new<sp/>API<sp/>and<sp/>vrna_pf_dimer()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">DEPRECATED(<ref refid="structvrna__elem__prob__s" kindref="compound">vrna_ep_t</ref><sp/>*<ref refid="part__func__co_8h_1afb35675f133966dc9f8a8c2c9686e13a" kindref="member">get_plist</ref>(<ref refid="structvrna__elem__prob__s" kindref="compound">vrna_ep_t</ref><sp/>*pl,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>cut_off),</highlight></codeline>
<codeline lineno="116" refid="part__func__co_8h_1afb35675f133966dc9f8a8c2c9686e13a" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_plist()<sp/>and<sp/>vrna_plist_from_probs()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__part__func__global__deprecated_1ga94c19120130e66a667a10a3c8598550c" kindref="member">compute_probabilities</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>FAB,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>FEA,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>FEB,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__elem__prob__s" kindref="compound">vrna_ep_t</ref><sp/>*prAB,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__elem__prob__s" kindref="compound">vrna_ep_t</ref><sp/>*prA,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__elem__prob__s" kindref="compound">vrna_ep_t</ref><sp/>*prB,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alength),</highlight></codeline>
<codeline lineno="146" refid="group__part__func__global__deprecated_1ga94c19120130e66a667a10a3c8598550c" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_pf_dimer_probs()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="group__part__func__global__deprecated_1gaa12dda9dd6179cdd22bcce87c0682c07" kindref="member">init_co_pf_fold</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length),</highlight></codeline>
<codeline lineno="154" refid="group__part__func__global__deprecated_1gaa12dda9dd6179cdd22bcce87c0682c07" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;This<sp/>function<sp/>is<sp/>obsolete&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">DEPRECATED(<ref refid="group__data__structures_1ga31125aeace516926bf7f251f759b6126" kindref="member">FLT_OR_DBL</ref><sp/>*<ref refid="group__part__func__global__deprecated_1gad94c0133157bed6912fe7fe866e0039e" kindref="member">export_co_bppm</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="173" refid="group__part__func__global__deprecated_1gad94c0133157bed6912fe7fe866e0039e" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>new<sp/>API<sp/>with<sp/>vrna_fold_compound_t<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__part__func__global__deprecated_1gade3ce34ae8214811374b1d28a40dc247" kindref="member">free_co_pf_arrays</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="184" refid="group__part__func__global__deprecated_1gade3ce34ae8214811374b1d28a40dc247" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;This<sp/>function<sp/>is<sp/>obsolete&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__part__func__global__deprecated_1ga6e0f36c1f9b7d9dd4bfbad914c1119e5" kindref="member">update_co_pf_params</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length),</highlight></codeline>
<codeline lineno="199" refid="group__part__func__global__deprecated_1ga6e0f36c1f9b7d9dd4bfbad914c1119e5" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;This<sp/>function<sp/>is<sp/>obsolete&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__part__func__global__deprecated_1ga75465d7e8793db68a434d83df9a2e794" kindref="member">update_co_pf_params_par</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvrna__exp__param__s" kindref="compound">vrna_exp_param_t</ref><sp/><sp/>*parameters),</highlight></codeline>
<codeline lineno="224" refid="group__part__func__global__deprecated_1ga75465d7e8793db68a434d83df9a2e794" refkind="member"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>new<sp/>API<sp/>with<sp/>vrna_fold_compound_t<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/part_func_co.h"/>
  </compounddef>
</doxygen>
