<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="commands_8h" kind="file" language="C++">
    <compoundname>commands.h</compoundname>
    <includes refid="fold__compound_8h" local="no">ViennaRNA/fold_compound.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ViennaRNA/params/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ViennaRNA/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="12">
        <label>stdlib.h</label>
      </node>
      <node id="16">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/commands.h</label>
        <link refid="commands_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="18">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ViennaRNA/zscore.h</label>
        <link refid="zscore_8h_source"/>
      </node>
      <node id="14">
        <label>ViennaRNA/structured_domains.h</label>
        <link refid="structured__domains_8h"/>
      </node>
      <node id="9">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__command__files_1gac54dec838d7b6bebd5df85f71702d324" prot="public" static="no">
        <name>VRNA_CMD_PARSE_HC</name>
        <initializer>1U</initializer>
        <briefdescription>
<para>Command parse/apply flag indicating hard constraints. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref>, <ref refid="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" kindref="member">vrna_file_commands_read()</ref>, <ref refid="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" kindref="member">vrna_file_commands_apply()</ref>, <ref refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" kindref="member">vrna_commands_apply()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="28" column="9" bodyfile="ViennaRNA/commands.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__command__files_1ga8cad3c1f83e6f149829c49a186a83e21" prot="public" static="no">
        <name>VRNA_CMD_PARSE_SC</name>
        <initializer>2U</initializer>
        <briefdescription>
<para>Command parse/apply flag indicating soft constraints. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref>, <ref refid="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" kindref="member">vrna_file_commands_read()</ref>, <ref refid="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" kindref="member">vrna_file_commands_apply()</ref>, <ref refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" kindref="member">vrna_commands_apply()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="34" column="9" bodyfile="ViennaRNA/commands.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__command__files_1ga6c6409780698826b04ebfed9151d7649" prot="public" static="no">
        <name>VRNA_CMD_PARSE_UD</name>
        <initializer>4U</initializer>
        <briefdescription>
<para>Command parse/apply flag indicating unstructured domains. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref>, <ref refid="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" kindref="member">vrna_file_commands_read()</ref>, <ref refid="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" kindref="member">vrna_file_commands_apply()</ref>, <ref refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" kindref="member">vrna_commands_apply()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="40" column="9" bodyfile="ViennaRNA/commands.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__command__files_1gaf5e20210173cdb83bf70256a454f284b" prot="public" static="no">
        <name>VRNA_CMD_PARSE_SD</name>
        <initializer>8U</initializer>
        <briefdescription>
<para>Command parse/apply flag indicating structured domains. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref>, <ref refid="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" kindref="member">vrna_file_commands_read()</ref>, <ref refid="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" kindref="member">vrna_file_commands_apply()</ref>, <ref refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" kindref="member">vrna_commands_apply()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="46" column="9" bodyfile="ViennaRNA/commands.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__command__files_1ga0a6c88e21e366dca14958d69cd024008" prot="public" static="no">
        <name>VRNA_CMD_PARSE_DEFAULTS</name>
        <initializer>                                 (<ref refid="group__command__files_1gac54dec838d7b6bebd5df85f71702d324" kindref="member">VRNA_CMD_PARSE_HC</ref> \
                                 | <ref refid="group__command__files_1ga8cad3c1f83e6f149829c49a186a83e21" kindref="member">VRNA_CMD_PARSE_SC</ref> \
                                 | <ref refid="group__command__files_1ga6c6409780698826b04ebfed9151d7649" kindref="member">VRNA_CMD_PARSE_UD</ref> \
                                 | <ref refid="group__command__files_1gaf5e20210173cdb83bf70256a454f284b" kindref="member">VRNA_CMD_PARSE_SD</ref> \
                                 )</initializer>
        <briefdescription>
<para>Command parse/apply flag indicating default set of commands. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref>, <ref refid="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" kindref="member">vrna_file_commands_read()</ref>, <ref refid="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" kindref="member">vrna_file_commands_apply()</ref>, <ref refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" kindref="member">vrna_commands_apply()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="52" column="9" bodyfile="ViennaRNA/commands.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__command__files_1ga8d6c5d6d2936464a11f542b843bd1610" prot="public" static="no">
        <name>VRNA_CMD_PARSE_SILENT</name>
        <initializer>16U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="58" column="9" bodyfile="ViennaRNA/commands.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" prot="public" static="no">
        <type>struct vrna_command_s *</type>
        <definition>typedef struct vrna_command_s* vrna_cmd_t</definition>
        <argsstring></argsstring>
        <name>vrna_cmd_t</name>
        <briefdescription>
<para>A data structure that contains commands. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="18" column="29" bodyfile="ViennaRNA/commands.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref></type>
        <definition>vrna_cmd_t vrna_file_commands_read</definition>
        <argsstring>(const char *filename, unsigned int options)</argsstring>
        <name>vrna_file_commands_read</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Extract a list of commands from a command file. </para>
        </briefdescription>
        <detaileddescription>
<para>Read a list of commands specified in the input file and return them as list of abstract commands</para>
<para><simplesect kind="see"><para><ref refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" kindref="member">vrna_commands_apply()</ref>, <ref refid="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" kindref="member">vrna_file_commands_apply()</ref>, <ref refid="group__command__files_1ga3dc372dcbb43d2c4c91b5ef79b460428" kindref="member">vrna_commands_free()</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options to limit the type of commands read from the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of abstract commands</para>
</simplesect>
<xrefsect id="wrappers_1_wrappers000033"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is available as global function <computeroutput>file_commands_read()</computeroutput>. See, e.g.  <verbatim>embed:rst:inline :py:func:`RNA.file_commands_read()` in the :doc:`/api_python` </verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="74" column="1" declfile="ViennaRNA/commands.h" declline="74" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_file_commands_apply</definition>
        <argsstring>(vrna_fold_compound_t *fc, const char *filename, unsigned int options)</argsstring>
        <name>vrna_file_commands_apply</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Apply a list of commands from a command file. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is a shortcut to directly parse a commands file and apply all successfully parsed commands to a <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> data structure. It is the same as: <programlisting filename="commands.c"><codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">vrna_command_s<sp/>*cmds;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>cmds<sp/><sp/>=<sp/><ref refid="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" kindref="member">vrna_file_commands_read</ref>(filename,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>r<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" kindref="member">vrna_commands_apply</ref>(vc,<sp/>cmds,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__command__files_1ga3dc372dcbb43d2c4c91b5ef79b460428" kindref="member">vrna_commands_free</ref>(cmds);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> the command list will be applied to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options to limit the type of commands read from the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of commands successfully applied</para>
</simplesect>
<xrefsect id="wrappers_1_wrappers000034"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>file_commands_apply()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline :py:meth:`RNA.fold_compound.file_commands_apply()` in the :doc:`/api_python` </verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="92" column="1" declfile="ViennaRNA/commands.h" declline="92" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vrna_commands_apply</definition>
        <argsstring>(vrna_fold_compound_t *fc, vrna_cmd_t commands, unsigned int options)</argsstring>
        <name>vrna_commands_apply</name>
        <param>
          <type><ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> *</type>
          <declname>fc</declname>
        </param>
        <param>
          <type><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref></type>
          <declname>commands</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Apply a list of commands to a <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__fold__compound_1ga1b0cef17fd40466cef5968eaeeff6166" kindref="member">vrna_fold_compound_t</ref> the command list will be applied to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commands</parametername>
</parameternamelist>
<parameterdescription>
<para>The commands to apply </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options to limit the type of commands read from the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of commands successfully applied</para>
</simplesect>
<xrefsect id="wrappers_1_wrappers000035"><xreftitle>SWIG Wrapper Notes</xreftitle><xrefdescription><para><parblock><para>This function is attached as method <computeroutput>commands_apply()</computeroutput> to objects of type <computeroutput>fold_compound</computeroutput>. See, e.g.  <verbatim>embed:rst:inline :py:meth:`RNA.fold_compound.commands_apply()` in the :doc:`/api_python` </verbatim>. </para>
</parblock></para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="106" column="1" declfile="ViennaRNA/commands.h" declline="106" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__command__files_1ga3dc372dcbb43d2c4c91b5ef79b460428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vrna_commands_free</definition>
        <argsstring>(vrna_cmd_t commands)</argsstring>
        <name>vrna_commands_free</name>
        <param>
          <type><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref></type>
          <declname>commands</declname>
        </param>
        <briefdescription>
<para>Free memory occupied by a list of commands. </para>
        </briefdescription>
        <detaileddescription>
<para>Release memory occupied by a list of commands <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commands</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of commands </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/commands.h" line="118" column="1" declfile="ViennaRNA/commands.h" declline="118" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parse and apply different commands that alter the behavior of secondary structure prediction and evaluation. </para>
    </briefdescription>
    <detaileddescription>
<para>, , </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_COMMANDS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_COMMANDS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">vrna_command_s<sp/>*<ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fold__compound_8h" kindref="compound">ViennaRNA/fold_compound.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__command__files_1gac54dec838d7b6bebd5df85f71702d324" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_CMD_PARSE_HC<sp/><sp/><sp/><sp/><sp/><sp/>1U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group__command__files_1ga8cad3c1f83e6f149829c49a186a83e21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_CMD_PARSE_SC<sp/><sp/><sp/><sp/><sp/><sp/>2U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__command__files_1ga6c6409780698826b04ebfed9151d7649" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_CMD_PARSE_UD<sp/><sp/><sp/><sp/><sp/><sp/>4U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__command__files_1gaf5e20210173cdb83bf70256a454f284b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_CMD_PARSE_SD<sp/><sp/><sp/><sp/><sp/><sp/>8U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__command__files_1ga0a6c88e21e366dca14958d69cd024008" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_CMD_PARSE_DEFAULTS<sp/>(VRNA_CMD_PARSE_HC<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>VRNA_CMD_PARSE_SC<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>VRNA_CMD_PARSE_UD<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>VRNA_CMD_PARSE_SD<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_CMD_PARSE_SILENT<sp/><sp/><sp/>16U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref></highlight></codeline>
<codeline lineno="74" refid="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" refkind="member"><highlight class="normal"><ref refid="group__command__files_1gae5f56400ed43683338f7bf1c1102655a" kindref="member">vrna_file_commands_read</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*filename,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>options);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" refkind="member"><highlight class="normal"><ref refid="group__command__files_1ga3118909bd91ecaeb4663b2e3bc2d5edd" kindref="member">vrna_file_commands_apply</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/>*fc,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*filename,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" refkind="member"><highlight class="normal"><ref refid="group__command__files_1ga9232cb0efe364086a8a5ee1449e537ba" kindref="member">vrna_commands_apply</ref>(<ref refid="structvrna__fc__s" kindref="compound">vrna_fold_compound_t</ref><sp/><sp/>*fc,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commands,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="group__command__files_1ga3dc372dcbb43d2c4c91b5ef79b460428" refkind="member"><highlight class="normal"><ref refid="group__command__files_1ga3dc372dcbb43d2c4c91b5ef79b460428" kindref="member">vrna_commands_free</ref>(<ref refid="group__command__files_1gaf31afe4c5f8e4bf44a670ab4c3dcd916" kindref="member">vrna_cmd_t</ref><sp/>commands);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/commands.h"/>
  </compounddef>
</doxygen>
