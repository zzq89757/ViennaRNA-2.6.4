%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Sep 30 14:37:07 2024
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: -d0 --noLP --noGU --noClosingGU 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (primer_f7,temp_r7)
} def

/sequence { (\
AGTGGGCAGTTTACCGTAAATACTCCACCCATTGACGTCAATGGAAAGTCCCTATTGGCGTTACTATGGGAACATATATGTTCCCATAggggggggggggggggggggggggGTAACGCttttttttttttttttttttttttttttCAATAGGGAgagagCTTTCCATtatatatatatatTGACGTCAATGGGTGGAGTATTTACGGTAAACTGCCCACT\
) } def
/len { sequence length } bind def

/cutpoint 77 def

/nicks [ 77 ] def
72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 222 0.964231444 ubox
2 221 0.999513508 ubox
3 220 0.999759615 ubox
4 219 0.999988168 ubox
5 218 0.999994934 ubox
6 217 0.999995708 ubox
7 216 0.999990046 ubox
8 215 0.999755263 ubox
9 214 0.999976098 ubox
10 213 0.999481723 ubox
11 212 0.998638657 ubox
12 211 0.999234025 ubox
13 210 0.999714155 ubox
14 209 0.999989986 ubox
15 208 0.999978482 ubox
16 207 0.999958186 ubox
17 206 0.999713738 ubox
18 205 0.999232713 ubox
19 204 0.998592698 ubox
20 203 0.998977645 ubox
21 202 0.999475520 ubox
22 201 0.999733353 ubox
23 200 0.999977022 ubox
24 199 0.999849129 ubox
25 198 0.999992758 ubox
26 197 0.999988347 ubox
27 196 0.999792107 ubox
28 195 0.999990195 ubox
29 194 0.999994934 ubox
30 193 0.999987900 ubox
31 192 0.999584439 ubox
32 191 0.999069645 ubox
33 190 0.999426886 ubox
34 189 0.999980449 ubox
35 188 0.999871544 ubox
36 187 0.999958276 ubox
37 186 0.999958157 ubox
38 185 0.999862751 ubox
39 184 0.999852676 ubox
40 170 0.363636049 ubox
40 183 0.926766817 ubox
41 169 0.742368174 ubox
41 172 0.013488662 ubox
41 174 0.008257396 ubox
41 176 0.006480013 ubox
41 178 0.010553937 ubox
41 180 0.018055689 ubox
41 182 0.658564550 ubox
42 168 0.927974565 ubox
42 171 0.009804104 ubox
42 173 0.006022855 ubox
42 175 0.004715708 ubox
42 177 0.007682694 ubox
42 179 0.013462589 ubox
42 181 0.363027443 ubox
43 167 0.999903078 ubox
44 166 0.999988854 ubox
45 165 0.999593712 ubox
46 163 0.003835530 ubox
46 164 0.998571627 ubox
47 163 0.998848371 ubox
48 162 0.998769122 ubox
49 156 0.993655853 ubox
49 158 0.023852446 ubox
49 160 0.066384999 ubox
50 155 0.999102667 ubox
50 157 0.014873943 ubox
50 159 0.039124739 ubox
51 154 0.999969959 ubox
51 155 0.006753595 ubox
52 153 0.999976665 ubox
52 154 0.004797445 ubox
53 152 0.999690604 ubox
54 151 0.999476832 ubox
55 150 0.999051956 ubox
56 149 0.999431627 ubox
57 148 0.998299076 ubox
58 119 0.999353557 ubox
59 118 0.999977946 ubox
60 117 0.999953328 ubox
61 116 0.999055655 ubox
62 115 0.992645488 ubox
63 114 0.986809158 ubox
64 89 0.681046541 ubox
64 90 0.031457092 ubox
64 91 0.009379263 ubox
64 92 0.006806278 ubox
64 93 0.004893560 ubox
64 94 0.003816539 ubox
64 108 0.003787467 ubox
64 109 0.004869491 ubox
64 110 0.006818366 ubox
64 111 0.009427352 ubox
64 112 0.034858058 ubox
64 113 0.729511838 ubox
65 88 0.991331978 ubox
66 87 0.998385915 ubox
67 86 0.999504891 ubox
68 85 0.999987870 ubox
69 84 0.999994874 ubox
70 83 0.999991864 ubox
71 82 0.999645916 ubox
72 81 0.999514372 ubox
73 80 0.999964743 ubox
74 79 0.998928271 ubox
75 78 0.989970245 ubox
76 77 0.935323764 ubox
168 176 0.004314794 ubox
168 178 0.003409947 ubox
169 175 0.005307665 ubox
169 177 0.004179167 ubox
169 179 0.003398299 ubox
170 177 0.007814837 ubox
170 179 0.021947000 ubox
170 181 0.050993864 ubox
171 176 0.007518679 ubox
171 178 0.023196880 ubox
171 180 0.054895875 ubox
171 182 0.043831889 ubox
172 177 0.021695780 ubox
172 179 0.054995828 ubox
172 181 0.048971768 ubox
173 178 0.049636226 ubox
173 180 0.049139605 ubox
173 182 0.015681677 ubox
174 179 0.045597763 ubox
174 181 0.017359718 ubox
175 180 0.015860768 ubox
175 182 0.006193023 ubox
176 181 0.006408316 ubox
1 222 0.9746794 lbox
2 221 0.9746794 lbox
3 220 0.9746794 lbox
4 219 0.9746794 lbox
5 218 0.9746794 lbox
6 217 0.9746794 lbox
7 216 0.9746794 lbox
8 215 0.9746794 lbox
9 214 0.9746794 lbox
10 213 0.9746794 lbox
11 212 0.9746794 lbox
12 211 0.9746794 lbox
13 210 0.9746794 lbox
14 209 0.9746794 lbox
15 208 0.9746794 lbox
16 207 0.9746794 lbox
17 206 0.9746794 lbox
18 205 0.9746794 lbox
19 204 0.9746794 lbox
20 203 0.9746794 lbox
21 202 0.9746794 lbox
22 201 0.9746794 lbox
23 200 0.9746794 lbox
24 199 0.9746794 lbox
25 198 0.9746794 lbox
26 197 0.9746794 lbox
27 196 0.9746794 lbox
28 195 0.9746794 lbox
29 194 0.9746794 lbox
30 193 0.9746794 lbox
31 192 0.9746794 lbox
32 191 0.9746794 lbox
33 190 0.9746794 lbox
34 189 0.9746794 lbox
35 188 0.9746794 lbox
36 187 0.9746794 lbox
37 186 0.9746794 lbox
38 185 0.9746794 lbox
39 184 0.9746794 lbox
40 183 0.9746794 lbox
41 169 0.9746794 lbox
42 168 0.9746794 lbox
43 167 0.9746794 lbox
44 166 0.9746794 lbox
45 165 0.9746794 lbox
46 164 0.9746794 lbox
47 163 0.9746794 lbox
48 162 0.9746794 lbox
49 156 0.9746794 lbox
50 155 0.9746794 lbox
51 154 0.9746794 lbox
52 153 0.9746794 lbox
53 152 0.9746794 lbox
54 151 0.9746794 lbox
55 150 0.9746794 lbox
56 149 0.9746794 lbox
57 148 0.9746794 lbox
58 119 0.9746794 lbox
59 118 0.9746794 lbox
60 117 0.9746794 lbox
61 116 0.9746794 lbox
62 115 0.9746794 lbox
63 114 0.9746794 lbox
64 113 0.9746794 lbox
65 88 0.9746794 lbox
66 87 0.9746794 lbox
67 86 0.9746794 lbox
68 85 0.9746794 lbox
69 84 0.9746794 lbox
70 83 0.9746794 lbox
71 82 0.9746794 lbox
72 81 0.9746794 lbox
73 80 0.9746794 lbox
74 79 0.9746794 lbox
75 78 0.9746794 lbox
showpage
end
%%EOF
