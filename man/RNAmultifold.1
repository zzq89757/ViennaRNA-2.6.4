.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.1.
.TH RNAMULTIFOLD "1" "September 2023" "RNAmultifold 2.6.4" "User Commands"
.SH NAME
RNAmultifold \- manual page for RNAmultifold 2.6.4
.SH SYNOPSIS
.B RNAmultifold
[\fI\,OPTION\/\fR]... [\fI\,FILE\/\fR]...
.SH DESCRIPTION
RNAmultifold 2.6.4
.PP
Compute secondary structures of multiple interacting RNAs
.PP
The program works much like RNAfold, but allows one to specify multiple RNA
sequences which are then allowed to form conncected components. RNA sequences
are read from stdin in the usual format, i.e. each line of input corresponds to
one sequence, except for lines starting with ">" which contain the name of
the next sequence(s).
Multiple strands must be concatenated using the \e'&\e' character as separator.
RNAmultifold can compute MFE, partition function, corresponding ensemble free
energy and base pairing probabilities. These properties are either computed for
a particular arrangement (concatenation) of sequences, for the full ensemble of
the complex of input RNAs, or all complexes formed by the input sequences up to
a specified number of interacting sequences.
Output consists of a PostScript "dot plot" file containing the pair
probabilities, see the RNAfold man page for details.
The program will continue to read new sequences until a line consisting of the
single character '@' or an end of file condition is encountered.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-detailed\-help\fR
Print help, including all details and hidden
options, and exit
.TP
\fB\-\-full\-help\fR
Print help, including hidden options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be verbose.
.IP
(default=off)
.SS "I/O Options:"
.IP
Command line options for input and output (pre\-)processing
.TP
\fB\-j\fR, \fB\-\-jobs\fR[=\fI\,number\/\fR]
Split batch input into jobs and start
processing in parallel using multiple
threads. A value of 0 indicates to use as
many parallel threads as computation cores
are available.
.IP
(default=`0')
.IP
Default processing of input data is performed in a serial fashion, i.e. one
sequence pair at a time. Using this switch, a user can instead start the
computation for many sequence pairs in the input in parallel. RNAmultifold
will create as many parallel computation slots as specified and assigns input
sequences of the input file(s) to the available slots. Note, that this
increases memory consumption since input alignments have to be kept in memory
until an empty compute slot is available and each running job requires its
own dynamic programming matrices.
.TP
\fB\-\-unordered\fR
Do not try to keep output in order with input
while parallel processing is in place.
.IP
(default=off)
.IP
When parallel input processing (\fB\-\-jobs\fR flag) is enabled, the order in which
input is processed depends on the host machines job scheduler. Therefore, any
output to stdout or files generated by this program will most likely not
follow the order of the corresponding input data set. The default of
RNAmultifold is to use a specialized data structure to still keep the results
output in order with the input data. However, this comes with a trade\-off in
terms of memory consumption, since all output must be kept in memory for as
long as no chunks of consecutive, ordered output are available. By setting
this flag, RNAmultifold will not buffer individual results but print them as
soon as they have been computated.
.TP
\fB\-\-noconv\fR
Do not automatically substitute nucleotide
"T" with "U".
.IP
(default=off)
.TP
\fB\-\-auto\-id\fR
Automatically generate an ID for each sequence.
(default=off)
.IP
The default mode of RNAmultifold is to automatically determine an ID from the
input sequence data if the input file format allows to do that. Sequence IDs
are usually given in the FASTA header of input sequences. If this flag is
active, RNAmultifold ignores any IDs retrieved from the input and
automatically generates an ID for each sequence. This ID consists of a prefix
and an increasing number. This flag can also be used to add a FASTA header to
the output even if the input has none.
.TP
\fB\-\-id\-prefix\fR=\fI\,STRING\/\fR
Prefix for automatically generated IDs (as used
in output file names).
.IP
(default=`sequence')
.IP
If this parameter is set, each sequence will be prefixed with the provided
string. Hence, the output files will obey the following naming scheme:
"prefix_xxxx_ss.ps" (secondary structure plot), "prefix_xxxx_dp.ps"
(dot\-plot), "prefix_xxxx_dp2.ps" (stack probabilities), etc. where xxxx is
the sequence number. Note: Setting this parameter implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-delim\fR=\fI\,CHAR\/\fR
Change the delimiter between prefix and
increasing number for automatically generated
IDs (as used in output file names).
.IP
(default=`_')
.IP
This parameter can be used to change the default delimiter "_" between the
prefix string and the increasing number for automatically generated ID.
.TP
\fB\-\-id\-digits\fR=\fI\,INT\/\fR
Specify the number of digits of the counter in
automatically generated alignment IDs.
.IP
(default=`4')
.IP
When alignments IDs are automatically generated, they receive an increasing
number, starting with 1. This number will always be left\-padded by leading
zeros, such that the number takes up a certain width. Using this parameter,
the width can be specified to the users need. We allow numbers in the range
[1:18]. This option implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-start\fR=\fI\,LONG\/\fR
Specify the first number in automatically
generated IDs.
.IP
(default=`1')
.IP
When sequence IDs are automatically generated, they receive an increasing
number, usually starting with 1. Using this parameter, the first number can
be specified to the users requirements. Note: negative numbers are not
allowed.
Note: Setting this parameter implies to ignore any IDs retrieved from the
input data, i.e. it activates the \fB\-\-auto\-id\fR flag.
.TP
\fB\-\-filename\-delim\fR=\fI\,CHAR\/\fR
Change the delimiting character used in
sanitized filenames.
.IP
(default=`ID\-delimiter')
.IP
This parameter can be used to change the delimiting character used while
sanitizing filenames, i.e. replacing invalid characters. Note, that the
default delimiter ALWAYS is the first character of the "ID delimiter" as
supplied through the \fB\-\-id\-delim\fR option. If the delimiter is a whitespace
character or empty, invalid characters will be simply removed rather than
substituted. Currently, we regard the following characters as illegal for use
in filenames: backslash '\e', slash '/', question mark '?', percent sign '%',
asterisk '*', colon ':', pipe symbol '|', double quote '"', triangular
brackets '<' and '>'.
.TP
\fB\-\-filename\-full\fR
Use full FASTA header to create filenames.
(default=off)
.IP
This parameter can be used to deactivate the default behavior of limiting
output filenames to the first word of the sequence ID. Consider the following
example: An input with FASTA header '>NM_0001 Homo Sapiens some gene' usually
produces output files with the prefix "NM_0001" without the additional data
available in the FASTA header, e.g. "NM_0001_ss.ps" for secondary structure
plots. With this flag set, no truncation of the output filenames is done,
i.e. output filenames receive the full FASTA header data as prefixes. Note,
however, that invalid characters (such as whitespace) will be substituted by
a delimiting character or simply removed, (see also the parameter option
\fB\-\-filename\-delim\fR).
.SS "Algorithms:"
.IP
Select additional algorithms which should be included in the calculations.
The Minimum free energy (MFE) and a structure representative are calculated
in any case.
.TP
\fB\-p\fR, \fB\-\-partfunc\fR[=\fI\,INT\/\fR]
Calculate the partition function and base
pairing probability matrix in addition to the
MFE structure. Default is calculation of mfe
structure only.
.IP
(default=`1')
.IP
In addition to the MFE structure we print a coarse representation of the pair
probabilities in form of a pseudo bracket notation, followed by the ensemble
free energy.
Note that unless you also specify \fB\-d2\fR or \fB\-d0\fR, the partition function and mfe
calculations will use a slightly different energy model. See the discussion
of dangling end options below.
.IP
An additionally passed value to this option changes the behavior of partition
function calculation:
.IP
In order to calculate the partition function but not the pair probabilities
.IP
use the \fB\-p0\fR option and save about
.IP
50% in runtime. This prints the ensemble free energy 'dG=\-kT ln(Z)'.
.TP
\fB\-a\fR, \fB\-\-all_pf\fR[=\fI\,INT\/\fR]
Compute the partition function and free
energies not only for the complex formed by
the input sequences (the "ABC... mutimer"),
but also of all complexes formed by the input
sequences up to the number of input
sequences, e.g. AAA, AAB, ABB, BBB, etc.
.IP
(default=`1')
.IP
The output will contain the free energies for each of these species. Using \fB\-a\fR
automatically switches on the \fB\-p\fR option.
.TP
\fB\-c\fR, \fB\-\-concentrations\fR
In addition to everything listed under the \fB\-a\fR
option, read in initial monomer
concentrations and compute the expected
equilibrium concentrations of all possible
species (A, B, AA, BB, AB, etc).
.IP
(default=off)
.IP
Start concentrations are read from stdin (unless the \fB\-f\fR option is used) in
[mol/l], equilibrium concentrations are given realtive to the sum of the
inputs. An arbitrary number of initial concentrations can be specified (one
tuple of concentrations per line).
.TP
\fB\-f\fR, \fB\-\-concfile\fR=\fI\,filename\/\fR
Specify a file with initial concentrations for
the input sequences.
.IP
The table consits of arbitrary many lines with multiple numbers separated by
whitespace (the concentration of the input sequences A, B, C, etc.). This
option will automatically toggle the \fB\-c\fR (and thus \fB\-a\fR and \fB\-p\fR) options (see
above).
.TP
\fB\-\-absolute\-concentrations\fR Report absolute instead of relative
concentrations
.IP
(default=off)
.TP
\fB\-\-betaScale\fR=\fI\,DOUBLE\/\fR
Set the scaling of the Boltzmann factors.
(default=`1.')
.IP
The argument provided with this option is used to scale the thermodynamic
temperature in the Boltzmann factors independently from the temperature of
the individual loop energy contributions. The Boltzmann factors then become
\&'exp(\- dG/(kT*betaScale))' where 'k' is the Boltzmann constant, 'dG' the free
energy contribution of the state and 'T' the absolute temperature.
.TP
\fB\-S\fR, \fB\-\-pfScale\fR=\fI\,DOUBLE\/\fR
In the calculation of the pf use scale*mfe as
an estimate for the ensemble free energy
(used to avoid overflows).
.IP
(default=`1.07')
.IP
The default is 1.07, useful values are 1.0 to 1.2. Occasionally needed for
long sequences.
.TP
\fB\-\-bppmThreshold\fR=\fI\,cutoff\/\fR
Set the threshold/cutoff for base pair
probabilities included in the postscript
output.
.IP
(default=`1e\-5')
.IP
By setting the threshold the base pair probabilities that are included in the
output can be varied. By default only those exceeding '1e\-5' in probability
will be shown as squares in the dot plot. Changing the threshold to any other
value allows for increase or decrease of data.
.TP
\fB\-g\fR, \fB\-\-gquad\fR
Incoorporate G\-Quadruplex formation into the
structure prediction algorithm.
.IP
(default=off)
.IP
Note, only intramolecular G\-quadruplexes are considered.
.SS "Structure Constraints:"
.IP
Command line options to interact with the structure constraints feature of
this program
.TP
\fB\-\-maxBPspan\fR=\fI\,INT\/\fR
Set the maximum base pair span.
.IP
(default=`\-1')
.TP
\fB\-\-commands\fR=\fI\,filename\/\fR
Read additional commands from file
.IP
Commands include hard and soft constraints, but also structure motifs in
hairpin and interior loops that need to be treeted differently. Furthermore,
commands can be set for unstructured and structured domains.
.SS "Energy Parameters:"
.IP
Energy parameter sets can be adapted or loaded from user\-provided input files
.TP
\fB\-T\fR, \fB\-\-temp\fR=\fI\,DOUBLE\/\fR
Rescale energy parameters to a temperature of
temp C. Default is 37C.
.IP
(default=`37.0')
.TP
\fB\-P\fR, \fB\-\-paramFile\fR=\fI\,paramfile\/\fR
Read energy parameters from paramfile, instead
of using the default parameter set.
.IP
Different sets of energy parameters for RNA and DNA should accompany your
distribution.
See the RNAlib documentation for details on the file format. The placeholder
file name 'DNA' can be used to load DNA parameters without the need to
actually specify any input file.
.TP
\fB\-4\fR, \fB\-\-noTetra\fR
Do not include special tabulated stabilizing
energies for tri\-, tetra\- and hexaloop
hairpins.
.IP
(default=off)
.IP
Mostly for testing.
.TP
\fB\-\-salt\fR=\fI\,DOUBLE\/\fR
Set salt concentration in molar (M). Default is
1.021M.
.SS "Model Details:"
.IP
Tweak the energy model and pairing rules additionally using the following
parameters
.TP
\fB\-d\fR, \fB\-\-dangles\fR=\fI\,INT\/\fR
How to treat "dangling end" energies for
bases adjacent to helices in free ends and
multi\-loops.
.IP
(default=`2')
.IP
With \fB\-d1\fR only unpaired bases can participate in at most one dangling end.
With \fB\-d2\fR this check is ignored, dangling energies will be added for the bases
adjacent to a helix on both sides in any case; this is the default for mfe
and partition function folding (\fB\-p\fR).
The option \fB\-d0\fR ignores dangling ends altogether (mostly for debugging).
With \fB\-d3\fR mfe folding will allow coaxial stacking of adjacent helices in
multi\-loops. At the moment the implementation will not allow coaxial stacking
of the two interior pairs in a loop of degree 3 and works only for mfe
folding.
.IP
Note that with \fB\-d1\fR and \fB\-d3\fR only the MFE computations will be using this
setting while partition function uses \fB\-d2\fR setting, i.e. dangling ends will be
treated differently.
.TP
\fB\-\-noLP\fR
Produce structures without lonely pairs
(helices of length 1).
.IP
(default=off)
.IP
For partition function folding this only disallows pairs that can only occur
isolated. Other pairs may still occasionally occur as helices of length 1.
.TP
\fB\-\-noGU\fR
Do not allow GU pairs.
.IP
(default=off)
.TP
\fB\-\-noClosingGU\fR
Do not allow GU pairs at the end of helices.
.IP
(default=off)
.TP
\fB\-\-nsp\fR=\fI\,STRING\/\fR
Allow other pairs in addition to the usual
AU,GC,and GU pairs.
.IP
Its argument is a comma separated list of additionally allowed pairs. If the
first character is a "\-" then AB will imply that AB and BA are allowed
pairs, e.g. \fB\-\-nsp=\fR"\-GA"  will allow GA and AG pairs. Nonstandard pairs are
given 0 stacking energy.
.TP
\fB\-e\fR, \fB\-\-energyModel\fR=\fI\,INT\/\fR
Set energy model.
.IP
Rarely used option to fold sequences from the artificial ABCD... alphabet,
where A pairs B, C\-D etc.  Use the energy parameters for GC (\fB\-e\fR 1) or AU (\fB\-e\fR
2) pairs.
.TP
\fB\-\-helical\-rise\fR=\fI\,FLOAT\/\fR
Set the helical rise of the helix in units of
Angstrom.
.IP
(default=`2.8')
.IP
Use with caution! This value will be re\-set automatically to 3.4 in case DNA
parameters are loaded via \fB\-P\fR DNA and no further value is provided.
.TP
\fB\-\-backbone\-length\fR=\fI\,FLOAT\/\fR
Set the average backbone length for looped
regions in units of Angstrom.
.IP
(default=`6.0')
.IP
Use with caution! This value will be re\-set automatically to 6.76 in case DNA
parameters are loaded via \fB\-P\fR DNA and no further value is provided.
.SH REFERENCES
.I If you use this program in your work you might want to cite:

R. Lorenz, S.H. Bernhart, C. Hoener zu Siederdissen, H. Tafer, C. Flamm, P.F. Stadler and I.L. Hofacker (2011),
"ViennaRNA Package 2.0",
Algorithms for Molecular Biology: 6:26 

I.L. Hofacker, W. Fontana, P.F. Stadler, S. Bonhoeffer, M. Tacker, P. Schuster (1994),
"Fast Folding and Comparison of RNA Secondary Structures",
Monatshefte f. Chemie: 125, pp 167-188

R. Lorenz, I.L. Hofacker, P.F. Stadler (2016),
"RNA folding with hard and soft constraints",
Algorithms for Molecular Biology 11:1 pp 1-13

.I The energy parameters are taken from:

D.H. Mathews, M.D. Disney, D. Matthew, J.L. Childs, S.J. Schroeder, J. Susan, M. Zuker, D.H. Turner (2004),
"Incorporating chemical modification constraints into a dynamic programming algorithm for prediction of RNA secondary structure",
Proc. Natl. Acad. Sci. USA: 101, pp 7287-7292

D.H Turner, D.H. Mathews (2009),
"NNDB: The nearest neighbor parameter database for predicting stability of nucleic acid secondary structure",
Nucleic Acids Research: 38, pp 280-282
.SH "REPORTING BUGS"

If in doubt our program is right, nature is at fault.
Comments should be sent to rna@tbi.univie.ac.at.
