.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.1.
.TH RNASUBOPT "1" "September 2023" "RNAsubopt 2.6.4" "User Commands"
.SH NAME
RNAsubopt \- manual page for RNAsubopt 2.6.4
.SH SYNOPSIS
.B RNAsubopt
[\fI\,OPTION\/\fR]...
.SH DESCRIPTION
RNAsubopt 2.6.4
.PP
calculate suboptimal secondary structures of RNAs
.PP
Reads RNA sequences from stdin and (in the default \fB\-e\fR mode) calculates all
suboptimal secondary structures within a user defined energy range above the
minimum free energy (mfe). It prints the suboptimal structures in dot\-bracket
notation followed by the energy in kcal/mol to stdout. Be careful, the number
of structures returned grows exponentially with both sequence length and energy
range.
.PP
Alternatively, when used with the \fB\-p\fR option, RNAsubopt produces Boltzmann
weighted samples of secondary structures.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-detailed\-help\fR
Print help, including all details and hidden
options, and exit
.TP
\fB\-\-full\-help\fR
Print help, including hidden options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be verbose.
.IP
(default=off)
.SS "I/O Options:"
.IP
Command line options for input and output (pre\-)processing
.TP
\fB\-i\fR, \fB\-\-infile\fR=\fI\,filename\/\fR
Read a file instead of reading from stdin.
.IP
The default behavior of RNAsubopt is to read input from stdin. Using this
parameter the user can specify an input file name where data is read from.
.TP
\fB\-o\fR, \fB\-\-outfile\fR[=\fI\,filename\/\fR]
Print output to file instead of stdout.
.IP
This option may be used to write all output to output files rather than
printing to stdout. The default filename is "RNAsubopt_output.sub" if no
FASTA header precedes the input sequences and the \fB\-\-auto\-id\fR feature is
inactive. Otherwise, output files with the scheme "prefix.sub" are
generated, where the "prefix" is taken from the sequence id. The user may
specify a single output file name for all data generated from the input by
supplying an optional string as argument to this parameter. In case a file
with the same filename already exists, any output of the program will be
appended to it. Note: Any special characters in the filename will be replaced
by the filename delimiter, hence there is no way to pass an entire directory
path through this option yet. (See also the "\-\-filename\-delim" parameter)
.TP
\fB\-\-noconv\fR
Do not automatically substitute nucleotide
"T" with "U".
.IP
(default=off)
.TP
\fB\-\-auto\-id\fR
Automatically generate an ID for each sequence.
(default=off)
.IP
The default mode of RNAsubopt is to automatically determine an ID from the
input sequence data if the input file format allows to do that. Sequence IDs
are usually given in the FASTA header of input sequences. If this flag is
active, RNAsubopt ignores any IDs retrieved from the input and automatically
generates an ID for each sequence. This ID consists of a prefix and an
increasing number. This flag can also be used to add a FASTA header to the
output even if the input has none.
.TP
\fB\-\-id\-prefix\fR=\fI\,STRING\/\fR
Prefix for automatically generated IDs (as used
in output file names).
.IP
(default=`sequence')
.IP
If this parameter is set, each sequences' FASTA id will be prefixed with the
provided string. FASTA ids then take the form ">prefix_xxxx" where xxxx is
the sequence number. Note: Setting this parameter implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-delim\fR=\fI\,CHAR\/\fR
Change the delimiter between prefix and
increasing number for automatically generated
IDs (as used in output file names).
.IP
(default=`_')
.IP
This parameter can be used to change the default delimiter "_" between the
prefix string and the increasing number for automatically generated ID.
.TP
\fB\-\-id\-digits\fR=\fI\,INT\/\fR
Specify the number of digits of the counter in
automatically generated alignment IDs.
.IP
(default=`4')
.IP
When alignments IDs are automatically generated, they receive an increasing
number, starting with 1. This number will always be left\-padded by leading
zeros, such that the number takes up a certain width. Using this parameter,
the width can be specified to the users need. We allow numbers in the range
[1:18]. This option implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-start\fR=\fI\,LONG\/\fR
Specify the first number in automatically
generated IDs.
.IP
(default=`1')
.IP
When sequence IDs are automatically generated, they receive an increasing
number, usually starting with 1. Using this parameter, the first number can
be specified to the users requirements. Note: negative numbers are not
allowed.
Note: Setting this parameter implies to ignore any IDs retrieved from the
input data, i.e. it activates the \fB\-\-auto\-id\fR flag.
.TP
\fB\-\-filename\-delim\fR=\fI\,CHAR\/\fR
Change the delimiting character used in
sanitized filenames.
.IP
(default=`ID\-delimiter')
.IP
This parameter can be used to change the delimiting character used while
sanitizing filenames, i.e. replacing invalid characters. Note, that the
default delimiter ALWAYS is the first character of the "ID delimiter" as
supplied through the \fB\-\-id\-delim\fR option. If the delimiter is a whitespace
character or empty, invalid characters will be simply removed rather than
substituted. Currently, we regard the following characters as illegal for use
in filenames: backslash '\e', slash '/', question mark '?', percent sign '%',
asterisk '*', colon ':', pipe symbol '|', double quote '"', triangular
brackets '<' and '>'.
.TP
\fB\-\-filename\-full\fR
Use full FASTA header to create filenames.
(default=off)
.IP
This parameter can be used to deactivate the default behavior of limiting
output filenames to the first word of the sequence ID. Consider the following
example: An input with FASTA header '>NM_0001 Homo Sapiens some gene' usually
produces output files with the prefix "NM_0001" without the additional data
available in the FASTA header, e.g. "NM_0001.sub". With this flag set, no
truncation of the output filenames is performed, i.e. output filenames
receive the full FASTA header data as prefixes. Note, however, that invalid
characters (such as whitespace) will be substituted by a delimiting character
or simply removed, (see also the parameter option \fB\-\-filename\-delim\fR).
.SS "Algorithms:"
.IP
Select the algorithms which should be applied to the given RNA sequence(s).
.TP
\fB\-e\fR, \fB\-\-deltaEnergy\fR=\fI\,range\/\fR
Compute suboptimal structures with energy in a
certain range of the optimum (kcal/mol).
.IP
Default is calculation of mfe structure only.
.TP
\fB\-\-deltaEnergyPost\fR=\fI\,range\/\fR
Only print structures with energy within range
of the mfe after post reevaluation of
energies.
.IP
Useful in conjunction with \fB\-logML\fR, \fB\-d1\fR or \fB\-d3\fR: while the \fB\-e\fR option specifies
the range before energies are re\-evaluated, this option specifies the maximum
energy after re\-evaluation.
.TP
\fB\-s\fR, \fB\-\-sorted\fR
Sort the suboptimal structures by energy and
lexicographical order.
.IP
(default=off)
.IP
Structures are first sorted by energy in ascending order. Within groups of
the same energy, structures are then sorted in ascending in lexicographical
order of their dot\-bracket notation. See the \fB\-\-en\-only\fR flag to deactivate
this second step. Note that sorting is done in memory, thus it can easily
lead to exhaution of RAM! This is especially true if the number of structures
produced becomes large or the RNA sequence is rather long. In such cases
better use an external sort method, such as UNIX "sort".
.TP
\fB\-\-en\-only\fR
Only sort structures by free energy.
(default=off)
.IP
In combination with \fB\-\-sorted\fR, this flag deactivates the second sorting
criteria and sorts structures solely by their free energy instead of
additionally sorting by lexicographic order in each energy band. This might
save some time during the sorting process in situations where lexicographic
order is not required.
.TP
\fB\-p\fR, \fB\-\-stochBT\fR=\fI\,number\/\fR
Randomly draw structures according to their
probability in the Boltzmann ensemble.
.IP
Instead of producing all suboptimals in an energy range, produce a random
sample of suboptimal structures, drawn with probabilities equal to their
Boltzmann weights via stochastic backtracking in the partition function. The
\fB\-e\fR and \fB\-p\fR options are mutually exclusive.
.TP
\fB\-\-stochBT_en\fR=\fI\,number\/\fR
Same as "\-\-stochBT" but also print free
energies and probabilities of the backtraced
structures.
.TP
\fB\-\-betaScale\fR=\fI\,DOUBLE\/\fR
Set the scaling of the Boltzmann factors.
(default=`1.')
.IP
The argument provided with this option is used to scale the thermodynamic
temperature in the Boltzmann factors independently from the temperature of
the individual loop energy contributions. The Boltzmann factors then become
\&'exp(\- dG/(kT*betaScale))' where 'k' is the Boltzmann constant, 'dG' the free
energy contribution of the state and 'T' the absolute temperature.
.TP
\fB\-N\fR, \fB\-\-nonRedundant\fR
Enable non\-redundant sampling strategy.
.IP
(default=off)
.TP
\fB\-S\fR, \fB\-\-pfScale\fR=\fI\,DOUBLE\/\fR
In the calculation of the pf use scale*mfe as
an estimate for the ensemble free energy
(used to avoid overflows).
.IP
(default=`1.07')
.IP
The default is 1.07, useful values are 1.0 to 1.2. Occasionally needed for
long sequences.
.TP
\fB\-c\fR, \fB\-\-circ\fR
Assume a circular (instead of linear) RNA
molecule.
.IP
(default=off)
.TP
\fB\-D\fR, \fB\-\-dos\fR
Compute density of states instead of secondary
structures.
.IP
(default=off)
.IP
This option enables the evaluation of the number of secondary structures in
certain energy bands around the MFE.
.TP
\fB\-z\fR, \fB\-\-zuker\fR
Compute Zuker suboptimals instead of all
suboptimal structures within an energy band
around the MFE.
.IP
(default=off)
.TP
\fB\-g\fR, \fB\-\-gquad\fR
Incoorporate G\-Quadruplex formation.
(default=off)
.IP
No support of G\-quadruplex prediction for stochastic backtracking and
Zuker\-style suboptimals yet).
.SS "Structure Constraints:"
.IP
Command line options to interact with the structure constraints feature of
this program
.TP
\fB\-\-maxBPspan\fR=\fI\,INT\/\fR
Set the maximum base pair span.
.IP
(default=`\-1')
.TP
\fB\-C\fR, \fB\-\-constraint\fR[=\fI\,filename\/\fR]
Calculate structures subject to constraints.
(default=`')
.IP
The program reads first the sequence, then a string containing constraints on
the structure encoded with the symbols:
.IP
\&'.' (no constraint for this base)
.IP
\&'|' (the corresponding base has to be paired
.IP
\&'x' (the base is unpaired)
.IP
\&'<' (base i is paired with a base j>i)
.IP
\&'>' (base i is paired with a base j<i)
.IP
and matching brackets '(' ')' (base i pairs base j)
.IP
With the exception of '|', constraints will disallow all pairs conflicting
with the constraint. This is usually sufficient to enforce the constraint,
but occasionally a base may stay unpaired in spite of constraints. PF folding
ignores constraints of type '|'.
.TP
\fB\-\-batch\fR
Use constraints for multiple sequences.
(default=off)
.IP
Usually, constraints provided from input file only apply to a single input
sequence. Therefore, RNAsubopt will stop its computation and quit after the
first input sequence was processed. Using this switch, RNAsubopt processes
multiple input sequences and applies the same provided constraints to each of
them.
.TP
\fB\-\-canonicalBPonly\fR
Remove non\-canonical base pairs from the
structure constraint.
.IP
(default=off)
.TP
\fB\-\-enforceConstraint\fR
Enforce base pairs given by round brackets '('
\&')' in structure constraint.
.IP
(default=off)
.TP
\fB\-\-shape\fR=\fI\,filename\/\fR
Use SHAPE reactivity data to guide structure
predictions.
.TP
\fB\-\-shapeMethod\fR=\fI\,method\/\fR
Select SHAPE reactivity data incorporation
strategy.
.IP
(default=`D')
.IP
The following methods can be used to convert SHAPE reactivities into pseudo
energy contributions.
.IP
\&'D': Convert by using the linear equation according to Deigan et al 2009.
.IP
Derived pseudo energy terms will be applied for every nucleotide involved in
a stacked pair. This method is recognized by a capital 'D' in the provided
parameter, i.e.: \fB\-\-shapeMethod=\fR"D" is the default setting. The slope 'm'
and the intercept 'b' can be set to a non\-default value if necessary,
otherwise m=1.8 and b=\-0.6. To alter these parameters, e.g. m=1.9 and b=\-0.7,
use a parameter string like this: \fB\-\-shapeMethod=\fR"Dm1.9b\-0.7". You may also
provide only one of the two parameters like: \fB\-\-shapeMethod=\fR"Dm1.9" or
\fB\-\-shapeMethod=\fR"Db\-0.7".
.IP
\&'Z': Convert SHAPE reactivities to pseudo energies according to Zarringhalam
.IP
et al 2012. SHAPE reactivities will be converted to pairing probabilities by
using linear mapping. Aberration from the observed pairing probabilities will
be penalized during the folding recursion. The magnitude of the penalties can
affected by adjusting the factor beta (e.g. \fB\-\-shapeMethod=\fR"Zb0.8").
.IP
\&'W': Apply a given vector of perturbation energies to unpaired nucleotides
.IP
according to Washietl et al 2012. Perturbation vectors can be calculated by
using RNApvmin.
.TP
\fB\-\-shapeConversion\fR=\fI\,method\/\fR
Select method for SHAPE reactivity conversion.
.IP
(default=`O')
.IP
This parameter is useful when dealing with the SHAPE incorporation according
to Zarringhalam et al. The following methods can be used to convert SHAPE
reactivities into the probability for a certain nucleotide to be unpaired.
.IP
\&'M': Use linear mapping according to Zarringhalam et al.
\&'C': Use a cutoff\-approach to divide into paired and unpaired nucleotides
(e.g. "C0.25")
\&'S': Skip the normalizing step since the input data already represents
probabilities for being unpaired rather than raw reactivity values
\&'L': Use a linear model to convert the reactivity into a probability for
being unpaired (e.g. "Ls0.68i0.2" to use a slope of 0.68 and an intercept
of 0.2)
\&'O': Use a linear model to convert the log of the reactivity into a
probability for being unpaired (e.g. "Os1.6i\-2.29" to use a slope of 1.6
and an intercept of \fB\-2\fR.29)
.TP
\fB\-\-commands\fR=\fI\,filename\/\fR
Read additional commands from file
.IP
Commands include hard and soft constraints, but also structure motifs in
hairpin and interior loops that need to be treeted differently. Furthermore,
commands can be set for unstructured and structured domains.
.SS "Energy Parameters:"
.IP
Energy parameter sets can be adapted or loaded from user\-provided input files
.TP
\fB\-T\fR, \fB\-\-temp\fR=\fI\,DOUBLE\/\fR
Rescale energy parameters to a temperature of
temp C. Default is 37C.
.IP
(default=`37.0')
.TP
\fB\-P\fR, \fB\-\-paramFile\fR=\fI\,paramfile\/\fR
Read energy parameters from paramfile, instead
of using the default parameter set.
.IP
Different sets of energy parameters for RNA and DNA should accompany your
distribution.
See the RNAlib documentation for details on the file format. The placeholder
file name 'DNA' can be used to load DNA parameters without the need to
actually specify any input file.
.TP
\fB\-4\fR, \fB\-\-noTetra\fR
Do not include special tabulated stabilizing
energies for tri\-, tetra\- and hexaloop
hairpins.
.IP
(default=off)
.IP
Mostly for testing.
.TP
\fB\-\-salt\fR=\fI\,DOUBLE\/\fR
Set salt concentration in molar (M). Default is
1.021M.
.TP
\fB\-m\fR, \fB\-\-modifications\fR[=\fI\,STRING\/\fR]
Allow for modified bases within the RNA
sequence string.
.IP
(default=`7I6P9D')
.IP
Treat modified bases within the RNA sequence differently, i.e. use
corresponding energy corrections and/or pairing partner rules if available.
For that, the modified bases in the input sequence must be marked by their
corresponding one\-letter code. If no additional arguments are supplied, all
available corrections are performed. Otherwise, the user may limit the
modifications to a particular subset of modifications, resp. one\-letter
codes, e.g. \fB\-mP6\fR will only correct for pseudouridine and m6A bases.
.IP
Currently supported one\-letter codes and energy corrections are:
.IP
\&'7': 7\-deaza\-adenonsine (7DA)
.IP
\&'I': Inosine
.IP
\&'6': N6\-methyladenosine (m6A)
.IP
\&'P': Pseudouridine
.IP
\&'9': Purine (a.k.a. nebularine)
.IP
\&'D': Dihydrouridine
.TP
\fB\-\-mod\-file\fR=\fI\,STRING\/\fR
Use additional modified base data from JSON
file.
.SS "Model Details:"
.IP
Tweak the energy model and pairing rules additionally using the following
parameters
.TP
\fB\-d\fR, \fB\-\-dangles\fR=\fI\,INT\/\fR
How to treat "dangling end" energies for
bases adjacent to helices in free ends and
multi\-loops.
.IP
(default=`2')
.IP
With \fB\-d1\fR only unpaired bases can participate in at most one dangling end.
With \fB\-d2\fR this check is ignored, dangling energies will be added for the bases
adjacent to a helix on both sides in any case; this is the default for mfe
and partition function folding (\fB\-p\fR).
The option \fB\-d0\fR ignores dangling ends altogether (mostly for debugging).
With \fB\-d3\fR mfe folding will allow coaxial stacking of adjacent helices in
multi\-loops. At the moment the implementation will not allow coaxial stacking
of the two interior pairs in a loop of degree 3 and works only for mfe
folding.
.IP
Note that with \fB\-d1\fR and \fB\-d3\fR only the MFE computations will be using this
setting while partition function uses \fB\-d2\fR setting, i.e. dangling ends will be
treated differently.
.TP
\fB\-\-noLP\fR
Produce structures without lonely pairs
(helices of length 1).
.IP
(default=off)
.IP
For partition function folding this only disallows pairs that can only occur
isolated. Other pairs may still occasionally occur as helices of length 1.
.TP
\fB\-\-noGU\fR
Do not allow GU pairs.
.IP
(default=off)
.TP
\fB\-\-noClosingGU\fR
Do not allow GU pairs at the end of helices.
.IP
(default=off)
.TP
\fB\-\-logML\fR
Recompute energies of structures using a
logarithmic energy function for multi\-loops
before output.  (default=off)
.IP
This option does not effect structure generation, only the energies that are
printed out. Since logML lowers energies somewhat, some structures may be
missing.
.TP
\fB\-\-nsp\fR=\fI\,STRING\/\fR
Allow other pairs in addition to the usual
AU,GC,and GU pairs.
.IP
Its argument is a comma separated list of additionally allowed pairs. If the
first character is a "\-" then AB will imply that AB and BA are allowed
pairs, e.g. \fB\-\-nsp=\fR"\-GA"  will allow GA and AG pairs. Nonstandard pairs are
given 0 stacking energy.
.TP
\fB\-\-energyModel\fR=\fI\,INT\/\fR
Set energy model.
.IP
Rarely used option to fold sequences from the artificial ABCD... alphabet,
where A pairs B, C\-D etc.  Use the energy parameters for GC (\fB\-e\fR 1) or AU (\fB\-e\fR
2) pairs.
.TP
\fB\-\-helical\-rise\fR=\fI\,FLOAT\/\fR
Set the helical rise of the helix in units of
Angstrom.
.IP
(default=`2.8')
.IP
Use with caution! This value will be re\-set automatically to 3.4 in case DNA
parameters are loaded via \fB\-P\fR DNA and no further value is provided.
.TP
\fB\-\-backbone\-length\fR=\fI\,FLOAT\/\fR
Set the average backbone length for looped
regions in units of Angstrom.
.IP
(default=`6.0')
.IP
Use with caution! This value will be re\-set automatically to 6.76 in case DNA
parameters are loaded via \fB\-P\fR DNA and no further value is provided.
.SH REFERENCES
.I If you use this program in your work you might want to cite:

R. Lorenz, S.H. Bernhart, C. Hoener zu Siederdissen, H. Tafer, C. Flamm, P.F. Stadler and I.L. Hofacker (2011),
"ViennaRNA Package 2.0",
Algorithms for Molecular Biology: 6:26 

I.L. Hofacker, W. Fontana, P.F. Stadler, S. Bonhoeffer, M. Tacker, P. Schuster (1994),
"Fast Folding and Comparison of RNA Secondary Structures",
Monatshefte f. Chemie: 125, pp 167-188

R. Lorenz, I.L. Hofacker, P.F. Stadler (2016),
"RNA folding with hard and soft constraints",
Algorithms for Molecular Biology 11:1 pp 1-13

S. Wuchty, W. Fontana, I. L. Hofacker and P. Schuster (1999),
"Complete Suboptimal Folding of RNA and the Stability of Secondary Structures",
Biopolymers: 49, pp 145-165

M. Zuker (1989),
"On Finding All Suboptimal Foldings of an RNA Molecule",
Science 244.4900, pp 48-52

Y. Ding, and C.E. Lawrence (2003),
"A statistical sampling algorithm for RNA secondary structure prediction",
Nucleic Acids Research 31.24, pp 7280-7301

.I The energy parameters are taken from:

D.H. Mathews, M.D. Disney, D. Matthew, J.L. Childs, S.J. Schroeder, J. Susan, M. Zuker, D.H. Turner (2004),
"Incorporating chemical modification constraints into a dynamic programming algorithm for prediction of RNA secondary structure",
Proc. Natl. Acad. Sci. USA: 101, pp 7287-7292

D.H Turner, D.H. Mathews (2009),
"NNDB: The nearest neighbor parameter database for predicting stability of nucleic acid secondary structure",
Nucleic Acids Research: 38, pp 280-282
.SH AUTHOR

Ivo L Hofacker, Stefan Wuchty, Walter Fontana, Ronny Lorenz
.SH "REPORTING BUGS"

If in doubt our program is right, nature is at fault.
Comments should be sent to rna@tbi.univie.ac.at.
